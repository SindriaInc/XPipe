commit fb1d3acfe1a4d4674a8fb4f2c61598fd70ece614
Author: Luca Pitzoi <35993148+lucapitzoi@users.noreply.github.com>
Date:   Sun Nov 13 18:48:45 2022 +0100

    Update readme.md

diff --git a/readme.md b/readme.md
index 8a11d40..778f0d8 100644
--- a/readme.md
+++ b/readme.md
@@ -1,6 +1,6 @@
 # *WARNING REPOSITORY ARCHIVED*
 
-### The source code has been move [here](https://github.com/SindriaInc/XPipe/tree/master/BaseImages/php)
+### The source code has been moved [here](https://github.com/SindriaInc/XPipe/tree/master/BaseImages/php)
 
 # PHP
 

commit f1b25a80a67fcf7d2fd58d11b7766c344b4de503
Author: Luca Pitzoi <35993148+lucapitzoi@users.noreply.github.com>
Date:   Sun Nov 13 18:43:34 2022 +0100

    Update readme.md

diff --git a/readme.md b/readme.md
index 3ce57ac..8a11d40 100644
--- a/readme.md
+++ b/readme.md
@@ -1,3 +1,7 @@
+# *WARNING REPOSITORY ARCHIVED*
+
+### The source code has been move [here](https://github.com/SindriaInc/XPipe/tree/master/BaseImages/php)
+
 # PHP
 
 Sindria Base Image based on official alpine base image.

commit fbb33356af23b11713dd703ce8056a56bdafbc41
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Thu Jul 21 03:40:14 2022 +0200

    Update

diff --git a/build_all.sh b/build_all.sh
index c89c93e..0fbf26c 100644
--- a/build_all.sh
+++ b/build_all.sh
@@ -13,7 +13,7 @@ fi
 IMAGE_NAME=$1
 TAG_VERSION=$2
 
-for PHP_VERSION in 7.0 7.1 7.2 7.3 7.4 8.0 8.1
+for PHP_VERSION in 7.1 7.2 7.3 7.4 8.0 8.1
 do
 	# amd64
 	bash build.sh ${IMAGE_NAME} ${TAG_VERSION} ${PHP_VERSION} amd64
diff --git a/src/Dockerfile b/src/Dockerfile
index 26a7537..5089784 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -1,6 +1,6 @@
 ARG ARCH
 ARG TAG_SUFFIX
-FROM ${ARCH}/sindriainc/php:3.0.0-${TAG_SUFFIX}
+FROM sindriainc/php:3.0.0-${TAG_SUFFIX}-${ARCH}
 
 ARG TAG_VERSION
 ARG TAG_SUFFIX

commit 7638bfe9d9e83dc7a7d70f642329ae4db43f0486
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Thu Jul 21 03:37:59 2022 +0200

    Added multi arch with manifest

diff --git a/.github/workflows/docker-image.yml b/.github/workflows/docker-image.yml
index 25cab20..cb64a23 100644
--- a/.github/workflows/docker-image.yml
+++ b/.github/workflows/docker-image.yml
@@ -2,8 +2,8 @@ name: Docker Image CI
 
 on:
   push:
-    branches:
-      - 'local'
+    tags:
+      - '*'
 
 jobs:
 
@@ -15,6 +15,7 @@ jobs:
         run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
       - name: Set env slug
         run: echo "REPO_SLUG=php" >> $GITHUB_ENV
+      - uses: docker/setup-qemu-action@v2
       - name: Login into registry
         env:
           DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
diff --git a/bin/release.sh b/bin/release.sh
new file mode 100644
index 0000000..7cda21b
--- /dev/null
+++ b/bin/release.sh
@@ -0,0 +1,6 @@
+#!/usr/bin/env bash
+
+TAG_RELEASE=$1
+
+git tag -a ${TAG_RELEASE}
+git push origin ${TAG_RELEASE}
\ No newline at end of file
diff --git a/build.sh b/build.sh
index 1a35463..0a74adf 100644
--- a/build.sh
+++ b/build.sh
@@ -11,7 +11,12 @@ if [[ -z "$2" ]]; then
 fi
 
 if [[ -z "$3" ]]; then
-    echo "Provide a tag suffix as third argument (eg. 3.7)"
+    echo "Provide a tag suffix as third argument (eg. 7.4)"
+    exit 1
+fi
+
+if [[ -z "$4" ]]; then
+    echo "Provide a tag arch as fourth argument (eg. amd64, arm64)"
     exit 1
 fi
 
@@ -19,13 +24,15 @@ fi
 IMAGE_NAME=$1
 TAG_VERSION=$2
 TAG_SUFFIX=$3
+TAG_ARCH=$4
 
 HOST_USER_UID=1000
 TIMEZONE=Europe/Rome
 
 docker build ./src \
-    --tag ${IMAGE_NAME}:${TAG_VERSION}-${TAG_SUFFIX} \
+    --tag ${IMAGE_NAME}:${TAG_VERSION}-${TAG_SUFFIX}-${TAG_ARCH} \
     --tag ${IMAGE_NAME}:latest \
+     --build-arg ARCH=${TAG_ARCH} \
     --build-arg TAG_VERSION=${TAG_VERSION} \
     --build-arg TAG_SUFFIX=${TAG_SUFFIX} \
     --build-arg HOST_USER_UID=${HOST_USER_UID} \
diff --git a/build_all.sh b/build_all.sh
index b47acab..c89c93e 100644
--- a/build_all.sh
+++ b/build_all.sh
@@ -13,8 +13,16 @@ fi
 IMAGE_NAME=$1
 TAG_VERSION=$2
 
-for PHP_VERSION in 7.0 7.1 7.2 7.3 7.4 8
+for PHP_VERSION in 7.0 7.1 7.2 7.3 7.4 8.0 8.1
 do
-	bash build.sh ${IMAGE_NAME} ${TAG_VERSION} ${PHP_VERSION}
-  docker push ${IMAGE_NAME}:${TAG_VERSION}-${PHP_VERSION}
+	# amd64
+	bash build.sh ${IMAGE_NAME} ${TAG_VERSION} ${PHP_VERSION} amd64
+  docker push ${IMAGE_NAME}:${TAG_VERSION}-${PHP_VERSION}-amd64
+  # arm64
+	bash build.sh ${IMAGE_NAME} ${TAG_VERSION} ${PHP_VERSION} arm64v8
+  docker push ${IMAGE_NAME}:${TAG_VERSION}-${PHP_VERSION}-arm64v8
+
+  # manifest
+  docker manifest create ${IMAGE_NAME}:${TAG_VERSION}-${PHP_VERSION} --amend ${IMAGE_NAME}:${TAG_VERSION}-${PHP_VERSION}-amd64 --amend ${IMAGE_NAME}:${TAG_VERSION}-${PHP_VERSION}-arm64v8
+  docker manifest push ${IMAGE_NAME}:${TAG_VERSION}-${PHP_VERSION}
 done
\ No newline at end of file
diff --git a/readme.md b/readme.md
index 811700d..8f691c9 100644
--- a/readme.md
+++ b/readme.md
@@ -1,4 +1,12 @@
 # PHP
 
-A custom php base image with uid 1000.
+Sindria Base Image based on official alpine base image.
 
+## Platforms
+
+- amd64
+- arm64
+
+# Release
+
+Run utils script: `bash bin/release.sh <version>` eg. `bash bin/release.sh 1.0.0`
\ No newline at end of file
diff --git a/src/Dockerfile b/src/Dockerfile
index e84956e..26a7537 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -1,5 +1,6 @@
+ARG ARCH
 ARG TAG_SUFFIX
-FROM sindriainc/php:2.0.3-${TAG_SUFFIX}
+FROM ${ARCH}/sindriainc/php:3.0.0-${TAG_SUFFIX}
 
 ARG TAG_VERSION
 ARG TAG_SUFFIX
@@ -41,6 +42,8 @@ RUN curl -sS https://getcomposer.org/installer -o /tmp/composer-setup.php && \
     pecl install xdebug-3.0.0 || pecl install xdebug-2.6.0 && \
     apk del -f .build-deps && \
     touch /etc/php/conf.d/xdebug.ini && \
+    echo "zend_extension=/usr/lib/php7/modules/xdebug.so" >> /etc/php/conf.d/xdebug.ini && \
+    echo "" >> /etc/php/conf.d/xdebug.ini && \
     echo "xdebug.mode=${PHP_XDEBUG_MODE}" >> /etc/php/conf.d/xdebug.ini && \
     echo "xdebug.start_with_request=${PHP_XDEBUG_START_WITH_REQUEST}" >> /etc/php/conf.d/xdebug.ini && \
     echo "xdebug.client_host=${PHP_XDEBUG_HOST}" >> /etc/php/conf.d/xdebug.ini && \
@@ -55,4 +58,4 @@ RUN curl -sS https://getcomposer.org/installer -o /tmp/composer-setup.php && \
     chmod +x /usr/local/bin/phpcs && \
     chmod +x /usr/local/bin/phpcbf
 
-#USER ${SINDRIA_USER}
+#USER ${SINDRIA_USER}
\ No newline at end of file

commit 02d39dbfe392ff6397d28c57780bdfc2048f58a0
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Thu Jul 21 02:32:55 2022 +0200

    Update

diff --git a/bin/release.sh b/bin/release.sh
new file mode 100644
index 0000000..7cda21b
--- /dev/null
+++ b/bin/release.sh
@@ -0,0 +1,6 @@
+#!/usr/bin/env bash
+
+TAG_RELEASE=$1
+
+git tag -a ${TAG_RELEASE}
+git push origin ${TAG_RELEASE}
\ No newline at end of file
diff --git a/readme.md b/readme.md
index 811700d..3ce57ac 100644
--- a/readme.md
+++ b/readme.md
@@ -1,4 +1,13 @@
 # PHP
 
-A custom php base image with uid 1000.
+Sindria Base Image based on official alpine base image.
+
+## Platforms
+
+- amd64
+- arm64
+
+# Release
+
+Run utils script: `bash bin/release.sh <version>` eg. `bash bin/release.sh 1.0.0`
 

commit 9b4632c801aec2b4c8f9569a12191cd0c562ad5d
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Thu Jul 21 02:30:29 2022 +0200

    Added multi arch with manifest

diff --git a/.github/workflows/docker-image.yml b/.github/workflows/docker-image.yml
index 2237135..a1643f8 100644
--- a/.github/workflows/docker-image.yml
+++ b/.github/workflows/docker-image.yml
@@ -15,6 +15,7 @@ jobs:
       run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
     - name: Set env slug
       run: echo "REPO_SLUG=php" >> $GITHUB_ENV
+    - uses: docker/setup-qemu-action@v2
     - name: Login into registry
       env:
         DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
diff --git a/build.sh b/build.sh
index b8b9f6d..4e7d36b 100644
--- a/build.sh
+++ b/build.sh
@@ -11,21 +11,27 @@ if [[ -z "$2" ]]; then
 fi
 
 if [[ -z "$3" ]]; then
-    echo "Provide a tag suffix as third argument (eg. 3.7)"
+    echo "Provide a tag suffix as third argument (eg. 7.4)"
     exit 1
 fi
 
+if [[ -z "$4" ]]; then
+    echo "Provide a tag arch as fourth argument (eg. amd64, arm64)"
+    exit 1
+fi
 
 IMAGE_NAME=$1
 TAG_VERSION=$2
 TAG_SUFFIX=$3
+TAG_ARCH=$4
 
 HOST_USER_UID=1000
 TIMEZONE=Europe/Rome
 
 docker build ./src/php${TAG_SUFFIX} \
-    --tag ${IMAGE_NAME}:${TAG_VERSION}-${TAG_SUFFIX} \
+    --tag ${IMAGE_NAME}:${TAG_VERSION}-${TAG_SUFFIX}-${TAG_ARCH} \
     --tag ${IMAGE_NAME}:latest \
+    --build-arg ARCH=${TAG_ARCH} \
     --build-arg TAG_VERSION=${TAG_VERSION} \
     --build-arg TAG_SUFFIX=${TAG_SUFFIX} \
     --build-arg HOST_USER_UID=${HOST_USER_UID} \
diff --git a/build_all.sh b/build_all.sh
index b47acab..bcae73b 100644
--- a/build_all.sh
+++ b/build_all.sh
@@ -13,8 +13,16 @@ fi
 IMAGE_NAME=$1
 TAG_VERSION=$2
 
-for PHP_VERSION in 7.0 7.1 7.2 7.3 7.4 8
+for PHP_VERSION in 7.0 7.1 7.2 7.3 7.4 8.0 8.1
 do
-	bash build.sh ${IMAGE_NAME} ${TAG_VERSION} ${PHP_VERSION}
-  docker push ${IMAGE_NAME}:${TAG_VERSION}-${PHP_VERSION}
+  # amd64
+	bash build.sh ${IMAGE_NAME} ${TAG_VERSION} ${PHP_VERSION} amd64
+  docker push ${IMAGE_NAME}:${TAG_VERSION}-${PHP_VERSION}-amd64
+  # arm64
+	bash build.sh ${IMAGE_NAME} ${TAG_VERSION} ${PHP_VERSION} arm64v8
+  docker push ${IMAGE_NAME}:${TAG_VERSION}-${PHP_VERSION}-arm64v8
+  
+  # manifest
+  docker manifest create ${IMAGE_NAME}:${TAG_VERSION}-${PHP_VERSION} --amend ${IMAGE_NAME}:${TAG_VERSION}-${PHP_VERSION}-amd64 --amend ${IMAGE_NAME}:${TAG_VERSION}-${PHP_VERSION}-arm64v8
+  docker manifest push ${IMAGE_NAME}:${TAG_VERSION}-${PHP_VERSION}
 done
\ No newline at end of file
diff --git a/src/php7.0/Dockerfile b/src/php7.0/Dockerfile
index 10c4a63..89ab1e4 100644
--- a/src/php7.0/Dockerfile
+++ b/src/php7.0/Dockerfile
@@ -1,4 +1,5 @@
-FROM alpine:3.6
+ARG ARCH
+FROM ${ARCH}/alpine:3.6
 
 ARG TAG_SUFFIX
 ARG TAG_VERSION
diff --git a/src/php7.1/Dockerfile b/src/php7.1/Dockerfile
index 43f9343..0fcdb97 100644
--- a/src/php7.1/Dockerfile
+++ b/src/php7.1/Dockerfile
@@ -1,4 +1,5 @@
-FROM alpine:3.7
+ARG ARCH
+FROM ${ARCH}/alpine:3.7
 
 ARG TAG_SUFFIX
 ARG TAG_VERSION
diff --git a/src/php7.2/Dockerfile b/src/php7.2/Dockerfile
index a2dc85f..3a79142 100644
--- a/src/php7.2/Dockerfile
+++ b/src/php7.2/Dockerfile
@@ -1,4 +1,5 @@
-FROM alpine:3.9
+ARG ARCH
+FROM ${ARCH}/alpine:3.9
 
 ARG TAG_SUFFIX
 ARG TAG_VERSION
diff --git a/src/php7.3/Dockerfile b/src/php7.3/Dockerfile
index babb524..31447b6 100644
--- a/src/php7.3/Dockerfile
+++ b/src/php7.3/Dockerfile
@@ -1,4 +1,5 @@
-FROM alpine:3.12
+ARG ARCH
+FROM ${ARCH}/alpine:3.12
 
 ARG TAG_SUFFIX
 ARG TAG_VERSION
diff --git a/src/php7.4/Dockerfile b/src/php7.4/Dockerfile
index 2ea9409..baa86a9 100644
--- a/src/php7.4/Dockerfile
+++ b/src/php7.4/Dockerfile
@@ -1,4 +1,5 @@
-FROM alpine:3.13
+ARG ARCH
+FROM ${ARCH}/alpine:3.13
 
 ARG TAG_SUFFIX
 ARG TAG_VERSION
diff --git a/src/php8/Dockerfile b/src/php8.0/Dockerfile
similarity index 98%
rename from src/php8/Dockerfile
rename to src/php8.0/Dockerfile
index 3339a91..c93951e 100644
--- a/src/php8/Dockerfile
+++ b/src/php8.0/Dockerfile
@@ -1,4 +1,5 @@
-FROM alpine:3.13
+ARG ARCH
+FROM ${ARCH}/alpine:3.13
 
 ARG TAG_SUFFIX
 ARG TAG_VERSION
diff --git a/src/php8/resources/.bashrc b/src/php8.0/resources/.bashrc
similarity index 100%
rename from src/php8/resources/.bashrc
rename to src/php8.0/resources/.bashrc
diff --git a/src/php8/resources/bin/docker-php-entrypoint b/src/php8.0/resources/bin/docker-php-entrypoint
similarity index 100%
rename from src/php8/resources/bin/docker-php-entrypoint
rename to src/php8.0/resources/bin/docker-php-entrypoint
diff --git a/src/php8/resources/bin/docker-php-ext-configure b/src/php8.0/resources/bin/docker-php-ext-configure
similarity index 100%
rename from src/php8/resources/bin/docker-php-ext-configure
rename to src/php8.0/resources/bin/docker-php-ext-configure
diff --git a/src/php8/resources/bin/docker-php-ext-enable b/src/php8.0/resources/bin/docker-php-ext-enable
similarity index 100%
rename from src/php8/resources/bin/docker-php-ext-enable
rename to src/php8.0/resources/bin/docker-php-ext-enable
diff --git a/src/php8/resources/bin/docker-php-ext-install b/src/php8.0/resources/bin/docker-php-ext-install
similarity index 100%
rename from src/php8/resources/bin/docker-php-ext-install
rename to src/php8.0/resources/bin/docker-php-ext-install
diff --git a/src/php8/resources/bin/docker-php-source b/src/php8.0/resources/bin/docker-php-source
similarity index 100%
rename from src/php8/resources/bin/docker-php-source
rename to src/php8.0/resources/bin/docker-php-source
diff --git a/src/php8/resources/bin/entrypoint.sh b/src/php8.0/resources/bin/entrypoint.sh
similarity index 100%
rename from src/php8/resources/bin/entrypoint.sh
rename to src/php8.0/resources/bin/entrypoint.sh
diff --git a/src/php8/resources/php/conf.d/00_openssl.ini b/src/php8.0/resources/php/conf.d/00_openssl.ini
similarity index 100%
rename from src/php8/resources/php/conf.d/00_openssl.ini
rename to src/php8.0/resources/php/conf.d/00_openssl.ini
diff --git a/src/php8/resources/php/conf.d/00_session.ini b/src/php8.0/resources/php/conf.d/00_session.ini
similarity index 100%
rename from src/php8/resources/php/conf.d/00_session.ini
rename to src/php8.0/resources/php/conf.d/00_session.ini
diff --git a/src/php8/resources/php/conf.d/00_tokenizer.ini b/src/php8.0/resources/php/conf.d/00_tokenizer.ini
similarity index 100%
rename from src/php8/resources/php/conf.d/00_tokenizer.ini
rename to src/php8.0/resources/php/conf.d/00_tokenizer.ini
diff --git a/src/php8.1/Dockerfile b/src/php8.1/Dockerfile
new file mode 100644
index 0000000..86448af
--- /dev/null
+++ b/src/php8.1/Dockerfile
@@ -0,0 +1,126 @@
+ARG ARCH
+FROM ${ARCH}/alpine:3.13
+
+ARG TAG_SUFFIX
+ARG TAG_VERSION
+ARG HOST_USER_UID
+ARG TIMEZONE
+
+LABEL \
+	name="php" \
+	image="sindriainc/php" \
+	tag="${TAG_VERSION}-${TAG_SUFFIX}" \
+	vendor="sindria"
+
+ENV PATH "/root/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/home/sindria/.local/bin"
+ENV TZ=${TIMEZONE}
+ENV SINDRIA_USER="sindria"
+ENV SINDRIA_USER_HOME="/home/sindria"
+ENV PHP_VERSION=${TAG_SUFFIX}
+
+# dependencies required for running "phpize"
+# these get automatically installed and removed by "docker-php-ext-*" (unless they're already installed)
+ENV PHPIZE_DEPS \
+		autoconf \
+		dpkg-dev dpkg \
+		file \
+		g++ \
+		gcc \
+		libc-dev \
+		make \
+		pkgconf \
+		re2c
+
+# dependencies required for running "pecl"
+ENV PECL_DEPS \
+		php8-pear \
+		php8-dev \
+		gcc \
+		musl-dev \
+		make
+
+#COPY resources/bin/ /usr/local/bin/
+
+# Update and install packages
+RUN apk update && \
+    apk add \
+    shadow \
+    bash \
+    curl \
+    wget \
+    git \
+    rsync \
+    openssl \
+    ca-certificates \
+    tzdata && \
+    rm -rf /var/cache/apk/*
+
+# Setting app user, timezone and permissions
+RUN addgroup -S ${SINDRIA_USER} -g ${HOST_USER_UID} && adduser -s /bin/bash -S ${SINDRIA_USER} -u ${HOST_USER_UID} -G ${SINDRIA_USER} -h ${SINDRIA_USER_HOME} && \
+    mkdir -p /var/www && \
+    mkdir -p /var/www/app && \
+    ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone && \
+    chmod -R 770 /var/www/app && \
+    chown -R ${SINDRIA_USER}:${SINDRIA_USER} /var/www/app
+COPY resources/.bashrc ${SINDRIA_USER_HOME}
+
+WORKDIR /var/www/app
+
+# Installing PHP with extensions
+RUN apk add --no-cache php8 \
+    php8-common \
+    php8-cli \
+    php8-opcache \
+    php8-calendar \
+    php8-ctype \
+    php8-curl \
+    php8-exif \
+    php8-fileinfo \
+    php8-ftp \
+    php8-gd \
+    php8-gettext \
+    php8-iconv \
+    php8-intl \
+    php8-json \
+    php8-mbstring \
+    php8-mysqli \
+    php8-pdo \
+    php8-phar \
+    php8-posix \
+    php8-dom \
+    #php8-readline \
+    php8-shmop \
+    php8-sockets \
+    php8-sysvmsg \
+    php8-tokenizer \
+    php8-session \
+    php8-openssl \
+    php8-xml \
+    php8-xmlwriter \
+    php8-simplexml \
+    php8-zip \
+    php8-xsl \
+    php8-bcmath \
+    php8-imap \
+    php8-soap \
+    php8-pgsql \
+    php8-pdo_pgsql \
+    php8-pdo_mysql \
+    php8-pdo_sqlite \
+    php8-pdo_dblib \
+    php8-pecl-redis \
+    php8-pecl-imagick \
+    php8-sodium \
+    php8-pcntl \
+    php8-tidy && \
+    ln -s /etc/php8 /etc/php && \
+    ln -s /usr/bin/php8 /usr/bin/php && \
+    rm -rf /var/cache/apk/*
+
+SHELL ["/bin/bash", "-c"]
+
+# Add and setup entrypoint
+COPY resources/bin/entrypoint.sh /usr/local/bin/entrypoint.sh
+ENTRYPOINT ["/bin/bash", "entrypoint.sh"]
+
+#USER ${SINDRIA_USER}
\ No newline at end of file
diff --git a/src/php8.1/resources/.bashrc b/src/php8.1/resources/.bashrc
new file mode 100644
index 0000000..25c901f
--- /dev/null
+++ b/src/php8.1/resources/.bashrc
@@ -0,0 +1,2 @@
+
+export PATH=/root/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/home/sindria/.local/bin
\ No newline at end of file
diff --git a/src/php8.1/resources/bin/docker-php-entrypoint b/src/php8.1/resources/bin/docker-php-entrypoint
new file mode 100644
index 0000000..decb82c
--- /dev/null
+++ b/src/php8.1/resources/bin/docker-php-entrypoint
@@ -0,0 +1,9 @@
+#!/bin/sh
+set -e
+
+# first arg is `-f` or `--some-option`
+if [ "${1#-}" != "$1" ]; then
+	set -- php "$@"
+fi
+
+exec "$@"
\ No newline at end of file
diff --git a/src/php8.1/resources/bin/docker-php-ext-configure b/src/php8.1/resources/bin/docker-php-ext-configure
new file mode 100644
index 0000000..41d1b26
--- /dev/null
+++ b/src/php8.1/resources/bin/docker-php-ext-configure
@@ -0,0 +1,69 @@
+#!/bin/sh
+set -e
+
+# prefer user supplied CFLAGS, but default to our PHP_CFLAGS
+: ${CFLAGS:=$PHP_CFLAGS}
+: ${CPPFLAGS:=$PHP_CPPFLAGS}
+: ${LDFLAGS:=$PHP_LDFLAGS}
+export CFLAGS CPPFLAGS LDFLAGS
+
+srcExists=
+if [ -d /usr/src/php ]; then
+	srcExists=1
+fi
+docker-php-source extract
+if [ -z "$srcExists" ]; then
+	touch /usr/src/php/.docker-delete-me
+fi
+
+cd /usr/src/php/ext
+
+usage() {
+	echo "usage: $0 ext-name [configure flags]"
+	echo "   ie: $0 gd --with-jpeg-dir=/usr/local/something"
+	echo
+	echo 'Possible values for ext-name:'
+	find . \
+			-mindepth 2 \
+			-maxdepth 2 \
+			-type f \
+			-name 'config.m4' \
+		| xargs -n1 dirname \
+		| xargs -n1 basename \
+		| sort \
+		| xargs
+	echo
+	echo 'Some of the above modules are already compiled into PHP; please check'
+	echo 'the output of "php -i" to see which modules are already loaded.'
+}
+
+ext="$1"
+if [ -z "$ext" ] || [ ! -d "$ext" ]; then
+	usage >&2
+	exit 1
+fi
+shift
+
+pm='unknown'
+if [ -e /lib/apk/db/installed ]; then
+	pm='apk'
+fi
+
+if [ "$pm" = 'apk' ]; then
+	if \
+		[ -n "$PHPIZE_DEPS" ] \
+		&& ! apk info --installed .phpize-deps > /dev/null \
+		&& ! apk info --installed .phpize-deps-configure > /dev/null \
+	; then
+		apk add --no-cache --virtual .phpize-deps-configure $PHPIZE_DEPS
+	fi
+fi
+
+if command -v dpkg-architecture > /dev/null; then
+	gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"
+	set -- --build="$gnuArch" "$@"
+fi
+
+cd "$ext"
+phpize
+./configure --enable-option-checking=fatal "$@"
\ No newline at end of file
diff --git a/src/php8.1/resources/bin/docker-php-ext-enable b/src/php8.1/resources/bin/docker-php-ext-enable
new file mode 100644
index 0000000..7041342
--- /dev/null
+++ b/src/php8.1/resources/bin/docker-php-ext-enable
@@ -0,0 +1,121 @@
+#!/bin/sh
+set -e
+
+extDir="$(php -d 'display_errors=stderr' -r 'echo ini_get("extension_dir");')"
+cd "$extDir"
+
+usage() {
+	echo "usage: $0 [options] module-name [module-name ...]"
+	echo "   ie: $0 gd mysqli"
+	echo "       $0 pdo pdo_mysql"
+	echo "       $0 --ini-name 0-apc.ini apcu apc"
+	echo
+	echo 'Possible values for module-name:'
+	find -maxdepth 1 \
+			-type f \
+			-name '*.so' \
+			-exec basename '{}' ';' \
+		| sort \
+		| xargs
+	echo
+	echo 'Some of the above modules are already compiled into PHP; please check'
+	echo 'the output of "php -i" to see which modules are already loaded.'
+}
+
+opts="$(getopt -o 'h?' --long 'help,ini-name:' -- "$@" || { usage >&2 && false; })"
+eval set -- "$opts"
+
+iniName=
+while true; do
+	flag="$1"
+	shift
+	case "$flag" in
+		--help|-h|'-?') usage && exit 0 ;;
+		--ini-name) iniName="$1" && shift ;;
+		--) break ;;
+		*)
+			{
+				echo "error: unknown flag: $flag"
+				usage
+			} >&2
+			exit 1
+			;;
+	esac
+done
+
+modules=
+for module; do
+	if [ -z "$module" ]; then
+		continue
+	fi
+	if ! [ -f "$module" ] && ! [ -f "$module.so" ]; then
+		echo >&2 "error: '$module' does not exist"
+		echo >&2
+		usage >&2
+		exit 1
+	fi
+	modules="$modules $module"
+done
+
+if [ -z "$modules" ]; then
+	usage >&2
+	exit 1
+fi
+
+pm='unknown'
+if [ -e /lib/apk/db/installed ]; then
+	pm='apk'
+fi
+
+apkDel=
+if [ "$pm" = 'apk' ]; then
+	if \
+		[ -n "$PHPIZE_DEPS" ] \
+		&& ! apk info --installed .phpize-deps > /dev/null \
+		&& ! apk info --installed .phpize-deps-configure > /dev/null \
+	; then
+		apk add --no-cache --virtual '.docker-php-ext-enable-deps' binutils
+		apkDel='.docker-php-ext-enable-deps'
+	fi
+fi
+
+for module in $modules; do
+	moduleFile="$module"
+	if [ -f "$module.so" ] && ! [ -f "$module" ]; then
+		moduleFile="$module.so"
+	fi
+	if readelf --wide --syms "$moduleFile" | grep -q ' zend_extension_entry$'; then
+		# https://wiki.php.net/internals/extensions#loading_zend_extensions
+		line="zend_extension=$module"
+	else
+		line="extension=$module"
+	fi
+
+	ext="$(basename "$module")"
+	ext="${ext%.*}"
+	if php -d 'display_errors=stderr' -r 'exit(extension_loaded("'"$ext"'") ? 0 : 1);'; then
+		# this isn't perfect, but it's better than nothing
+		# (for example, 'opcache.so' presents inside PHP as 'Zend OPcache', not 'opcache')
+		echo >&2
+		echo >&2 "warning: $ext ($module) is already loaded!"
+		echo >&2
+		continue
+	fi
+
+	case "$iniName" in
+		/*)
+			# allow an absolute path
+			ini="$iniName"
+			;;
+		*)
+			ini="$PHP_INI_DIR/conf.d/${iniName:-"docker-php-ext-$ext.ini"}"
+			;;
+	esac
+	if ! grep -qFx -e "$line" -e "$line.so" "$ini" 2>/dev/null; then
+		echo "$line" >> "$ini"
+	fi
+done
+
+if [ "$pm" = 'apk' ] && [ -n "$apkDel" ]; then
+	apk del --no-network $apkDel
+fi
\ No newline at end of file
diff --git a/src/php8.1/resources/bin/docker-php-ext-install b/src/php8.1/resources/bin/docker-php-ext-install
new file mode 100644
index 0000000..67d2783
--- /dev/null
+++ b/src/php8.1/resources/bin/docker-php-ext-install
@@ -0,0 +1,124 @@
+#!/bin/sh
+set -e
+
+# prefer user supplied CFLAGS, but default to our PHP_CFLAGS
+: ${CFLAGS:=$PHP_CFLAGS}
+: ${CPPFLAGS:=$PHP_CPPFLAGS}
+: ${LDFLAGS:=$PHP_LDFLAGS}
+export CFLAGS CPPFLAGS LDFLAGS
+
+srcExists=
+if [ -d /usr/src/php ]; then
+	srcExists=1
+fi
+docker-php-source extract
+if [ -z "$srcExists" ]; then
+	touch /usr/src/php/.docker-delete-me
+fi
+
+cd /usr/src/php/ext
+
+usage() {
+	echo "usage: $0 [-jN] [--ini-name file.ini] ext-name [ext-name ...]"
+	echo "   ie: $0 gd mysqli"
+	echo "       $0 pdo pdo_mysql"
+	echo "       $0 -j5 gd mbstring mysqli pdo pdo_mysql shmop"
+	echo
+	echo 'if custom ./configure arguments are necessary, see docker-php-ext-configure'
+	echo
+	echo 'Possible values for ext-name:'
+	find . \
+			-mindepth 2 \
+			-maxdepth 2 \
+			-type f \
+			-name 'config.m4' \
+		| xargs -n1 dirname \
+		| xargs -n1 basename \
+		| sort \
+		| xargs
+	echo
+	echo 'Some of the above modules are already compiled into PHP; please check'
+	echo 'the output of "php -i" to see which modules are already loaded.'
+}
+
+opts="$(getopt -o 'h?j:' --long 'help,ini-name:,jobs:' -- "$@" || { usage >&2 && false; })"
+eval set -- "$opts"
+
+j=1
+iniName=
+while true; do
+	flag="$1"
+	shift
+	case "$flag" in
+		--help|-h|'-?') usage && exit 0 ;;
+		--ini-name) iniName="$1" && shift ;;
+		--jobs|-j) j="$1" && shift ;;
+		--) break ;;
+		*)
+			{
+				echo "error: unknown flag: $flag"
+				usage
+			} >&2
+			exit 1
+			;;
+	esac
+done
+
+exts=
+for ext; do
+	if [ -z "$ext" ]; then
+		continue
+	fi
+	if [ ! -d "$ext" ]; then
+		echo >&2 "error: $PWD/$ext does not exist"
+		echo >&2
+		usage >&2
+		exit 1
+	fi
+	exts="$exts $ext"
+done
+
+if [ -z "$exts" ]; then
+	usage >&2
+	exit 1
+fi
+
+pm='unknown'
+if [ -e /lib/apk/db/installed ]; then
+	pm='apk'
+fi
+
+apkDel=
+if [ "$pm" = 'apk' ]; then
+	if [ -n "$PHPIZE_DEPS" ]; then
+		if apk info --installed .phpize-deps-configure > /dev/null; then
+			apkDel='.phpize-deps-configure'
+		elif ! apk info --installed .phpize-deps > /dev/null; then
+			apk add --no-cache --virtual .phpize-deps $PHPIZE_DEPS
+			apkDel='.phpize-deps'
+		fi
+	fi
+fi
+
+popDir="$PWD"
+for ext in $exts; do
+	cd "$ext"
+	[ -e Makefile ] || docker-php-ext-configure "$ext"
+	make -j"$j"
+	make -j"$j" install
+	find modules \
+		-maxdepth 1 \
+		-name '*.so' \
+		-exec basename '{}' ';' \
+			| xargs -r docker-php-ext-enable ${iniName:+--ini-name "$iniName"}
+	make -j"$j" clean
+	cd "$popDir"
+done
+
+if [ "$pm" = 'apk' ] && [ -n "$apkDel" ]; then
+	apk del --no-network $apkDel
+fi
+
+if [ -e /usr/src/php/.docker-delete-me ]; then
+	docker-php-source delete
+fi
\ No newline at end of file
diff --git a/src/php8.1/resources/bin/docker-php-source b/src/php8.1/resources/bin/docker-php-source
new file mode 100644
index 0000000..720d4ad
--- /dev/null
+++ b/src/php8.1/resources/bin/docker-php-source
@@ -0,0 +1,34 @@
+#!/bin/sh
+set -e
+
+dir=/usr/src/php
+
+usage() {
+	echo "usage: $0 COMMAND"
+	echo
+	echo "Manage php source tarball lifecycle."
+	echo
+	echo "Commands:"
+	echo "   extract  extract php source tarball into directory $dir if not already done."
+	echo "   delete   delete extracted php source located into $dir if not already done."
+	echo
+}
+
+case "$1" in
+	extract)
+		mkdir -p "$dir"
+		if [ ! -f "$dir/.docker-extracted" ]; then
+			tar -Jxf /usr/src/php.tar.xz -C "$dir" --strip-components=1
+			touch "$dir/.docker-extracted"
+		fi
+		;;
+
+	delete)
+		rm -rf "$dir"
+		;;
+
+	*)
+		usage
+		exit 1
+		;;
+esac
\ No newline at end of file
diff --git a/src/php8.1/resources/bin/entrypoint.sh b/src/php8.1/resources/bin/entrypoint.sh
new file mode 100644
index 0000000..7cadc1b
--- /dev/null
+++ b/src/php8.1/resources/bin/entrypoint.sh
@@ -0,0 +1,22 @@
+#!/usr/bin/env bash
+
+CONTAINER_GATEWAY=`/sbin/ip route|awk '/default/ { print $3 }'`
+
+# Adding host machine hostname
+echo -e "\n# Hostname for gateway" >> /etc/hosts
+echo -e "${CONTAINER_GATEWAY}\tdocker.host.internal\n" >> /etc/hosts
+
+# Override xdebug ide key
+if [ "${PHP_XDEBUG_IDE_KEY}" != "PHPSTORM" ]; then
+    sed -i -E "s|PHPSTORM|${PHP_XDEBUG_IDE_KEY}|g" /usr/local/etc/php/conf.d/xdebug.ini
+fi
+
+# Override timezone by env
+if [ "$TZ" != "" ] || [ "$TZ" != "Europe/Rome" ]; then
+    ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
+fi
+
+# Override host user uid by env
+if [ "$HOST_USER_UID" != "1000" ]; then
+    usermod -u $HOST_USER_UID sindria && groupmod sindria -g $HOST_USER_UID
+fi
\ No newline at end of file
diff --git a/src/php8.1/resources/php/conf.d/00_openssl.ini b/src/php8.1/resources/php/conf.d/00_openssl.ini
new file mode 100644
index 0000000..cb58b9c
--- /dev/null
+++ b/src/php8.1/resources/php/conf.d/00_openssl.ini
@@ -0,0 +1 @@
+extension=openssl.so
\ No newline at end of file
diff --git a/src/php8.1/resources/php/conf.d/00_session.ini b/src/php8.1/resources/php/conf.d/00_session.ini
new file mode 100644
index 0000000..4627f6a
--- /dev/null
+++ b/src/php8.1/resources/php/conf.d/00_session.ini
@@ -0,0 +1 @@
+extension=session.so
\ No newline at end of file
diff --git a/src/php8.1/resources/php/conf.d/00_tokenizer.ini b/src/php8.1/resources/php/conf.d/00_tokenizer.ini
new file mode 100644
index 0000000..877127e
--- /dev/null
+++ b/src/php8.1/resources/php/conf.d/00_tokenizer.ini
@@ -0,0 +1 @@
+extension=tokenizer.so
\ No newline at end of file

commit 40132c5d4c449b66288b56547bcb6d4ec85937e8
Author: RaynLegends <raynlegends@gmail.com>
Date:   Thu Jun 2 23:17:28 2022 +0200

    Chore: Update base image from 2.0.1 to 2.0.3

diff --git a/src/Dockerfile b/src/Dockerfile
index 1082e97..e84956e 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -1,5 +1,5 @@
 ARG TAG_SUFFIX
-FROM sindriainc/php:2.0.1-${TAG_SUFFIX}
+FROM sindriainc/php:2.0.3-${TAG_SUFFIX}
 
 ARG TAG_VERSION
 ARG TAG_SUFFIX
@@ -55,4 +55,4 @@ RUN curl -sS https://getcomposer.org/installer -o /tmp/composer-setup.php && \
     chmod +x /usr/local/bin/phpcs && \
     chmod +x /usr/local/bin/phpcbf
 
-#USER ${SINDRIA_USER}
\ No newline at end of file
+#USER ${SINDRIA_USER}

commit 7c467fba14b23dca91b4c2094b07f7cde98e5a3c
Author: RaynLegends <raynlegends@gmail.com>
Date:   Thu Jun 2 23:07:51 2022 +0200

    Fix: Build fails with file does not exists

diff --git a/src/php8/Dockerfile b/src/php8/Dockerfile
index 9526fdc..3339a91 100644
--- a/src/php8/Dockerfile
+++ b/src/php8/Dockerfile
@@ -113,7 +113,6 @@ RUN apk add --no-cache php8 \
     php8-pcntl \
     php8-tidy && \
     ln -s /etc/php8 /etc/php && \
-    rm /usr/local/bin/php && \
     ln -s /usr/bin/php8 /usr/local/bin/php && \
     rm -rf /var/cache/apk/*
 

commit d2608088bd5073a4f3af47e10183585e48036eb3
Author: RaynLegends <raynlegends@gmail.com>
Date:   Thu Jun 2 22:50:26 2022 +0200

    Fix: php command not working

diff --git a/src/php8/Dockerfile b/src/php8/Dockerfile
index 0dc97f7..9526fdc 100644
--- a/src/php8/Dockerfile
+++ b/src/php8/Dockerfile
@@ -113,7 +113,8 @@ RUN apk add --no-cache php8 \
     php8-pcntl \
     php8-tidy && \
     ln -s /etc/php8 /etc/php && \
-    ln -s /usr/bin/php8 /usr/bin/php && \
+    rm /usr/local/bin/php && \
+    ln -s /usr/bin/php8 /usr/local/bin/php && \
     rm -rf /var/cache/apk/*
 
 SHELL ["/bin/bash", "-c"]
@@ -122,4 +123,4 @@ SHELL ["/bin/bash", "-c"]
 COPY resources/bin/entrypoint.sh /usr/local/bin/entrypoint.sh
 ENTRYPOINT ["/bin/bash", "entrypoint.sh"]
 
-#USER ${SINDRIA_USER}
\ No newline at end of file
+#USER ${SINDRIA_USER}

commit e53e8a9c9340a68e4a21a776e1eafc8a56ebfb44
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Sun Sep 12 01:43:40 2021 +0200

    Patch php symblink for php8

diff --git a/src/Dockerfile b/src/Dockerfile
index 7b26b73..1082e97 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -1,5 +1,5 @@
 ARG TAG_SUFFIX
-FROM sindriainc/php:2.0.0-${TAG_SUFFIX}
+FROM sindriainc/php:2.0.1-${TAG_SUFFIX}
 
 ARG TAG_VERSION
 ARG TAG_SUFFIX

commit 642ce012db352b0e9db9f375890bbf15969f229c
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Sun Sep 12 01:41:56 2021 +0200

    Patch php symblink for php8

diff --git a/src/php8/Dockerfile b/src/php8/Dockerfile
index f1f6b7b..0dc97f7 100644
--- a/src/php8/Dockerfile
+++ b/src/php8/Dockerfile
@@ -113,6 +113,7 @@ RUN apk add --no-cache php8 \
     php8-pcntl \
     php8-tidy && \
     ln -s /etc/php8 /etc/php && \
+    ln -s /usr/bin/php8 /usr/bin/php && \
     rm -rf /var/cache/apk/*
 
 SHELL ["/bin/bash", "-c"]

commit 72ebaaa7d765ddf2cdf8f90cdd8fff50d2fbb42b
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Sun Sep 12 01:23:31 2021 +0200

    Update

diff --git a/.github/workflows/docker-image.yml b/.github/workflows/docker-image.yml
new file mode 100644
index 0000000..25cab20
--- /dev/null
+++ b/.github/workflows/docker-image.yml
@@ -0,0 +1,26 @@
+name: Docker Image CI
+
+on:
+  push:
+    branches:
+      - 'local'
+
+jobs:
+
+  build_publish:
+    runs-on: ubuntu-latest
+    steps:
+      - uses: actions/checkout@v2
+      - name: Set env release
+        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
+      - name: Set env slug
+        run: echo "REPO_SLUG=php" >> $GITHUB_ENV
+      - name: Login into registry
+        env:
+          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
+          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
+        run: echo ${DOCKERHUB_PASSWORD} | docker login --username "${DOCKERHUB_USERNAME}" --password-stdin
+      - name: Build and Publish Image
+        env:
+          DOCKERHUB_NAMESPACE: ${{ secrets.DOCKERHUB_NAMESPACE }}
+        run: bash build_all.sh ${DOCKERHUB_NAMESPACE}/${REPO_SLUG} ${RELEASE_VERSION}
\ No newline at end of file
diff --git a/src/Dockerfile b/src/Dockerfile
index d3bdcad..7b26b73 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -34,20 +34,11 @@ RUN apk update && \
     rsync && \
     rm -rf /var/cache/apk/*
 
-#USER ${SINDRIA_USER}
-
-# Install composer for sindria user
-#RUN curl -sS https://getcomposer.org/installer -o /tmp/composer-setup.php && \
-#    php /tmp/composer-setup.php --install-dir=/usr/local/bin --filename=composer
-
-#USER root
-
 # Install dev tools
 RUN curl -sS https://getcomposer.org/installer -o /tmp/composer-setup.php && \
     php /tmp/composer-setup.php --install-dir=/usr/local/bin --filename=composer && \
     apk add --no-cache --virtual .build-deps $PHPIZE_DEPS $PECL_DEPS && \
     pecl install xdebug-3.0.0 || pecl install xdebug-2.6.0 && \
-    #docker-php-ext-enable xdebug && \
     apk del -f .build-deps && \
     touch /etc/php/conf.d/xdebug.ini && \
     echo "xdebug.mode=${PHP_XDEBUG_MODE}" >> /etc/php/conf.d/xdebug.ini && \

commit b0d736cb82f6c2c402fe13eb2eca61adbec84c1a
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Sun Sep 12 01:13:03 2021 +0200

    Re Fix all

diff --git a/src/php7.0/Dockerfile b/src/php7.0/Dockerfile
index 442c0a2..10c4a63 100644
--- a/src/php7.0/Dockerfile
+++ b/src/php7.0/Dockerfile
@@ -109,7 +109,7 @@ RUN apk add --no-cache php7 \
     php7-pdo_dblib \
     #php7-pecl-redis \
     #php7-pecl-imagick \
-    php7-sodium \
+    #php7-sodium \
     php7-pcntl \
     php7-tidy && \
     ln -s /etc/php7 /etc/php && \
diff --git a/src/php7.1/Dockerfile b/src/php7.1/Dockerfile
index a3ca6bd..43f9343 100644
--- a/src/php7.1/Dockerfile
+++ b/src/php7.1/Dockerfile
@@ -109,7 +109,7 @@ RUN apk add --no-cache php7 \
     php7-pdo_dblib \
     #php7-pecl-redis \
     #php7-pecl-imagick \
-    php7-sodium \
+    #php7-sodium \
     php7-pcntl \
     php7-tidy && \
     ln -s /etc/php7 /etc/php && \

commit 295ea27ba9f9ea6d0c79ab2abf577ae8b76dd4bc
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Sun Sep 12 01:10:57 2021 +0200

    Fix all

diff --git a/src/php7.0/Dockerfile b/src/php7.0/Dockerfile
index d93cb5e..442c0a2 100644
--- a/src/php7.0/Dockerfile
+++ b/src/php7.0/Dockerfile
@@ -17,6 +17,29 @@ ENV SINDRIA_USER="sindria"
 ENV SINDRIA_USER_HOME="/home/sindria"
 ENV PHP_VERSION=${TAG_SUFFIX}
 
+# dependencies required for running "phpize"
+# these get automatically installed and removed by "docker-php-ext-*" (unless they're already installed)
+ENV PHPIZE_DEPS \
+		autoconf \
+		dpkg-dev dpkg \
+		file \
+		g++ \
+		gcc \
+		libc-dev \
+		make \
+		pkgconf \
+		re2c
+
+# dependencies required for running "pecl"
+ENV PECL_DEPS \
+		php7-pear \
+		php7-dev \
+		gcc \
+		musl-dev \
+		make
+
+#COPY resources/bin/ /usr/local/bin/
+
 # Update and install packages
 RUN apk update && \
     apk add \
@@ -78,6 +101,7 @@ RUN apk add --no-cache php7 \
     php7-xsl \
     php7-bcmath \
     php7-imap \
+    php7-soap \
     php7-pgsql \
     php7-pdo_pgsql \
     php7-pdo_mysql \
@@ -85,13 +109,10 @@ RUN apk add --no-cache php7 \
     php7-pdo_dblib \
     #php7-pecl-redis \
     #php7-pecl-imagick \
+    php7-sodium \
     php7-pcntl \
     php7-tidy && \
-    #pecl install pdo_dblib && \
-    #pecl install imagick redis && \
-    #docker-php-ext-enable \
-    #imagick \
-    #redis && \
+    ln -s /etc/php7 /etc/php && \
     rm -rf /var/cache/apk/*
 
 SHELL ["/bin/bash", "-c"]
diff --git a/src/php7.1/Dockerfile b/src/php7.1/Dockerfile
index 99ec6c7..a3ca6bd 100644
--- a/src/php7.1/Dockerfile
+++ b/src/php7.1/Dockerfile
@@ -17,6 +17,29 @@ ENV SINDRIA_USER="sindria"
 ENV SINDRIA_USER_HOME="/home/sindria"
 ENV PHP_VERSION=${TAG_SUFFIX}
 
+# dependencies required for running "phpize"
+# these get automatically installed and removed by "docker-php-ext-*" (unless they're already installed)
+ENV PHPIZE_DEPS \
+		autoconf \
+		dpkg-dev dpkg \
+		file \
+		g++ \
+		gcc \
+		libc-dev \
+		make \
+		pkgconf \
+		re2c
+
+# dependencies required for running "pecl"
+ENV PECL_DEPS \
+		php7-pear \
+		php7-dev \
+		gcc \
+		musl-dev \
+		make
+
+#COPY resources/bin/ /usr/local/bin/
+
 # Update and install packages
 RUN apk update && \
     apk add \
@@ -78,6 +101,7 @@ RUN apk add --no-cache php7 \
     php7-xsl \
     php7-bcmath \
     php7-imap \
+    php7-soap \
     php7-pgsql \
     php7-pdo_pgsql \
     php7-pdo_mysql \
@@ -85,13 +109,10 @@ RUN apk add --no-cache php7 \
     php7-pdo_dblib \
     #php7-pecl-redis \
     #php7-pecl-imagick \
+    php7-sodium \
     php7-pcntl \
     php7-tidy && \
-    #pecl install pdo_dblib && \
-    #pecl install imagick redis && \
-    #docker-php-ext-enable \
-    #imagick \
-    #redis && \
+    ln -s /etc/php7 /etc/php && \
     rm -rf /var/cache/apk/*
 
 SHELL ["/bin/bash", "-c"]
diff --git a/src/php7.2/Dockerfile b/src/php7.2/Dockerfile
index 37b90ab..a2dc85f 100644
--- a/src/php7.2/Dockerfile
+++ b/src/php7.2/Dockerfile
@@ -17,6 +17,29 @@ ENV SINDRIA_USER="sindria"
 ENV SINDRIA_USER_HOME="/home/sindria"
 ENV PHP_VERSION=${TAG_SUFFIX}
 
+# dependencies required for running "phpize"
+# these get automatically installed and removed by "docker-php-ext-*" (unless they're already installed)
+ENV PHPIZE_DEPS \
+		autoconf \
+		dpkg-dev dpkg \
+		file \
+		g++ \
+		gcc \
+		libc-dev \
+		make \
+		pkgconf \
+		re2c
+
+# dependencies required for running "pecl"
+ENV PECL_DEPS \
+		php7-pear \
+		php7-dev \
+		gcc \
+		musl-dev \
+		make
+
+#COPY resources/bin/ /usr/local/bin/
+
 # Update and install packages
 RUN apk update && \
     apk add \
@@ -78,6 +101,7 @@ RUN apk add --no-cache php7 \
     php7-xsl \
     php7-bcmath \
     php7-imap \
+    php7-soap \
     php7-pgsql \
     php7-pdo_pgsql \
     php7-pdo_mysql \
@@ -85,16 +109,10 @@ RUN apk add --no-cache php7 \
     php7-pdo_dblib \
     php7-pecl-redis \
     php7-pecl-imagick \
-    #php7-pecl-swoole \
+    php7-sodium \
     php7-pcntl \
     php7-tidy && \
-    #pecl install pdo_dblib && \
-    #pecl install imagick redis && \
-    #pecl install swoole && \
-    #docker-php-ext-enable swoole && \
-    #docker-php-ext-enable \
-    #imagick \
-    #redis && \
+    ln -s /etc/php7 /etc/php && \
     rm -rf /var/cache/apk/*
 
 SHELL ["/bin/bash", "-c"]
diff --git a/src/php7.3/Dockerfile b/src/php7.3/Dockerfile
index 54efba3..babb524 100644
--- a/src/php7.3/Dockerfile
+++ b/src/php7.3/Dockerfile
@@ -38,7 +38,7 @@ ENV PECL_DEPS \
 		musl-dev \
 		make
 
-COPY resources/bin/ /usr/local/bin/
+#COPY resources/bin/ /usr/local/bin/
 
 # Update and install packages
 RUN apk update && \
@@ -54,8 +54,6 @@ RUN apk update && \
     tzdata && \
     rm -rf /var/cache/apk/*
 
-RUN apk --no-cache add
-
 # Setting app user, timezone and permissions
 RUN addgroup -S ${SINDRIA_USER} -g ${HOST_USER_UID} && adduser -s /bin/bash -S ${SINDRIA_USER} -u ${HOST_USER_UID} -G ${SINDRIA_USER} -h ${SINDRIA_USER_HOME} && \
     mkdir -p /var/www && \
@@ -103,6 +101,7 @@ RUN apk add --no-cache php7 \
     php7-xsl \
     php7-bcmath \
     php7-imap \
+    php7-soap \
     php7-pgsql \
     php7-pdo_pgsql \
     php7-pdo_mysql \
@@ -113,9 +112,6 @@ RUN apk add --no-cache php7 \
     php7-sodium \
     php7-pcntl \
     php7-tidy && \
-    #pecl install pdo_dblib && \
-    #pecl install imagick redis && \
-    #docker-php-ext-enable imagick redis && \
     ln -s /etc/php7 /etc/php && \
     rm -rf /var/cache/apk/*
 
diff --git a/src/php7.4/Dockerfile b/src/php7.4/Dockerfile
index 7af4090..2ea9409 100644
--- a/src/php7.4/Dockerfile
+++ b/src/php7.4/Dockerfile
@@ -30,7 +30,15 @@ ENV PHPIZE_DEPS \
 		pkgconf \
 		re2c
 
-COPY resources/bin/ /usr/local/bin/
+# dependencies required for running "pecl"
+ENV PECL_DEPS \
+		php7-pear \
+		php7-dev \
+		gcc \
+		musl-dev \
+		make
+
+#COPY resources/bin/ /usr/local/bin/
 
 # Update and install packages
 RUN apk update && \
@@ -93,6 +101,7 @@ RUN apk add --no-cache php7 \
     php7-xsl \
     php7-bcmath \
     php7-imap \
+    php7-soap \
     php7-pgsql \
     php7-pdo_pgsql \
     php7-pdo_mysql \
@@ -101,16 +110,9 @@ RUN apk add --no-cache php7 \
     php7-pecl-redis \
     php7-pecl-imagick \
     php7-sodium \
-    #php7-pecl-swoole \
     php7-pcntl \
     php7-tidy && \
-    #pecl install pdo_dblib && \
-    #pecl install imagick redis && \
-    #pecl install swoole && \
-    #docker-php-ext-enable swoole && \
-    #docker-php-ext-enable \
-    #imagick \
-    #redis && \
+    ln -s /etc/php7 /etc/php && \
     rm -rf /var/cache/apk/*
 
 SHELL ["/bin/bash", "-c"]
diff --git a/src/php8/Dockerfile b/src/php8/Dockerfile
index 86e689e..f1f6b7b 100644
--- a/src/php8/Dockerfile
+++ b/src/php8/Dockerfile
@@ -30,7 +30,15 @@ ENV PHPIZE_DEPS \
 		pkgconf \
 		re2c
 
-COPY resources/bin/ /usr/local/bin/
+# dependencies required for running "pecl"
+ENV PECL_DEPS \
+		php8-pear \
+		php8-dev \
+		gcc \
+		musl-dev \
+		make
+
+#COPY resources/bin/ /usr/local/bin/
 
 # Update and install packages
 RUN apk update && \
@@ -93,6 +101,7 @@ RUN apk add --no-cache php8 \
     php8-xsl \
     php8-bcmath \
     php8-imap \
+    php8-soap \
     php8-pgsql \
     php8-pdo_pgsql \
     php8-pdo_mysql \
@@ -101,16 +110,9 @@ RUN apk add --no-cache php8 \
     php8-pecl-redis \
     php8-pecl-imagick \
     php8-sodium \
-    #php8-pecl-swoole \
     php8-pcntl \
     php8-tidy && \
-    #pecl install pdo_dblib && \
-    #pecl install imagick redis && \
-    #pecl install swoole && \
-    #docker-php-ext-enable swoole && \
-    #docker-php-ext-enable \
-    #imagick \
-    #redis && \
+    ln -s /etc/php8 /etc/php && \
     rm -rf /var/cache/apk/*
 
 SHELL ["/bin/bash", "-c"]
diff --git a/src/php8/Dockerfile.old b/src/php8/Dockerfile.old
deleted file mode 100644
index 5382ce3..0000000
--- a/src/php8/Dockerfile.old
+++ /dev/null
@@ -1,105 +0,0 @@
-FROM php:8-alpine
-
-ARG TAG_SUFFIX
-ARG TAG_VERSION
-ARG HOST_USER_UID
-ARG TIMEZONE
-
-LABEL \
-	name="php" \
-	image="sindriainc/php" \
-	tag="${TAG_VERSION}-${TAG_SUFFIX}" \
-	vendor="sindria"
-
-ENV PATH "/root/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/home/sindria/.local/bin"
-ENV TZ=${TIMEZONE}
-ENV SINDRIA_USER="sindria"
-ENV SINDRIA_USER_HOME="/home/sindria"
-ENV PHP_VERSION=${TAG_SUFFIX}
-
-# Update and install packages
-RUN apk update && \
-    apk add \
-    shadow \
-    bash \
-    curl \
-    wget \
-    git \
-    rsync \
-    openssl \
-    ca-certificates \
-    tzdata && \
-    rm -rf /var/cache/apk/*
-
-## Install dependencies
-RUN apk add --no-cache --virtual build-dependencies gcc g++ make autoconf libffi-dev libc-dev libressl-dev curl-dev bzip2-dev libzip-dev libsodium libsodium-dev postgresql-dev libjpeg-turbo freetype freetype-dev libpng libpng-dev icu icu-dev oniguruma-dev gettext-dev libxml2-dev libedit-dev libxslt-dev imap-dev krb5-dev tidyhtml-dev libmemcached-libs imagemagick imagemagick-libs imagemagick-dev libjpeg-turbo-dev && \
-    rm -rf /var/cache/apk/*
-
-# Setting app user, timezone and permissions
-RUN addgroup -S ${SINDRIA_USER} -g ${HOST_USER_UID} && adduser -s /bin/bash -S ${SINDRIA_USER} -u ${HOST_USER_UID} -G ${SINDRIA_USER} -h ${SINDRIA_USER_HOME} && \
-    mkdir -p /var/www && \
-    mkdir -p /var/www/app && \
-    ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone && \
-    chmod -R 770 /var/www/app && \
-    chown -R ${SINDRIA_USER}:${SINDRIA_USER} /var/www/app
-COPY resources/.bashrc ${SINDRIA_USER_HOME}
-
-WORKDIR /var/www/app
-
-# Install php extensions
-RUN apk add \
-    php8-calendar \
-    php8-ctype \
-    php8-curl \
-    php8-exif \
-    php8-fileinfo \
-    php8-ftp \
-    php8-gd \
-    php8-gettext \
-    php8-iconv \
-    php8-intl \
-    php8-json \
-    php8-mbstring \
-    php8-mysqli \
-    php8-pdo \
-    php8-phar \
-    php8-posix \
-    #php8-readline \
-    php8-shmop \
-    php8-sockets \
-    php8-sysvmsg \
-    php8-tokenizer \
-    php8-session \
-    php8-openssl \
-    php8-xml \
-    php8-zip \
-    php8-xsl \
-    php8-bcmath \
-    php8-imap \
-    php8-pgsql \
-    php8-pdo_pgsql \
-    php8-pdo_mysql \
-    php8-pdo_dblib \
-    php8-pcntl \
-    php8-tidy && \
-    #pecl install pdo_dblib && \
-    pecl install imagick redis && \
-    pecl install swoole && \
-    docker-php-ext-enable swoole && \
-    docker-php-ext-enable \
-    imagick \
-    redis && \
-    #docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/include/ || docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ && \
-    #docker-php-ext-configure imap --with-kerberos --with-imap-ssl && \
-    #docker-php-ext-install calendar ctype curl exif fileinfo ftp gd gettext iconv intl json mbstring mysqli pdo phar posix readline shmop sockets sysvmsg sysvshm xml zip xsl bcmath imap soap pgsql pdo_pgsql pdo_mysql pcntl tidy sodium && \
-    #docker-php-ext-enable opcache imap zip && \
-    #apk del build-dependencies && \
-    rm -rf /var/cache/apk/*
-
-SHELL ["/bin/bash", "-c"]
-
-# Add and setup entrypoint
-COPY resources/bin/entrypoint.sh /usr/local/bin/entrypoint.sh
-ENTRYPOINT ["/bin/bash", "entrypoint.sh"]
-
-#USER ${SINDRIA_USER}
\ No newline at end of file

commit fcb98c91e54b0a3f58094a42e832abed7a6d8a5a
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Sat Sep 11 23:58:48 2021 +0200

    Fix 7.3

diff --git a/src/php7.3/Dockerfile b/src/php7.3/Dockerfile
index 57658ee..54efba3 100644
--- a/src/php7.3/Dockerfile
+++ b/src/php7.3/Dockerfile
@@ -116,6 +116,7 @@ RUN apk add --no-cache php7 \
     #pecl install pdo_dblib && \
     #pecl install imagick redis && \
     #docker-php-ext-enable imagick redis && \
+    ln -s /etc/php7 /etc/php && \
     rm -rf /var/cache/apk/*
 
 SHELL ["/bin/bash", "-c"]

commit 3e4af132e530565f3780e65d7f58d2cf340f7431
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Sat Sep 11 23:54:01 2021 +0200

    Fix

diff --git a/src/Dockerfile b/src/Dockerfile
index af32ed4..d3bdcad 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -45,10 +45,11 @@ RUN apk update && \
 # Install dev tools
 RUN curl -sS https://getcomposer.org/installer -o /tmp/composer-setup.php && \
     php /tmp/composer-setup.php --install-dir=/usr/local/bin --filename=composer && \
-    apk add --no-cache --virtual .build-deps $PHPIZE_DEPS && \
+    apk add --no-cache --virtual .build-deps $PHPIZE_DEPS $PECL_DEPS && \
     pecl install xdebug-3.0.0 || pecl install xdebug-2.6.0 && \
-    docker-php-ext-enable xdebug && \
+    #docker-php-ext-enable xdebug && \
     apk del -f .build-deps && \
+    touch /etc/php/conf.d/xdebug.ini && \
     echo "xdebug.mode=${PHP_XDEBUG_MODE}" >> /etc/php/conf.d/xdebug.ini && \
     echo "xdebug.start_with_request=${PHP_XDEBUG_START_WITH_REQUEST}" >> /etc/php/conf.d/xdebug.ini && \
     echo "xdebug.client_host=${PHP_XDEBUG_HOST}" >> /etc/php/conf.d/xdebug.ini && \

commit 6a5ec0cba1d6c578737f1a484f8a35dfc7560fce
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Sat Sep 11 23:41:54 2021 +0200

    Added bin from offical php

diff --git a/src/php7.3/Dockerfile b/src/php7.3/Dockerfile
index a3bc8f7..57658ee 100644
--- a/src/php7.3/Dockerfile
+++ b/src/php7.3/Dockerfile
@@ -17,6 +17,29 @@ ENV SINDRIA_USER="sindria"
 ENV SINDRIA_USER_HOME="/home/sindria"
 ENV PHP_VERSION=${TAG_SUFFIX}
 
+# dependencies required for running "phpize"
+# these get automatically installed and removed by "docker-php-ext-*" (unless they're already installed)
+ENV PHPIZE_DEPS \
+		autoconf \
+		dpkg-dev dpkg \
+		file \
+		g++ \
+		gcc \
+		libc-dev \
+		make \
+		pkgconf \
+		re2c
+
+# dependencies required for running "pecl"
+ENV PECL_DEPS \
+		php7-pear \
+		php7-dev \
+		gcc \
+		musl-dev \
+		make
+
+COPY resources/bin/ /usr/local/bin/
+
 # Update and install packages
 RUN apk update && \
     apk add \
@@ -31,6 +54,8 @@ RUN apk update && \
     tzdata && \
     rm -rf /var/cache/apk/*
 
+RUN apk --no-cache add
+
 # Setting app user, timezone and permissions
 RUN addgroup -S ${SINDRIA_USER} -g ${HOST_USER_UID} && adduser -s /bin/bash -S ${SINDRIA_USER} -u ${HOST_USER_UID} -G ${SINDRIA_USER} -h ${SINDRIA_USER_HOME} && \
     mkdir -p /var/www && \
@@ -85,16 +110,12 @@ RUN apk add --no-cache php7 \
     php7-pdo_dblib \
     php7-pecl-redis \
     php7-pecl-imagick \
-    #php7-pecl-swoole \
+    php7-sodium \
     php7-pcntl \
     php7-tidy && \
     #pecl install pdo_dblib && \
     #pecl install imagick redis && \
-    #pecl install swoole && \
-    #docker-php-ext-enable swoole && \
-    #docker-php-ext-enable \
-    #imagick \
-    #redis && \
+    #docker-php-ext-enable imagick redis && \
     rm -rf /var/cache/apk/*
 
 SHELL ["/bin/bash", "-c"]
diff --git a/src/php7.4/Dockerfile b/src/php7.4/Dockerfile
index 4ff3459..7af4090 100644
--- a/src/php7.4/Dockerfile
+++ b/src/php7.4/Dockerfile
@@ -17,6 +17,21 @@ ENV SINDRIA_USER="sindria"
 ENV SINDRIA_USER_HOME="/home/sindria"
 ENV PHP_VERSION=${TAG_SUFFIX}
 
+# dependencies required for running "phpize"
+# these get automatically installed and removed by "docker-php-ext-*" (unless they're already installed)
+ENV PHPIZE_DEPS \
+		autoconf \
+		dpkg-dev dpkg \
+		file \
+		g++ \
+		gcc \
+		libc-dev \
+		make \
+		pkgconf \
+		re2c
+
+COPY resources/bin/ /usr/local/bin/
+
 # Update and install packages
 RUN apk update && \
     apk add \
@@ -85,6 +100,7 @@ RUN apk add --no-cache php7 \
     php7-pdo_dblib \
     php7-pecl-redis \
     php7-pecl-imagick \
+    php7-sodium \
     #php7-pecl-swoole \
     php7-pcntl \
     php7-tidy && \
diff --git a/src/php8/Dockerfile b/src/php8/Dockerfile
index cb2220c..86e689e 100644
--- a/src/php8/Dockerfile
+++ b/src/php8/Dockerfile
@@ -17,6 +17,21 @@ ENV SINDRIA_USER="sindria"
 ENV SINDRIA_USER_HOME="/home/sindria"
 ENV PHP_VERSION=${TAG_SUFFIX}
 
+# dependencies required for running "phpize"
+# these get automatically installed and removed by "docker-php-ext-*" (unless they're already installed)
+ENV PHPIZE_DEPS \
+		autoconf \
+		dpkg-dev dpkg \
+		file \
+		g++ \
+		gcc \
+		libc-dev \
+		make \
+		pkgconf \
+		re2c
+
+COPY resources/bin/ /usr/local/bin/
+
 # Update and install packages
 RUN apk update && \
     apk add \
@@ -85,6 +100,7 @@ RUN apk add --no-cache php8 \
     php8-pdo_dblib \
     php8-pecl-redis \
     php8-pecl-imagick \
+    php8-sodium \
     #php8-pecl-swoole \
     php8-pcntl \
     php8-tidy && \
diff --git a/src/php8/resources/bin/docker-php-entrypoint b/src/php8/resources/bin/docker-php-entrypoint
new file mode 100644
index 0000000..decb82c
--- /dev/null
+++ b/src/php8/resources/bin/docker-php-entrypoint
@@ -0,0 +1,9 @@
+#!/bin/sh
+set -e
+
+# first arg is `-f` or `--some-option`
+if [ "${1#-}" != "$1" ]; then
+	set -- php "$@"
+fi
+
+exec "$@"
\ No newline at end of file
diff --git a/src/php8/resources/bin/docker-php-ext-configure b/src/php8/resources/bin/docker-php-ext-configure
new file mode 100644
index 0000000..41d1b26
--- /dev/null
+++ b/src/php8/resources/bin/docker-php-ext-configure
@@ -0,0 +1,69 @@
+#!/bin/sh
+set -e
+
+# prefer user supplied CFLAGS, but default to our PHP_CFLAGS
+: ${CFLAGS:=$PHP_CFLAGS}
+: ${CPPFLAGS:=$PHP_CPPFLAGS}
+: ${LDFLAGS:=$PHP_LDFLAGS}
+export CFLAGS CPPFLAGS LDFLAGS
+
+srcExists=
+if [ -d /usr/src/php ]; then
+	srcExists=1
+fi
+docker-php-source extract
+if [ -z "$srcExists" ]; then
+	touch /usr/src/php/.docker-delete-me
+fi
+
+cd /usr/src/php/ext
+
+usage() {
+	echo "usage: $0 ext-name [configure flags]"
+	echo "   ie: $0 gd --with-jpeg-dir=/usr/local/something"
+	echo
+	echo 'Possible values for ext-name:'
+	find . \
+			-mindepth 2 \
+			-maxdepth 2 \
+			-type f \
+			-name 'config.m4' \
+		| xargs -n1 dirname \
+		| xargs -n1 basename \
+		| sort \
+		| xargs
+	echo
+	echo 'Some of the above modules are already compiled into PHP; please check'
+	echo 'the output of "php -i" to see which modules are already loaded.'
+}
+
+ext="$1"
+if [ -z "$ext" ] || [ ! -d "$ext" ]; then
+	usage >&2
+	exit 1
+fi
+shift
+
+pm='unknown'
+if [ -e /lib/apk/db/installed ]; then
+	pm='apk'
+fi
+
+if [ "$pm" = 'apk' ]; then
+	if \
+		[ -n "$PHPIZE_DEPS" ] \
+		&& ! apk info --installed .phpize-deps > /dev/null \
+		&& ! apk info --installed .phpize-deps-configure > /dev/null \
+	; then
+		apk add --no-cache --virtual .phpize-deps-configure $PHPIZE_DEPS
+	fi
+fi
+
+if command -v dpkg-architecture > /dev/null; then
+	gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"
+	set -- --build="$gnuArch" "$@"
+fi
+
+cd "$ext"
+phpize
+./configure --enable-option-checking=fatal "$@"
\ No newline at end of file
diff --git a/src/php8/resources/bin/docker-php-ext-enable b/src/php8/resources/bin/docker-php-ext-enable
new file mode 100644
index 0000000..7041342
--- /dev/null
+++ b/src/php8/resources/bin/docker-php-ext-enable
@@ -0,0 +1,121 @@
+#!/bin/sh
+set -e
+
+extDir="$(php -d 'display_errors=stderr' -r 'echo ini_get("extension_dir");')"
+cd "$extDir"
+
+usage() {
+	echo "usage: $0 [options] module-name [module-name ...]"
+	echo "   ie: $0 gd mysqli"
+	echo "       $0 pdo pdo_mysql"
+	echo "       $0 --ini-name 0-apc.ini apcu apc"
+	echo
+	echo 'Possible values for module-name:'
+	find -maxdepth 1 \
+			-type f \
+			-name '*.so' \
+			-exec basename '{}' ';' \
+		| sort \
+		| xargs
+	echo
+	echo 'Some of the above modules are already compiled into PHP; please check'
+	echo 'the output of "php -i" to see which modules are already loaded.'
+}
+
+opts="$(getopt -o 'h?' --long 'help,ini-name:' -- "$@" || { usage >&2 && false; })"
+eval set -- "$opts"
+
+iniName=
+while true; do
+	flag="$1"
+	shift
+	case "$flag" in
+		--help|-h|'-?') usage && exit 0 ;;
+		--ini-name) iniName="$1" && shift ;;
+		--) break ;;
+		*)
+			{
+				echo "error: unknown flag: $flag"
+				usage
+			} >&2
+			exit 1
+			;;
+	esac
+done
+
+modules=
+for module; do
+	if [ -z "$module" ]; then
+		continue
+	fi
+	if ! [ -f "$module" ] && ! [ -f "$module.so" ]; then
+		echo >&2 "error: '$module' does not exist"
+		echo >&2
+		usage >&2
+		exit 1
+	fi
+	modules="$modules $module"
+done
+
+if [ -z "$modules" ]; then
+	usage >&2
+	exit 1
+fi
+
+pm='unknown'
+if [ -e /lib/apk/db/installed ]; then
+	pm='apk'
+fi
+
+apkDel=
+if [ "$pm" = 'apk' ]; then
+	if \
+		[ -n "$PHPIZE_DEPS" ] \
+		&& ! apk info --installed .phpize-deps > /dev/null \
+		&& ! apk info --installed .phpize-deps-configure > /dev/null \
+	; then
+		apk add --no-cache --virtual '.docker-php-ext-enable-deps' binutils
+		apkDel='.docker-php-ext-enable-deps'
+	fi
+fi
+
+for module in $modules; do
+	moduleFile="$module"
+	if [ -f "$module.so" ] && ! [ -f "$module" ]; then
+		moduleFile="$module.so"
+	fi
+	if readelf --wide --syms "$moduleFile" | grep -q ' zend_extension_entry$'; then
+		# https://wiki.php.net/internals/extensions#loading_zend_extensions
+		line="zend_extension=$module"
+	else
+		line="extension=$module"
+	fi
+
+	ext="$(basename "$module")"
+	ext="${ext%.*}"
+	if php -d 'display_errors=stderr' -r 'exit(extension_loaded("'"$ext"'") ? 0 : 1);'; then
+		# this isn't perfect, but it's better than nothing
+		# (for example, 'opcache.so' presents inside PHP as 'Zend OPcache', not 'opcache')
+		echo >&2
+		echo >&2 "warning: $ext ($module) is already loaded!"
+		echo >&2
+		continue
+	fi
+
+	case "$iniName" in
+		/*)
+			# allow an absolute path
+			ini="$iniName"
+			;;
+		*)
+			ini="$PHP_INI_DIR/conf.d/${iniName:-"docker-php-ext-$ext.ini"}"
+			;;
+	esac
+	if ! grep -qFx -e "$line" -e "$line.so" "$ini" 2>/dev/null; then
+		echo "$line" >> "$ini"
+	fi
+done
+
+if [ "$pm" = 'apk' ] && [ -n "$apkDel" ]; then
+	apk del --no-network $apkDel
+fi
\ No newline at end of file
diff --git a/src/php8/resources/bin/docker-php-ext-install b/src/php8/resources/bin/docker-php-ext-install
new file mode 100644
index 0000000..67d2783
--- /dev/null
+++ b/src/php8/resources/bin/docker-php-ext-install
@@ -0,0 +1,124 @@
+#!/bin/sh
+set -e
+
+# prefer user supplied CFLAGS, but default to our PHP_CFLAGS
+: ${CFLAGS:=$PHP_CFLAGS}
+: ${CPPFLAGS:=$PHP_CPPFLAGS}
+: ${LDFLAGS:=$PHP_LDFLAGS}
+export CFLAGS CPPFLAGS LDFLAGS
+
+srcExists=
+if [ -d /usr/src/php ]; then
+	srcExists=1
+fi
+docker-php-source extract
+if [ -z "$srcExists" ]; then
+	touch /usr/src/php/.docker-delete-me
+fi
+
+cd /usr/src/php/ext
+
+usage() {
+	echo "usage: $0 [-jN] [--ini-name file.ini] ext-name [ext-name ...]"
+	echo "   ie: $0 gd mysqli"
+	echo "       $0 pdo pdo_mysql"
+	echo "       $0 -j5 gd mbstring mysqli pdo pdo_mysql shmop"
+	echo
+	echo 'if custom ./configure arguments are necessary, see docker-php-ext-configure'
+	echo
+	echo 'Possible values for ext-name:'
+	find . \
+			-mindepth 2 \
+			-maxdepth 2 \
+			-type f \
+			-name 'config.m4' \
+		| xargs -n1 dirname \
+		| xargs -n1 basename \
+		| sort \
+		| xargs
+	echo
+	echo 'Some of the above modules are already compiled into PHP; please check'
+	echo 'the output of "php -i" to see which modules are already loaded.'
+}
+
+opts="$(getopt -o 'h?j:' --long 'help,ini-name:,jobs:' -- "$@" || { usage >&2 && false; })"
+eval set -- "$opts"
+
+j=1
+iniName=
+while true; do
+	flag="$1"
+	shift
+	case "$flag" in
+		--help|-h|'-?') usage && exit 0 ;;
+		--ini-name) iniName="$1" && shift ;;
+		--jobs|-j) j="$1" && shift ;;
+		--) break ;;
+		*)
+			{
+				echo "error: unknown flag: $flag"
+				usage
+			} >&2
+			exit 1
+			;;
+	esac
+done
+
+exts=
+for ext; do
+	if [ -z "$ext" ]; then
+		continue
+	fi
+	if [ ! -d "$ext" ]; then
+		echo >&2 "error: $PWD/$ext does not exist"
+		echo >&2
+		usage >&2
+		exit 1
+	fi
+	exts="$exts $ext"
+done
+
+if [ -z "$exts" ]; then
+	usage >&2
+	exit 1
+fi
+
+pm='unknown'
+if [ -e /lib/apk/db/installed ]; then
+	pm='apk'
+fi
+
+apkDel=
+if [ "$pm" = 'apk' ]; then
+	if [ -n "$PHPIZE_DEPS" ]; then
+		if apk info --installed .phpize-deps-configure > /dev/null; then
+			apkDel='.phpize-deps-configure'
+		elif ! apk info --installed .phpize-deps > /dev/null; then
+			apk add --no-cache --virtual .phpize-deps $PHPIZE_DEPS
+			apkDel='.phpize-deps'
+		fi
+	fi
+fi
+
+popDir="$PWD"
+for ext in $exts; do
+	cd "$ext"
+	[ -e Makefile ] || docker-php-ext-configure "$ext"
+	make -j"$j"
+	make -j"$j" install
+	find modules \
+		-maxdepth 1 \
+		-name '*.so' \
+		-exec basename '{}' ';' \
+			| xargs -r docker-php-ext-enable ${iniName:+--ini-name "$iniName"}
+	make -j"$j" clean
+	cd "$popDir"
+done
+
+if [ "$pm" = 'apk' ] && [ -n "$apkDel" ]; then
+	apk del --no-network $apkDel
+fi
+
+if [ -e /usr/src/php/.docker-delete-me ]; then
+	docker-php-source delete
+fi
\ No newline at end of file
diff --git a/src/php8/resources/bin/docker-php-source b/src/php8/resources/bin/docker-php-source
new file mode 100644
index 0000000..720d4ad
--- /dev/null
+++ b/src/php8/resources/bin/docker-php-source
@@ -0,0 +1,34 @@
+#!/bin/sh
+set -e
+
+dir=/usr/src/php
+
+usage() {
+	echo "usage: $0 COMMAND"
+	echo
+	echo "Manage php source tarball lifecycle."
+	echo
+	echo "Commands:"
+	echo "   extract  extract php source tarball into directory $dir if not already done."
+	echo "   delete   delete extracted php source located into $dir if not already done."
+	echo
+}
+
+case "$1" in
+	extract)
+		mkdir -p "$dir"
+		if [ ! -f "$dir/.docker-extracted" ]; then
+			tar -Jxf /usr/src/php.tar.xz -C "$dir" --strip-components=1
+			touch "$dir/.docker-extracted"
+		fi
+		;;
+
+	delete)
+		rm -rf "$dir"
+		;;
+
+	*)
+		usage
+		exit 1
+		;;
+esac
\ No newline at end of file

commit 819143bd3dc1fa1546c8efba27731620dbd538d0
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Sat Sep 11 22:55:05 2021 +0200

    Added pipeline

diff --git a/.github/workflows/docker-image.yml b/.github/workflows/docker-image.yml
new file mode 100644
index 0000000..2237135
--- /dev/null
+++ b/.github/workflows/docker-image.yml
@@ -0,0 +1,26 @@
+name: Docker Image CI
+
+on:
+  push:
+    tags:
+      - '*'
+
+jobs:
+
+  build_publish:
+    runs-on: ubuntu-latest
+    steps:
+    - uses: actions/checkout@v2
+    - name: Set env release
+      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
+    - name: Set env slug
+      run: echo "REPO_SLUG=php" >> $GITHUB_ENV
+    - name: Login into registry
+      env:
+        DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
+        DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
+      run: echo ${DOCKERHUB_PASSWORD} | docker login --username "${DOCKERHUB_USERNAME}" --password-stdin
+    - name: Build and Publish Image
+      env:
+        DOCKERHUB_NAMESPACE: ${{ secrets.DOCKERHUB_NAMESPACE }}
+      run: bash build_all.sh ${DOCKERHUB_NAMESPACE}/${REPO_SLUG} ${RELEASE_VERSION}
\ No newline at end of file

commit 9179edce1b2c91bd67e6bc226d60967a318915bc
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Sat Sep 11 20:07:30 2021 +0200

    Update

diff --git a/src/Dockerfile b/src/Dockerfile
index 55ec5d3..af32ed4 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -1,5 +1,5 @@
 ARG TAG_SUFFIX
-FROM sindriainc/php:1.0.1-${TAG_SUFFIX}
+FROM sindriainc/php:2.0.0-${TAG_SUFFIX}
 
 ARG TAG_VERSION
 ARG TAG_SUFFIX
@@ -22,7 +22,7 @@ ENV PHP_XDEBUG_HOST docker.host.internal
 ENV PHP_XDEBUG_PORT 9000
 ENV PHP_XDEBUG_IDE_KEY PHPSTORM
 
-#USER root
+USER root
 
 # Update and install packages
 RUN apk update && \
@@ -34,6 +34,14 @@ RUN apk update && \
     rsync && \
     rm -rf /var/cache/apk/*
 
+#USER ${SINDRIA_USER}
+
+# Install composer for sindria user
+#RUN curl -sS https://getcomposer.org/installer -o /tmp/composer-setup.php && \
+#    php /tmp/composer-setup.php --install-dir=/usr/local/bin --filename=composer
+
+#USER root
+
 # Install dev tools
 RUN curl -sS https://getcomposer.org/installer -o /tmp/composer-setup.php && \
     php /tmp/composer-setup.php --install-dir=/usr/local/bin --filename=composer && \
@@ -41,12 +49,12 @@ RUN curl -sS https://getcomposer.org/installer -o /tmp/composer-setup.php && \
     pecl install xdebug-3.0.0 || pecl install xdebug-2.6.0 && \
     docker-php-ext-enable xdebug && \
     apk del -f .build-deps && \
-    echo "xdebug.mode=${PHP_XDEBUG_MODE}" >> /usr/local/etc/php/conf.d/xdebug.ini && \
-    echo "xdebug.start_with_request=${PHP_XDEBUG_START_WITH_REQUEST}" >> /usr/local/etc/php/conf.d/xdebug.ini && \
-    echo "xdebug.client_host=${PHP_XDEBUG_HOST}" >> /usr/local/etc/php/conf.d/xdebug.ini && \
-    echo "xdebug.client_port=${PHP_XDEBUG_PORT}" >> /usr/local/etc/php/conf.d/xdebug.ini && \
-    echo "xdebug.idekey=${PHP_XDEBUG_IDE_KEY}" >> /usr/local/etc/php/conf.d/xdebug.ini && \
-    echo "xdebug.log=/var/log/xdebug.log" >> /usr/local/etc/php/conf.d/xdebug.ini && \
+    echo "xdebug.mode=${PHP_XDEBUG_MODE}" >> /etc/php/conf.d/xdebug.ini && \
+    echo "xdebug.start_with_request=${PHP_XDEBUG_START_WITH_REQUEST}" >> /etc/php/conf.d/xdebug.ini && \
+    echo "xdebug.client_host=${PHP_XDEBUG_HOST}" >> /etc/php/conf.d/xdebug.ini && \
+    echo "xdebug.client_port=${PHP_XDEBUG_PORT}" >> /etc/php/conf.d/xdebug.ini && \
+    echo "xdebug.idekey=${PHP_XDEBUG_IDE_KEY}" >> /etc/php/conf.d/xdebug.ini && \
+    echo "xdebug.log=/var/log/xdebug.log" >> /etc/php/conf.d/xdebug.ini && \
     touch /var/log/xdebug.log && \
     curl -L https://cs.symfony.com/download/php-cs-fixer-v2.phar -o /usr/local/bin/php-cs-fixer && \
     chmod +x /usr/local/bin/php-cs-fixer && \

commit 23636e7bb147c110dcd3db7dec38b58362497a0b
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Sat Sep 11 19:58:22 2021 +0200

    Fix 7.0 TMP

diff --git a/src/php7.0/Dockerfile b/src/php7.0/Dockerfile
index e216d21..d93cb5e 100644
--- a/src/php7.0/Dockerfile
+++ b/src/php7.0/Dockerfile
@@ -1,4 +1,4 @@
-FROM php:7.0-alpine
+FROM alpine:3.6
 
 ARG TAG_SUFFIX
 ARG TAG_VERSION
@@ -31,10 +31,6 @@ RUN apk update && \
     tzdata && \
     rm -rf /var/cache/apk/*
 
-## Install dependencies
-RUN apk add --no-cache --virtual build-dependencies gcc g++ make autoconf libffi-dev libc-dev libressl-dev curl-dev bzip2-dev libzip-dev libsodium libsodium-dev postgresql-dev libjpeg-turbo freetype freetype-dev libpng libpng-dev icu icu-dev oniguruma-dev gettext-dev libxml2-dev libedit-dev libxslt-dev imap-dev krb5-dev tidyhtml-dev libmemcached-libs imagemagick imagemagick-libs imagemagick-dev libjpeg-turbo-dev && \
-    rm -rf /var/cache/apk/*
-
 # Setting app user, timezone and permissions
 RUN addgroup -S ${SINDRIA_USER} -g ${HOST_USER_UID} && adduser -s /bin/bash -S ${SINDRIA_USER} -u ${HOST_USER_UID} -G ${SINDRIA_USER} -h ${SINDRIA_USER_HOME} && \
     mkdir -p /var/www && \
@@ -46,12 +42,11 @@ COPY resources/.bashrc ${SINDRIA_USER_HOME}
 
 WORKDIR /var/www/app
 
-# Install php extensions
-RUN docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/include/ || docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ && \
-    docker-php-ext-configure imap --with-kerberos --with-imap-ssl && \
-    docker-php-ext-install calendar ctype curl exif fileinfo ftp gd gettext iconv intl json mbstring mysqli pdo phar posix readline shmop sockets sysvmsg sysvshm xml zip xsl bcmath imap soap pgsql pdo_pgsql pdo_mysql pcntl tidy sodium && \
-    docker-php-ext-enable imagick redis opcache imap zip && \
-    apk add \
+# Installing PHP with extensions
+RUN apk add --no-cache php7 \
+    php7-common \
+    php7-cli \
+    php7-opcache \
     php7-calendar \
     php7-ctype \
     php7-curl \
@@ -68,6 +63,7 @@ RUN docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/i
     php7-pdo \
     php7-phar \
     php7-posix \
+    php7-dom \
     #php7-readline \
     php7-shmop \
     php7-sockets \
@@ -76,6 +72,8 @@ RUN docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/i
     php7-session \
     php7-openssl \
     php7-xml \
+    php7-xmlwriter \
+    php7-simplexml \
     php7-zip \
     php7-xsl \
     php7-bcmath \
@@ -83,15 +81,17 @@ RUN docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/i
     php7-pgsql \
     php7-pdo_pgsql \
     php7-pdo_mysql \
+    php7-pdo_sqlite \
     php7-pdo_dblib \
+    #php7-pecl-redis \
+    #php7-pecl-imagick \
     php7-pcntl \
     php7-tidy && \
     #pecl install pdo_dblib && \
-    pecl install imagick redis && \
-    docker-php-ext-enable \
-    imagick \
-    redis && \
-    apk del build-dependencies && \
+    #pecl install imagick redis && \
+    #docker-php-ext-enable \
+    #imagick \
+    #redis && \
     rm -rf /var/cache/apk/*
 
 SHELL ["/bin/bash", "-c"]

commit b1acca854ee064324d312351bbe2c1eab7720eed
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Sat Sep 11 19:45:03 2021 +0200

    Fix 7.1

diff --git a/src/php7.1/Dockerfile b/src/php7.1/Dockerfile
index c93b831..99ec6c7 100644
--- a/src/php7.1/Dockerfile
+++ b/src/php7.1/Dockerfile
@@ -1,4 +1,4 @@
-FROM php:7.1-alpine3.7
+FROM alpine:3.7
 
 ARG TAG_SUFFIX
 ARG TAG_VERSION
@@ -31,10 +31,6 @@ RUN apk update && \
     tzdata && \
     rm -rf /var/cache/apk/*
 
-## Install dependencies
-RUN apk add --no-cache --virtual build-dependencies gcc g++ make autoconf libffi-dev libc-dev libressl-dev curl-dev bzip2-dev libzip-dev libsodium libsodium-dev postgresql-dev libjpeg-turbo freetype freetype-dev libpng libpng-dev icu icu-dev oniguruma-dev gettext-dev libxml2-dev libedit-dev libxslt-dev imap-dev krb5-dev tidyhtml-dev libmemcached-libs imagemagick imagemagick-libs imagemagick-dev libjpeg-turbo-dev && \
-    rm -rf /var/cache/apk/*
-
 # Setting app user, timezone and permissions
 RUN addgroup -S ${SINDRIA_USER} -g ${HOST_USER_UID} && adduser -s /bin/bash -S ${SINDRIA_USER} -u ${HOST_USER_UID} -G ${SINDRIA_USER} -h ${SINDRIA_USER_HOME} && \
     mkdir -p /var/www && \
@@ -46,12 +42,11 @@ COPY resources/.bashrc ${SINDRIA_USER_HOME}
 
 WORKDIR /var/www/app
 
-# Install php extensions
-RUN docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/include/ || docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ && \
-    docker-php-ext-configure imap --with-kerberos --with-imap-ssl && \
-    docker-php-ext-install calendar ctype curl exif fileinfo ftp gd gettext iconv intl json mbstring mysqli pdo phar posix readline shmop sockets sysvmsg sysvshm xml zip xsl bcmath imap soap pgsql pdo_pgsql pdo_mysql pcntl tidy sodium && \
-    docker-php-ext-enable imagick redis opcache imap zip && \
-    apk add \
+# Installing PHP with extensions
+RUN apk add --no-cache php7 \
+    php7-common \
+    php7-cli \
+    php7-opcache \
     php7-calendar \
     php7-ctype \
     php7-curl \
@@ -68,6 +63,7 @@ RUN docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/i
     php7-pdo \
     php7-phar \
     php7-posix \
+    php7-dom \
     #php7-readline \
     php7-shmop \
     php7-sockets \
@@ -76,6 +72,8 @@ RUN docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/i
     php7-session \
     php7-openssl \
     php7-xml \
+    php7-xmlwriter \
+    php7-simplexml \
     php7-zip \
     php7-xsl \
     php7-bcmath \
@@ -83,15 +81,17 @@ RUN docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/i
     php7-pgsql \
     php7-pdo_pgsql \
     php7-pdo_mysql \
+    php7-pdo_sqlite \
     php7-pdo_dblib \
+    #php7-pecl-redis \
+    #php7-pecl-imagick \
     php7-pcntl \
     php7-tidy && \
     #pecl install pdo_dblib && \
-    pecl install imagick redis && \
-    docker-php-ext-enable \
-    imagick \
-    redis && \
-    apk del build-dependencies && \
+    #pecl install imagick redis && \
+    #docker-php-ext-enable \
+    #imagick \
+    #redis && \
     rm -rf /var/cache/apk/*
 
 SHELL ["/bin/bash", "-c"]

commit 394429566656c167220b831583ba1049ae0ee4a3
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Sat Sep 11 19:41:19 2021 +0200

    Fix 7.2

diff --git a/src/php7.2/Dockerfile b/src/php7.2/Dockerfile
index 96cfbea..37b90ab 100644
--- a/src/php7.2/Dockerfile
+++ b/src/php7.2/Dockerfile
@@ -1,4 +1,4 @@
-FROM php:7.2-alpine3.9
+FROM alpine:3.9
 
 ARG TAG_SUFFIX
 ARG TAG_VERSION
@@ -31,10 +31,6 @@ RUN apk update && \
     tzdata && \
     rm -rf /var/cache/apk/*
 
-## Install dependencies
-RUN apk add --no-cache --virtual build-dependencies gcc g++ make autoconf libffi-dev libc-dev libressl-dev curl-dev bzip2-dev libzip-dev libsodium libsodium-dev postgresql-dev libjpeg-turbo freetype freetype-dev libpng libpng-dev icu icu-dev oniguruma-dev gettext-dev libxml2-dev libedit-dev libxslt-dev imap-dev krb5-dev tidyhtml-dev libmemcached-libs imagemagick imagemagick-libs imagemagick-dev libjpeg-turbo-dev && \
-    rm -rf /var/cache/apk/*
-
 # Setting app user, timezone and permissions
 RUN addgroup -S ${SINDRIA_USER} -g ${HOST_USER_UID} && adduser -s /bin/bash -S ${SINDRIA_USER} -u ${HOST_USER_UID} -G ${SINDRIA_USER} -h ${SINDRIA_USER_HOME} && \
     mkdir -p /var/www && \
@@ -46,12 +42,11 @@ COPY resources/.bashrc ${SINDRIA_USER_HOME}
 
 WORKDIR /var/www/app
 
-# Install php extensions
-RUN docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/include/ || docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ && \
-    docker-php-ext-configure imap --with-kerberos --with-imap-ssl && \
-    docker-php-ext-install calendar ctype curl exif fileinfo ftp gd gettext iconv intl json mbstring mysqli pdo phar posix readline shmop sockets sysvmsg sysvshm xml zip xsl bcmath imap soap pgsql pdo_pgsql pdo_mysql pcntl tidy sodium && \
-    docker-php-ext-enable imagick redis opcache imap zip && \
-    apk add \
+# Installing PHP with extensions
+RUN apk add --no-cache php7 \
+    php7-common \
+    php7-cli \
+    php7-opcache \
     php7-calendar \
     php7-ctype \
     php7-curl \
@@ -68,6 +63,7 @@ RUN docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/i
     php7-pdo \
     php7-phar \
     php7-posix \
+    php7-dom \
     #php7-readline \
     php7-shmop \
     php7-sockets \
@@ -76,6 +72,8 @@ RUN docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/i
     php7-session \
     php7-openssl \
     php7-xml \
+    php7-xmlwriter \
+    php7-simplexml \
     php7-zip \
     php7-xsl \
     php7-bcmath \
@@ -83,17 +81,20 @@ RUN docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/i
     php7-pgsql \
     php7-pdo_pgsql \
     php7-pdo_mysql \
+    php7-pdo_sqlite \
     php7-pdo_dblib \
+    php7-pecl-redis \
+    php7-pecl-imagick \
+    #php7-pecl-swoole \
     php7-pcntl \
     php7-tidy && \
     #pecl install pdo_dblib && \
-    pecl install imagick redis && \
-    pecl install swoole && \
-    docker-php-ext-enable swoole && \
-    docker-php-ext-enable \
-    imagick \
-    redis && \
-    apk del build-dependencies && \
+    #pecl install imagick redis && \
+    #pecl install swoole && \
+    #docker-php-ext-enable swoole && \
+    #docker-php-ext-enable \
+    #imagick \
+    #redis && \
     rm -rf /var/cache/apk/*
 
 SHELL ["/bin/bash", "-c"]

commit a0fe77604b719b26a40bb6f374f0045d3347b924
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Sat Sep 11 19:39:12 2021 +0200

    Fix 7.4

diff --git a/src/php7.4/Dockerfile b/src/php7.4/Dockerfile
index f434c20..4ff3459 100644
--- a/src/php7.4/Dockerfile
+++ b/src/php7.4/Dockerfile
@@ -1,4 +1,4 @@
-FROM php:7.4-alpine
+FROM alpine:3.13
 
 ARG TAG_SUFFIX
 ARG TAG_VERSION
@@ -31,10 +31,6 @@ RUN apk update && \
     tzdata && \
     rm -rf /var/cache/apk/*
 
-## Install dependencies
-RUN apk add --no-cache --virtual build-dependencies gcc g++ make autoconf libffi-dev libc-dev libressl-dev curl-dev bzip2-dev libzip-dev libsodium libsodium-dev postgresql-dev libjpeg-turbo freetype freetype-dev libpng libpng-dev icu icu-dev oniguruma-dev gettext-dev libxml2-dev libedit-dev libxslt-dev imap-dev krb5-dev tidyhtml-dev libmemcached-libs imagemagick imagemagick-libs imagemagick-dev libjpeg-turbo-dev && \
-    rm -rf /var/cache/apk/*
-
 # Setting app user, timezone and permissions
 RUN addgroup -S ${SINDRIA_USER} -g ${HOST_USER_UID} && adduser -s /bin/bash -S ${SINDRIA_USER} -u ${HOST_USER_UID} -G ${SINDRIA_USER} -h ${SINDRIA_USER_HOME} && \
     mkdir -p /var/www && \
@@ -46,12 +42,11 @@ COPY resources/.bashrc ${SINDRIA_USER_HOME}
 
 WORKDIR /var/www/app
 
-# Install php extensions
-RUN docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/include/ || docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ && \
-    docker-php-ext-configure imap --with-kerberos --with-imap-ssl && \
-    docker-php-ext-install calendar ctype curl exif fileinfo ftp gd gettext iconv intl json mbstring mysqli pdo phar posix readline shmop sockets sysvmsg sysvshm xml zip xsl bcmath imap soap pgsql pdo_pgsql pdo_mysql pcntl tidy sodium && \
-    docker-php-ext-enable imagick redis opcache imap zip && \
-    apk add \
+# Installing PHP with extensions
+RUN apk add --no-cache php7 \
+    php7-common \
+    php7-cli \
+    php7-opcache \
     php7-calendar \
     php7-ctype \
     php7-curl \
@@ -68,6 +63,7 @@ RUN docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/i
     php7-pdo \
     php7-phar \
     php7-posix \
+    php7-dom \
     #php7-readline \
     php7-shmop \
     php7-sockets \
@@ -76,6 +72,8 @@ RUN docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/i
     php7-session \
     php7-openssl \
     php7-xml \
+    php7-xmlwriter \
+    php7-simplexml \
     php7-zip \
     php7-xsl \
     php7-bcmath \
@@ -83,17 +81,20 @@ RUN docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/i
     php7-pgsql \
     php7-pdo_pgsql \
     php7-pdo_mysql \
+    php7-pdo_sqlite \
     php7-pdo_dblib \
+    php7-pecl-redis \
+    php7-pecl-imagick \
+    #php7-pecl-swoole \
     php7-pcntl \
     php7-tidy && \
     #pecl install pdo_dblib && \
-    pecl install imagick redis && \
-    pecl install swoole && \
-    docker-php-ext-enable swoole && \
-    docker-php-ext-enable \
-    imagick \
-    redis && \
-    apk del build-dependencies && \
+    #pecl install imagick redis && \
+    #pecl install swoole && \
+    #docker-php-ext-enable swoole && \
+    #docker-php-ext-enable \
+    #imagick \
+    #redis && \
     rm -rf /var/cache/apk/*
 
 SHELL ["/bin/bash", "-c"]

commit ac88a5bd330cc10c908c8db4ba04ed28e2e4f017
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Sat Sep 11 19:35:45 2021 +0200

    Fix 7.3

diff --git a/src/php7.3/Dockerfile b/src/php7.3/Dockerfile
index 17924bf..a3bc8f7 100644
--- a/src/php7.3/Dockerfile
+++ b/src/php7.3/Dockerfile
@@ -1,10 +1,16 @@
-FROM php:7.3-alpine3.12 as builder
+FROM alpine:3.12
 
 ARG TAG_SUFFIX
 ARG TAG_VERSION
 ARG HOST_USER_UID
 ARG TIMEZONE
 
+LABEL \
+	name="php" \
+	image="sindriainc/php" \
+	tag="${TAG_VERSION}-${TAG_SUFFIX}" \
+	vendor="sindria"
+
 ENV PATH "/root/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/home/sindria/.local/bin"
 ENV TZ=${TIMEZONE}
 ENV SINDRIA_USER="sindria"
@@ -25,12 +31,22 @@ RUN apk update && \
     tzdata && \
     rm -rf /var/cache/apk/*
 
-## Install dependencies
-RUN apk add --no-cache --virtual build-dependencies gcc g++ make autoconf libffi-dev libc-dev libressl-dev curl-dev bzip2-dev libzip-dev libsodium libsodium-dev postgresql-dev libjpeg-turbo freetype freetype-dev libpng libpng-dev icu icu-dev oniguruma-dev gettext-dev libxml2-dev libedit-dev libxslt-dev imap-dev krb5-dev tidyhtml-dev libmemcached-libs imagemagick imagemagick-libs imagemagick-dev libjpeg-turbo-dev && \
-    rm -rf /var/cache/apk/*
+# Setting app user, timezone and permissions
+RUN addgroup -S ${SINDRIA_USER} -g ${HOST_USER_UID} && adduser -s /bin/bash -S ${SINDRIA_USER} -u ${HOST_USER_UID} -G ${SINDRIA_USER} -h ${SINDRIA_USER_HOME} && \
+    mkdir -p /var/www && \
+    mkdir -p /var/www/app && \
+    ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone && \
+    chmod -R 770 /var/www/app && \
+    chown -R ${SINDRIA_USER}:${SINDRIA_USER} /var/www/app
+COPY resources/.bashrc ${SINDRIA_USER_HOME}
+
+WORKDIR /var/www/app
 
-# Install php extensions
-RUN apk add \
+# Installing PHP with extensions
+RUN apk add --no-cache php7 \
+    php7-common \
+    php7-cli \
+    php7-opcache \
     php7-calendar \
     php7-ctype \
     php7-curl \
@@ -47,6 +63,7 @@ RUN apk add \
     php7-pdo \
     php7-phar \
     php7-posix \
+    php7-dom \
     #php7-readline \
     php7-shmop \
     php7-sockets \
@@ -55,6 +72,8 @@ RUN apk add \
     php7-session \
     php7-openssl \
     php7-xml \
+    php7-xmlwriter \
+    php7-simplexml \
     php7-zip \
     php7-xsl \
     php7-bcmath \
@@ -62,81 +81,22 @@ RUN apk add \
     php7-pgsql \
     php7-pdo_pgsql \
     php7-pdo_mysql \
+    php7-pdo_sqlite \
     php7-pdo_dblib \
+    php7-pecl-redis \
+    php7-pecl-imagick \
+    #php7-pecl-swoole \
     php7-pcntl \
     php7-tidy && \
     #pecl install pdo_dblib && \
-    pecl install imagick redis && \
-    pecl install swoole && \
-    docker-php-ext-enable swoole && \
-    docker-php-ext-enable \
-    imagick \
-    redis && \
-    docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/include/ || docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ && \
-    docker-php-ext-configure imap --with-kerberos --with-imap-ssl && \
-    docker-php-ext-install calendar ctype curl exif fileinfo ftp gd gettext iconv intl json mbstring mysqli pdo phar posix readline shmop sockets sysvmsg sysvshm xml zip xsl bcmath imap soap pgsql pdo_pgsql pdo_mysql pcntl tidy sodium && \
-    docker-php-ext-enable imagick redis opcache imap zip && \
-    #apk del build-dependencies && \
+    #pecl install imagick redis && \
+    #pecl install swoole && \
+    #docker-php-ext-enable swoole && \
+    #docker-php-ext-enable \
+    #imagick \
+    #redis && \
     rm -rf /var/cache/apk/*
 
-RUN ls -la /usr/lib
-
-
-FROM php:7.3-alpine3.12
-
-ARG TAG_SUFFIX
-ARG TAG_VERSION
-ARG HOST_USER_UID
-ARG TIMEZONE
-
-LABEL \
-	name="php" \
-	image="sindriainc/php" \
-	tag="${TAG_VERSION}-${TAG_SUFFIX}" \
-	vendor="sindria"
-
-ENV PATH "/root/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/home/sindria/.local/bin"
-ENV TZ=${TIMEZONE}
-ENV SINDRIA_USER="sindria"
-ENV SINDRIA_USER_HOME="/home/sindria"
-ENV PHP_VERSION=${TAG_SUFFIX}
-
-# Update and install packages
-RUN apk update && \
-    apk add \
-    shadow \
-    bash \
-    curl \
-    wget \
-    git \
-    rsync \
-    openssl \
-    ca-certificates \
-    tzdata && \
-    rm -rf /var/cache/apk/*
-
-# Setting app user, timezone and permissions
-RUN addgroup -S ${SINDRIA_USER} -g ${HOST_USER_UID} && adduser -s /bin/bash -S ${SINDRIA_USER} -u ${HOST_USER_UID} -G ${SINDRIA_USER} -h ${SINDRIA_USER_HOME} && \
-    mkdir -p /var/www && \
-    mkdir -p /var/www/app && \
-    ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone && \
-    chmod -R 770 /var/www/app && \
-    chown -R ${SINDRIA_USER}:${SINDRIA_USER} /var/www/app
-COPY resources/.bashrc ${SINDRIA_USER_HOME}
-
-WORKDIR /var/www/app
-
-# Add only required shared libraries
-COPY --from=builder /usr/lib/ /usr/lib/
-
-# Add php modules and configuration
-COPY --from=builder /usr/lib/php7/modules/ /usr/local/lib/php/extensions/no-debug-non-zts-20180731/
-COPY --from=builder /usr/local/lib/php/extensions/no-debug-non-zts-20180731/ /usr/local/lib/php/extensions/no-debug-non-zts-20180731/
-#COPY --from=builder /usr/local/etc/php/conf.d/ /usr/local/etc/php/conf.d/
-
-# Setting php.ini
-COPY resources/php/php.ini /usr/local/etc/php/
-
 SHELL ["/bin/bash", "-c"]
 
 # Add and setup entrypoint
diff --git a/src/php7.3/Dockerfile.embedded b/src/php7.3/Dockerfile.embedded
new file mode 100644
index 0000000..17924bf
--- /dev/null
+++ b/src/php7.3/Dockerfile.embedded
@@ -0,0 +1,146 @@
+FROM php:7.3-alpine3.12 as builder
+
+ARG TAG_SUFFIX
+ARG TAG_VERSION
+ARG HOST_USER_UID
+ARG TIMEZONE
+
+ENV PATH "/root/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/home/sindria/.local/bin"
+ENV TZ=${TIMEZONE}
+ENV SINDRIA_USER="sindria"
+ENV SINDRIA_USER_HOME="/home/sindria"
+ENV PHP_VERSION=${TAG_SUFFIX}
+
+# Update and install packages
+RUN apk update && \
+    apk add \
+    shadow \
+    bash \
+    curl \
+    wget \
+    git \
+    rsync \
+    openssl \
+    ca-certificates \
+    tzdata && \
+    rm -rf /var/cache/apk/*
+
+## Install dependencies
+RUN apk add --no-cache --virtual build-dependencies gcc g++ make autoconf libffi-dev libc-dev libressl-dev curl-dev bzip2-dev libzip-dev libsodium libsodium-dev postgresql-dev libjpeg-turbo freetype freetype-dev libpng libpng-dev icu icu-dev oniguruma-dev gettext-dev libxml2-dev libedit-dev libxslt-dev imap-dev krb5-dev tidyhtml-dev libmemcached-libs imagemagick imagemagick-libs imagemagick-dev libjpeg-turbo-dev && \
+    rm -rf /var/cache/apk/*
+
+# Install php extensions
+RUN apk add \
+    php7-calendar \
+    php7-ctype \
+    php7-curl \
+    php7-exif \
+    php7-fileinfo \
+    php7-ftp \
+    php7-gd \
+    php7-gettext \
+    php7-iconv \
+    php7-intl \
+    php7-json \
+    php7-mbstring \
+    php7-mysqli \
+    php7-pdo \
+    php7-phar \
+    php7-posix \
+    #php7-readline \
+    php7-shmop \
+    php7-sockets \
+    php7-sysvmsg \
+    php7-tokenizer \
+    php7-session \
+    php7-openssl \
+    php7-xml \
+    php7-zip \
+    php7-xsl \
+    php7-bcmath \
+    php7-imap \
+    php7-pgsql \
+    php7-pdo_pgsql \
+    php7-pdo_mysql \
+    php7-pdo_dblib \
+    php7-pcntl \
+    php7-tidy && \
+    #pecl install pdo_dblib && \
+    pecl install imagick redis && \
+    pecl install swoole && \
+    docker-php-ext-enable swoole && \
+    docker-php-ext-enable \
+    imagick \
+    redis && \
+    docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/include/ || docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ && \
+    docker-php-ext-configure imap --with-kerberos --with-imap-ssl && \
+    docker-php-ext-install calendar ctype curl exif fileinfo ftp gd gettext iconv intl json mbstring mysqli pdo phar posix readline shmop sockets sysvmsg sysvshm xml zip xsl bcmath imap soap pgsql pdo_pgsql pdo_mysql pcntl tidy sodium && \
+    docker-php-ext-enable imagick redis opcache imap zip && \
+    #apk del build-dependencies && \
+    rm -rf /var/cache/apk/*
+
+RUN ls -la /usr/lib
+
+
+FROM php:7.3-alpine3.12
+
+ARG TAG_SUFFIX
+ARG TAG_VERSION
+ARG HOST_USER_UID
+ARG TIMEZONE
+
+LABEL \
+	name="php" \
+	image="sindriainc/php" \
+	tag="${TAG_VERSION}-${TAG_SUFFIX}" \
+	vendor="sindria"
+
+ENV PATH "/root/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/home/sindria/.local/bin"
+ENV TZ=${TIMEZONE}
+ENV SINDRIA_USER="sindria"
+ENV SINDRIA_USER_HOME="/home/sindria"
+ENV PHP_VERSION=${TAG_SUFFIX}
+
+# Update and install packages
+RUN apk update && \
+    apk add \
+    shadow \
+    bash \
+    curl \
+    wget \
+    git \
+    rsync \
+    openssl \
+    ca-certificates \
+    tzdata && \
+    rm -rf /var/cache/apk/*
+
+# Setting app user, timezone and permissions
+RUN addgroup -S ${SINDRIA_USER} -g ${HOST_USER_UID} && adduser -s /bin/bash -S ${SINDRIA_USER} -u ${HOST_USER_UID} -G ${SINDRIA_USER} -h ${SINDRIA_USER_HOME} && \
+    mkdir -p /var/www && \
+    mkdir -p /var/www/app && \
+    ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone && \
+    chmod -R 770 /var/www/app && \
+    chown -R ${SINDRIA_USER}:${SINDRIA_USER} /var/www/app
+COPY resources/.bashrc ${SINDRIA_USER_HOME}
+
+WORKDIR /var/www/app
+
+# Add only required shared libraries
+COPY --from=builder /usr/lib/ /usr/lib/
+
+# Add php modules and configuration
+COPY --from=builder /usr/lib/php7/modules/ /usr/local/lib/php/extensions/no-debug-non-zts-20180731/
+COPY --from=builder /usr/local/lib/php/extensions/no-debug-non-zts-20180731/ /usr/local/lib/php/extensions/no-debug-non-zts-20180731/
+#COPY --from=builder /usr/local/etc/php/conf.d/ /usr/local/etc/php/conf.d/
+
+# Setting php.ini
+COPY resources/php/php.ini /usr/local/etc/php/
+
+SHELL ["/bin/bash", "-c"]
+
+# Add and setup entrypoint
+COPY resources/bin/entrypoint.sh /usr/local/bin/entrypoint.sh
+ENTRYPOINT ["/bin/bash", "entrypoint.sh"]
+
+#USER ${SINDRIA_USER}
\ No newline at end of file

commit 88fe6ac67ef200033626b44c84db456e5199b3d0
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Sat Sep 11 19:29:11 2021 +0200

    Added build utils

diff --git a/build_php7.0.sh b/build_php7.0.sh
new file mode 100644
index 0000000..27ba499
--- /dev/null
+++ b/build_php7.0.sh
@@ -0,0 +1,4 @@
+#!/usr/bin/env bash
+
+bash build.sh sindriainc/php 2.0.0 7.0
+docker push sindriainc/php:2.0.0-7.0
\ No newline at end of file
diff --git a/build_php7.1.sh b/build_php7.1.sh
new file mode 100644
index 0000000..71afe39
--- /dev/null
+++ b/build_php7.1.sh
@@ -0,0 +1,4 @@
+#!/usr/bin/env bash
+
+bash build.sh sindriainc/php 2.0.0 7.1
+docker push sindriainc/php:2.0.0-7.1
\ No newline at end of file
diff --git a/build_php7.2.sh b/build_php7.2.sh
new file mode 100644
index 0000000..8923f6f
--- /dev/null
+++ b/build_php7.2.sh
@@ -0,0 +1,4 @@
+#!/usr/bin/env bash
+
+bash build.sh sindriainc/php 2.0.0 7.2
+docker push sindriainc/php:2.0.0-7.2
\ No newline at end of file
diff --git a/build_php7.3.sh b/build_php7.3.sh
new file mode 100644
index 0000000..c8f827b
--- /dev/null
+++ b/build_php7.3.sh
@@ -0,0 +1,4 @@
+#!/usr/bin/env bash
+
+bash build.sh sindriainc/php 2.0.0 7.3
+docker push sindriainc/php:2.0.0-7.3
\ No newline at end of file
diff --git a/build_php7.4.sh b/build_php7.4.sh
new file mode 100644
index 0000000..2bb2f66
--- /dev/null
+++ b/build_php7.4.sh
@@ -0,0 +1,4 @@
+#!/usr/bin/env bash
+
+bash build.sh sindriainc/php 2.0.0 7.4
+docker push sindriainc/php:2.0.0-7.4
\ No newline at end of file
diff --git a/build_php8.sh b/build_php8.sh
new file mode 100644
index 0000000..ee9cbd3
--- /dev/null
+++ b/build_php8.sh
@@ -0,0 +1,4 @@
+#!/usr/bin/env bash
+
+bash build.sh sindriainc/php 2.0.0 8
+docker push sindriainc/php:2.0.0-8
\ No newline at end of file

commit 9b33f322e632b105338d6ff9a9bd111d7ed50bad
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Sat Sep 11 19:15:08 2021 +0200

    Fix php8

diff --git a/src/php7.3/Dockerfile b/src/php7.3/Dockerfile
index 4b3b53a..17924bf 100644
--- a/src/php7.3/Dockerfile
+++ b/src/php7.3/Dockerfile
@@ -137,7 +137,6 @@ COPY --from=builder /usr/local/lib/php/extensions/no-debug-non-zts-20180731/ /us
 # Setting php.ini
 COPY resources/php/php.ini /usr/local/etc/php/
 
-
 SHELL ["/bin/bash", "-c"]
 
 # Add and setup entrypoint
diff --git a/src/php8/Dockerfile b/src/php8/Dockerfile
index ead36da..cb2220c 100644
--- a/src/php8/Dockerfile
+++ b/src/php8/Dockerfile
@@ -1,4 +1,4 @@
-FROM php:8-alpine
+FROM alpine:3.13
 
 ARG TAG_SUFFIX
 ARG TAG_VERSION
@@ -31,10 +31,6 @@ RUN apk update && \
     tzdata && \
     rm -rf /var/cache/apk/*
 
-## Install dependencies
-RUN apk add --no-cache --virtual build-dependencies gcc g++ make autoconf libffi-dev libc-dev libressl-dev curl-dev bzip2-dev libzip-dev libsodium libsodium-dev postgresql-dev libjpeg-turbo freetype freetype-dev libpng libpng-dev icu icu-dev oniguruma-dev gettext-dev libxml2-dev libedit-dev libxslt-dev imap-dev krb5-dev tidyhtml-dev libmemcached-libs imagemagick imagemagick-libs imagemagick-dev libjpeg-turbo-dev && \
-    rm -rf /var/cache/apk/*
-
 # Setting app user, timezone and permissions
 RUN addgroup -S ${SINDRIA_USER} -g ${HOST_USER_UID} && adduser -s /bin/bash -S ${SINDRIA_USER} -u ${HOST_USER_UID} -G ${SINDRIA_USER} -h ${SINDRIA_USER_HOME} && \
     mkdir -p /var/www && \
@@ -46,54 +42,59 @@ COPY resources/.bashrc ${SINDRIA_USER_HOME}
 
 WORKDIR /var/www/app
 
-# Install php extensions
-RUN apk add \
-    php${PHP_VERSION}-calendar \
-    php${PHP_VERSION}-ctype \
-    php${PHP_VERSION}-curl \
-    php${PHP_VERSION}-exif \
-    php${PHP_VERSION}-fileinfo \
-    php${PHP_VERSION}-ftp \
-    php${PHP_VERSION}-gd \
-    php${PHP_VERSION}-gettext \
-    php${PHP_VERSION}-iconv \
-    php${PHP_VERSION}-intl \
-    php${PHP_VERSION}-json \
-    php${PHP_VERSION}-mbstring \
-    php${PHP_VERSION}-mysqli \
-    php${PHP_VERSION}-pdo \
-    php${PHP_VERSION}-phar \
-    php${PHP_VERSION}-posix \
-    #php${PHP_VERSION}-readline \
-    php${PHP_VERSION}-shmop \
-    php${PHP_VERSION}-sockets \
-    php${PHP_VERSION}-sysvmsg \
-    php${PHP_VERSION}-tokenizer \
-    php${PHP_VERSION}-session \
-    php${PHP_VERSION}-openssl \
-    php${PHP_VERSION}-xml \
-    php${PHP_VERSION}-zip \
-    php${PHP_VERSION}-xsl \
-    php${PHP_VERSION}-bcmath \
-    php${PHP_VERSION}-imap \
-    php${PHP_VERSION}-pgsql \
-    php${PHP_VERSION}-pdo_pgsql \
-    php${PHP_VERSION}-pdo_mysql \
-    php${PHP_VERSION}-pdo_dblib \
-    php${PHP_VERSION}-pcntl \
-    php${PHP_VERSION}-tidy && \
+# Installing PHP with extensions
+RUN apk add --no-cache php8 \
+    php8-common \
+    php8-cli \
+    php8-opcache \
+    php8-calendar \
+    php8-ctype \
+    php8-curl \
+    php8-exif \
+    php8-fileinfo \
+    php8-ftp \
+    php8-gd \
+    php8-gettext \
+    php8-iconv \
+    php8-intl \
+    php8-json \
+    php8-mbstring \
+    php8-mysqli \
+    php8-pdo \
+    php8-phar \
+    php8-posix \
+    php8-dom \
+    #php8-readline \
+    php8-shmop \
+    php8-sockets \
+    php8-sysvmsg \
+    php8-tokenizer \
+    php8-session \
+    php8-openssl \
+    php8-xml \
+    php8-xmlwriter \
+    php8-simplexml \
+    php8-zip \
+    php8-xsl \
+    php8-bcmath \
+    php8-imap \
+    php8-pgsql \
+    php8-pdo_pgsql \
+    php8-pdo_mysql \
+    php8-pdo_sqlite \
+    php8-pdo_dblib \
+    php8-pecl-redis \
+    php8-pecl-imagick \
+    #php8-pecl-swoole \
+    php8-pcntl \
+    php8-tidy && \
     #pecl install pdo_dblib && \
-    pecl install imagick redis && \
-    pecl install swoole && \
-    docker-php-ext-enable swoole && \
-    docker-php-ext-enable \
-    imagick \
-    redis && \
-    docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/include/ || docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ && \
-    docker-php-ext-configure imap --with-kerberos --with-imap-ssl && \
-    docker-php-ext-install calendar ctype curl exif fileinfo ftp gd gettext iconv intl json mbstring mysqli pdo phar posix readline shmop sockets sysvmsg sysvshm xml zip xsl bcmath imap soap pgsql pdo_pgsql pdo_mysql pcntl tidy sodium && \
-    docker-php-ext-enable imagick redis opcache imap zip && \
-    apk del build-dependencies && \
+    #pecl install imagick redis && \
+    #pecl install swoole && \
+    #docker-php-ext-enable swoole && \
+    #docker-php-ext-enable \
+    #imagick \
+    #redis && \
     rm -rf /var/cache/apk/*
 
 SHELL ["/bin/bash", "-c"]
diff --git a/src/php8/Dockerfile.old b/src/php8/Dockerfile.old
new file mode 100644
index 0000000..5382ce3
--- /dev/null
+++ b/src/php8/Dockerfile.old
@@ -0,0 +1,105 @@
+FROM php:8-alpine
+
+ARG TAG_SUFFIX
+ARG TAG_VERSION
+ARG HOST_USER_UID
+ARG TIMEZONE
+
+LABEL \
+	name="php" \
+	image="sindriainc/php" \
+	tag="${TAG_VERSION}-${TAG_SUFFIX}" \
+	vendor="sindria"
+
+ENV PATH "/root/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/home/sindria/.local/bin"
+ENV TZ=${TIMEZONE}
+ENV SINDRIA_USER="sindria"
+ENV SINDRIA_USER_HOME="/home/sindria"
+ENV PHP_VERSION=${TAG_SUFFIX}
+
+# Update and install packages
+RUN apk update && \
+    apk add \
+    shadow \
+    bash \
+    curl \
+    wget \
+    git \
+    rsync \
+    openssl \
+    ca-certificates \
+    tzdata && \
+    rm -rf /var/cache/apk/*
+
+## Install dependencies
+RUN apk add --no-cache --virtual build-dependencies gcc g++ make autoconf libffi-dev libc-dev libressl-dev curl-dev bzip2-dev libzip-dev libsodium libsodium-dev postgresql-dev libjpeg-turbo freetype freetype-dev libpng libpng-dev icu icu-dev oniguruma-dev gettext-dev libxml2-dev libedit-dev libxslt-dev imap-dev krb5-dev tidyhtml-dev libmemcached-libs imagemagick imagemagick-libs imagemagick-dev libjpeg-turbo-dev && \
+    rm -rf /var/cache/apk/*
+
+# Setting app user, timezone and permissions
+RUN addgroup -S ${SINDRIA_USER} -g ${HOST_USER_UID} && adduser -s /bin/bash -S ${SINDRIA_USER} -u ${HOST_USER_UID} -G ${SINDRIA_USER} -h ${SINDRIA_USER_HOME} && \
+    mkdir -p /var/www && \
+    mkdir -p /var/www/app && \
+    ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone && \
+    chmod -R 770 /var/www/app && \
+    chown -R ${SINDRIA_USER}:${SINDRIA_USER} /var/www/app
+COPY resources/.bashrc ${SINDRIA_USER_HOME}
+
+WORKDIR /var/www/app
+
+# Install php extensions
+RUN apk add \
+    php8-calendar \
+    php8-ctype \
+    php8-curl \
+    php8-exif \
+    php8-fileinfo \
+    php8-ftp \
+    php8-gd \
+    php8-gettext \
+    php8-iconv \
+    php8-intl \
+    php8-json \
+    php8-mbstring \
+    php8-mysqli \
+    php8-pdo \
+    php8-phar \
+    php8-posix \
+    #php8-readline \
+    php8-shmop \
+    php8-sockets \
+    php8-sysvmsg \
+    php8-tokenizer \
+    php8-session \
+    php8-openssl \
+    php8-xml \
+    php8-zip \
+    php8-xsl \
+    php8-bcmath \
+    php8-imap \
+    php8-pgsql \
+    php8-pdo_pgsql \
+    php8-pdo_mysql \
+    php8-pdo_dblib \
+    php8-pcntl \
+    php8-tidy && \
+    #pecl install pdo_dblib && \
+    pecl install imagick redis && \
+    pecl install swoole && \
+    docker-php-ext-enable swoole && \
+    docker-php-ext-enable \
+    imagick \
+    redis && \
+    #docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/include/ || docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ && \
+    #docker-php-ext-configure imap --with-kerberos --with-imap-ssl && \
+    #docker-php-ext-install calendar ctype curl exif fileinfo ftp gd gettext iconv intl json mbstring mysqli pdo phar posix readline shmop sockets sysvmsg sysvshm xml zip xsl bcmath imap soap pgsql pdo_pgsql pdo_mysql pcntl tidy sodium && \
+    #docker-php-ext-enable opcache imap zip && \
+    #apk del build-dependencies && \
+    rm -rf /var/cache/apk/*
+
+SHELL ["/bin/bash", "-c"]
+
+# Add and setup entrypoint
+COPY resources/bin/entrypoint.sh /usr/local/bin/entrypoint.sh
+ENTRYPOINT ["/bin/bash", "entrypoint.sh"]
+
+#USER ${SINDRIA_USER}
\ No newline at end of file

commit 3cd580265af12784cb6799571a2f4b53e50e82c2
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Sat Sep 11 02:50:45 2021 +0200

    Init embedded 7.3, Fix php 8

diff --git a/src/php7.3/Dockerfile b/src/php7.3/Dockerfile
index 5c015bb..4b3b53a 100644
--- a/src/php7.3/Dockerfile
+++ b/src/php7.3/Dockerfile
@@ -1,16 +1,10 @@
-FROM php:7.3-alpine3.12
+FROM php:7.3-alpine3.12 as builder
 
 ARG TAG_SUFFIX
 ARG TAG_VERSION
 ARG HOST_USER_UID
 ARG TIMEZONE
 
-LABEL \
-	name="php" \
-	image="sindriainc/php" \
-	tag="${TAG_VERSION}-${TAG_SUFFIX}" \
-	vendor="sindria"
-
 ENV PATH "/root/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/home/sindria/.local/bin"
 ENV TZ=${TIMEZONE}
 ENV SINDRIA_USER="sindria"
@@ -35,17 +29,6 @@ RUN apk update && \
 RUN apk add --no-cache --virtual build-dependencies gcc g++ make autoconf libffi-dev libc-dev libressl-dev curl-dev bzip2-dev libzip-dev libsodium libsodium-dev postgresql-dev libjpeg-turbo freetype freetype-dev libpng libpng-dev icu icu-dev oniguruma-dev gettext-dev libxml2-dev libedit-dev libxslt-dev imap-dev krb5-dev tidyhtml-dev libmemcached-libs imagemagick imagemagick-libs imagemagick-dev libjpeg-turbo-dev && \
     rm -rf /var/cache/apk/*
 
-# Setting app user, timezone and permissions
-RUN addgroup -S ${SINDRIA_USER} -g ${HOST_USER_UID} && adduser -s /bin/bash -S ${SINDRIA_USER} -u ${HOST_USER_UID} -G ${SINDRIA_USER} -h ${SINDRIA_USER_HOME} && \
-    mkdir -p /var/www && \
-    mkdir -p /var/www/app && \
-    ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone && \
-    chmod -R 770 /var/www/app && \
-    chown -R ${SINDRIA_USER}:${SINDRIA_USER} /var/www/app
-COPY resources/.bashrc ${SINDRIA_USER_HOME}
-
-WORKDIR /var/www/app
-
 # Install php extensions
 RUN apk add \
     php7-calendar \
@@ -93,9 +76,68 @@ RUN apk add \
     docker-php-ext-configure imap --with-kerberos --with-imap-ssl && \
     docker-php-ext-install calendar ctype curl exif fileinfo ftp gd gettext iconv intl json mbstring mysqli pdo phar posix readline shmop sockets sysvmsg sysvshm xml zip xsl bcmath imap soap pgsql pdo_pgsql pdo_mysql pcntl tidy sodium && \
     docker-php-ext-enable imagick redis opcache imap zip && \
-    apk del build-dependencies && \
+    #apk del build-dependencies && \
+    rm -rf /var/cache/apk/*
+
+RUN ls -la /usr/lib
+
+
+FROM php:7.3-alpine3.12
+
+ARG TAG_SUFFIX
+ARG TAG_VERSION
+ARG HOST_USER_UID
+ARG TIMEZONE
+
+LABEL \
+	name="php" \
+	image="sindriainc/php" \
+	tag="${TAG_VERSION}-${TAG_SUFFIX}" \
+	vendor="sindria"
+
+ENV PATH "/root/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/home/sindria/.local/bin"
+ENV TZ=${TIMEZONE}
+ENV SINDRIA_USER="sindria"
+ENV SINDRIA_USER_HOME="/home/sindria"
+ENV PHP_VERSION=${TAG_SUFFIX}
+
+# Update and install packages
+RUN apk update && \
+    apk add \
+    shadow \
+    bash \
+    curl \
+    wget \
+    git \
+    rsync \
+    openssl \
+    ca-certificates \
+    tzdata && \
     rm -rf /var/cache/apk/*
 
+# Setting app user, timezone and permissions
+RUN addgroup -S ${SINDRIA_USER} -g ${HOST_USER_UID} && adduser -s /bin/bash -S ${SINDRIA_USER} -u ${HOST_USER_UID} -G ${SINDRIA_USER} -h ${SINDRIA_USER_HOME} && \
+    mkdir -p /var/www && \
+    mkdir -p /var/www/app && \
+    ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone && \
+    chmod -R 770 /var/www/app && \
+    chown -R ${SINDRIA_USER}:${SINDRIA_USER} /var/www/app
+COPY resources/.bashrc ${SINDRIA_USER_HOME}
+
+WORKDIR /var/www/app
+
+# Add only required shared libraries
+COPY --from=builder /usr/lib/ /usr/lib/
+
+# Add php modules and configuration
+COPY --from=builder /usr/lib/php7/modules/ /usr/local/lib/php/extensions/no-debug-non-zts-20180731/
+COPY --from=builder /usr/local/lib/php/extensions/no-debug-non-zts-20180731/ /usr/local/lib/php/extensions/no-debug-non-zts-20180731/
+#COPY --from=builder /usr/local/etc/php/conf.d/ /usr/local/etc/php/conf.d/
+
+# Setting php.ini
+COPY resources/php/php.ini /usr/local/etc/php/
+
+
 SHELL ["/bin/bash", "-c"]
 
 # Add and setup entrypoint
diff --git a/src/php7.3/resources/php/php.ini b/src/php7.3/resources/php/php.ini
index e795b02..d0824d4 100644
--- a/src/php7.3/resources/php/php.ini
+++ b/src/php7.3/resources/php/php.ini
@@ -905,6 +905,34 @@ default_socket_timeout = 60
 ;   extension folders as well as the separate PECL DLL download (PHP 5+).
 ;   Be sure to appropriately set the extension_dir directive.
 ;
+
+; Sindria
+extension=gd
+extension=imap
+extension=sodium
+extension=gettext
+extension=pcntl.so
+extension=soap.so
+extension=pdo_mysql.so
+extension=zip
+zend_extension=opcache
+extension=imagick
+extension=mysqli.so
+extension=tidy
+extension=bcmath.so
+extension=xsl
+extension=pgsql.so
+extension=calendar.so
+extension=exif.so
+extension=intl
+extension=sockets.so
+extension=sysvshm.so
+extension=shmop.so
+extension=swoole
+extension=redis
+extension=sysvmsg.so
+extension=pdo_pgsql
+
 ;extension=bz2
 ;extension=curl
 ;extension=fileinfo

commit 477090c270ac26c95c15f76192643ec421c05b47
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Sat Sep 11 02:50:26 2021 +0200

    Init embedded 7.3, Fix php 8

diff --git a/src/php8/Dockerfile b/src/php8/Dockerfile
index 68f416f..ead36da 100644
--- a/src/php8/Dockerfile
+++ b/src/php8/Dockerfile
@@ -47,11 +47,7 @@ COPY resources/.bashrc ${SINDRIA_USER_HOME}
 WORKDIR /var/www/app
 
 # Install php extensions
-RUN docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/include/ || docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ && \
-    docker-php-ext-configure imap --with-kerberos --with-imap-ssl && \
-    docker-php-ext-install calendar ctype curl exif fileinfo ftp gd gettext iconv intl json mbstring mysqli pdo phar posix readline shmop sockets sysvmsg sysvshm xml zip xsl bcmath imap soap pgsql pdo_pgsql pdo_mysql pcntl tidy sodium && \
-    docker-php-ext-enable imagick redis opcache imap zip && \
-    apk add \
+RUN apk add \
     php${PHP_VERSION}-calendar \
     php${PHP_VERSION}-ctype \
     php${PHP_VERSION}-curl \
@@ -93,6 +89,10 @@ RUN docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/i
     docker-php-ext-enable \
     imagick \
     redis && \
+    docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/include/ || docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ && \
+    docker-php-ext-configure imap --with-kerberos --with-imap-ssl && \
+    docker-php-ext-install calendar ctype curl exif fileinfo ftp gd gettext iconv intl json mbstring mysqli pdo phar posix readline shmop sockets sysvmsg sysvshm xml zip xsl bcmath imap soap pgsql pdo_pgsql pdo_mysql pcntl tidy sodium && \
+    docker-php-ext-enable imagick redis opcache imap zip && \
     apk del build-dependencies && \
     rm -rf /var/cache/apk/*
 

commit 7151d15a7dddea0cc46e45158310385d48f6411a
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Sat Sep 11 01:06:52 2021 +0200

    Fix but not optimize

diff --git a/src/php7.0/Dockerfile b/src/php7.0/Dockerfile
index 3a60892..e216d21 100644
--- a/src/php7.0/Dockerfile
+++ b/src/php7.0/Dockerfile
@@ -32,15 +32,7 @@ RUN apk update && \
     rm -rf /var/cache/apk/*
 
 ## Install dependencies
-RUN apk add --no-cache --virtual build-dependencies \
-    gcc \
-    g++ \
-    make \
-    autoconf \
-    pkgconf \
-    imagemagick \
-    imagemagick-libs \
-    imagemagick-dev && \
+RUN apk add --no-cache --virtual build-dependencies gcc g++ make autoconf libffi-dev libc-dev libressl-dev curl-dev bzip2-dev libzip-dev libsodium libsodium-dev postgresql-dev libjpeg-turbo freetype freetype-dev libpng libpng-dev icu icu-dev oniguruma-dev gettext-dev libxml2-dev libedit-dev libxslt-dev imap-dev krb5-dev tidyhtml-dev libmemcached-libs imagemagick imagemagick-libs imagemagick-dev libjpeg-turbo-dev && \
     rm -rf /var/cache/apk/*
 
 # Setting app user, timezone and permissions
@@ -55,7 +47,11 @@ COPY resources/.bashrc ${SINDRIA_USER_HOME}
 WORKDIR /var/www/app
 
 # Install php extensions
-RUN apk add \
+RUN docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/include/ || docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ && \
+    docker-php-ext-configure imap --with-kerberos --with-imap-ssl && \
+    docker-php-ext-install calendar ctype curl exif fileinfo ftp gd gettext iconv intl json mbstring mysqli pdo phar posix readline shmop sockets sysvmsg sysvshm xml zip xsl bcmath imap soap pgsql pdo_pgsql pdo_mysql pcntl tidy sodium && \
+    docker-php-ext-enable imagick redis opcache imap zip && \
+    apk add \
     php7-calendar \
     php7-ctype \
     php7-curl \
diff --git a/src/php7.0/resources/php/00_openssl.ini b/src/php7.0/resources/php/conf.d/00_openssl.ini
similarity index 100%
rename from src/php7.0/resources/php/00_openssl.ini
rename to src/php7.0/resources/php/conf.d/00_openssl.ini
diff --git a/src/php7.0/resources/php/00_session.ini b/src/php7.0/resources/php/conf.d/00_session.ini
similarity index 100%
rename from src/php7.0/resources/php/00_session.ini
rename to src/php7.0/resources/php/conf.d/00_session.ini
diff --git a/src/php7.0/resources/php/00_tokenizer.ini b/src/php7.0/resources/php/conf.d/00_tokenizer.ini
similarity index 100%
rename from src/php7.0/resources/php/00_tokenizer.ini
rename to src/php7.0/resources/php/conf.d/00_tokenizer.ini
diff --git a/src/php7.1/Dockerfile b/src/php7.1/Dockerfile
index 9af1f73..c93b831 100644
--- a/src/php7.1/Dockerfile
+++ b/src/php7.1/Dockerfile
@@ -32,15 +32,7 @@ RUN apk update && \
     rm -rf /var/cache/apk/*
 
 ## Install dependencies
-RUN apk add --no-cache --virtual build-dependencies \
-    gcc \
-    g++ \
-    make \
-    autoconf \
-    pkgconf \
-    imagemagick \
-    imagemagick-libs \
-    imagemagick-dev && \
+RUN apk add --no-cache --virtual build-dependencies gcc g++ make autoconf libffi-dev libc-dev libressl-dev curl-dev bzip2-dev libzip-dev libsodium libsodium-dev postgresql-dev libjpeg-turbo freetype freetype-dev libpng libpng-dev icu icu-dev oniguruma-dev gettext-dev libxml2-dev libedit-dev libxslt-dev imap-dev krb5-dev tidyhtml-dev libmemcached-libs imagemagick imagemagick-libs imagemagick-dev libjpeg-turbo-dev && \
     rm -rf /var/cache/apk/*
 
 # Setting app user, timezone and permissions
@@ -55,7 +47,11 @@ COPY resources/.bashrc ${SINDRIA_USER_HOME}
 WORKDIR /var/www/app
 
 # Install php extensions
-RUN apk add \
+RUN docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/include/ || docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ && \
+    docker-php-ext-configure imap --with-kerberos --with-imap-ssl && \
+    docker-php-ext-install calendar ctype curl exif fileinfo ftp gd gettext iconv intl json mbstring mysqli pdo phar posix readline shmop sockets sysvmsg sysvshm xml zip xsl bcmath imap soap pgsql pdo_pgsql pdo_mysql pcntl tidy sodium && \
+    docker-php-ext-enable imagick redis opcache imap zip && \
+    apk add \
     php7-calendar \
     php7-ctype \
     php7-curl \
diff --git a/src/php7.1/resources/php/00_openssl.ini b/src/php7.1/resources/php/conf.d/00_openssl.ini
similarity index 100%
rename from src/php7.1/resources/php/00_openssl.ini
rename to src/php7.1/resources/php/conf.d/00_openssl.ini
diff --git a/src/php7.1/resources/php/00_session.ini b/src/php7.1/resources/php/conf.d/00_session.ini
similarity index 100%
rename from src/php7.1/resources/php/00_session.ini
rename to src/php7.1/resources/php/conf.d/00_session.ini
diff --git a/src/php7.1/resources/php/00_tokenizer.ini b/src/php7.1/resources/php/conf.d/00_tokenizer.ini
similarity index 100%
rename from src/php7.1/resources/php/00_tokenizer.ini
rename to src/php7.1/resources/php/conf.d/00_tokenizer.ini
diff --git a/src/php7.2/Dockerfile b/src/php7.2/Dockerfile
index 86bbb17..96cfbea 100644
--- a/src/php7.2/Dockerfile
+++ b/src/php7.2/Dockerfile
@@ -32,15 +32,7 @@ RUN apk update && \
     rm -rf /var/cache/apk/*
 
 ## Install dependencies
-RUN apk add --no-cache --virtual build-dependencies \
-    gcc \
-    g++ \
-    make \
-    autoconf \
-    pkgconf \
-    imagemagick \
-    imagemagick-libs \
-    imagemagick-dev && \
+RUN apk add --no-cache --virtual build-dependencies gcc g++ make autoconf libffi-dev libc-dev libressl-dev curl-dev bzip2-dev libzip-dev libsodium libsodium-dev postgresql-dev libjpeg-turbo freetype freetype-dev libpng libpng-dev icu icu-dev oniguruma-dev gettext-dev libxml2-dev libedit-dev libxslt-dev imap-dev krb5-dev tidyhtml-dev libmemcached-libs imagemagick imagemagick-libs imagemagick-dev libjpeg-turbo-dev && \
     rm -rf /var/cache/apk/*
 
 # Setting app user, timezone and permissions
@@ -55,7 +47,11 @@ COPY resources/.bashrc ${SINDRIA_USER_HOME}
 WORKDIR /var/www/app
 
 # Install php extensions
-RUN apk add \
+RUN docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/include/ || docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ && \
+    docker-php-ext-configure imap --with-kerberos --with-imap-ssl && \
+    docker-php-ext-install calendar ctype curl exif fileinfo ftp gd gettext iconv intl json mbstring mysqli pdo phar posix readline shmop sockets sysvmsg sysvshm xml zip xsl bcmath imap soap pgsql pdo_pgsql pdo_mysql pcntl tidy sodium && \
+    docker-php-ext-enable imagick redis opcache imap zip && \
+    apk add \
     php7-calendar \
     php7-ctype \
     php7-curl \
diff --git a/src/php7.2/resources/php/00_openssl.ini b/src/php7.2/resources/php/conf.d/00_openssl.ini
similarity index 100%
rename from src/php7.2/resources/php/00_openssl.ini
rename to src/php7.2/resources/php/conf.d/00_openssl.ini
diff --git a/src/php7.2/resources/php/00_session.ini b/src/php7.2/resources/php/conf.d/00_session.ini
similarity index 100%
rename from src/php7.2/resources/php/00_session.ini
rename to src/php7.2/resources/php/conf.d/00_session.ini
diff --git a/src/php7.2/resources/php/00_tokenizer.ini b/src/php7.2/resources/php/conf.d/00_tokenizer.ini
similarity index 100%
rename from src/php7.2/resources/php/00_tokenizer.ini
rename to src/php7.2/resources/php/conf.d/00_tokenizer.ini
diff --git a/src/php7.3/Dockerfile b/src/php7.3/Dockerfile
index 1c75478..5c015bb 100644
--- a/src/php7.3/Dockerfile
+++ b/src/php7.3/Dockerfile
@@ -32,15 +32,7 @@ RUN apk update && \
     rm -rf /var/cache/apk/*
 
 ## Install dependencies
-RUN apk add --no-cache --virtual build-dependencies \
-    gcc \
-    g++ \
-    make \
-    autoconf \
-    pkgconf \
-    imagemagick \
-    imagemagick-libs \
-    imagemagick-dev && \
+RUN apk add --no-cache --virtual build-dependencies gcc g++ make autoconf libffi-dev libc-dev libressl-dev curl-dev bzip2-dev libzip-dev libsodium libsodium-dev postgresql-dev libjpeg-turbo freetype freetype-dev libpng libpng-dev icu icu-dev oniguruma-dev gettext-dev libxml2-dev libedit-dev libxslt-dev imap-dev krb5-dev tidyhtml-dev libmemcached-libs imagemagick imagemagick-libs imagemagick-dev libjpeg-turbo-dev && \
     rm -rf /var/cache/apk/*
 
 # Setting app user, timezone and permissions
@@ -97,6 +89,10 @@ RUN apk add \
     docker-php-ext-enable \
     imagick \
     redis && \
+    docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/include/ || docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ && \
+    docker-php-ext-configure imap --with-kerberos --with-imap-ssl && \
+    docker-php-ext-install calendar ctype curl exif fileinfo ftp gd gettext iconv intl json mbstring mysqli pdo phar posix readline shmop sockets sysvmsg sysvshm xml zip xsl bcmath imap soap pgsql pdo_pgsql pdo_mysql pcntl tidy sodium && \
+    docker-php-ext-enable imagick redis opcache imap zip && \
     apk del build-dependencies && \
     rm -rf /var/cache/apk/*
 
diff --git a/src/php7.3/resources/php/00_openssl.ini b/src/php7.3/resources/php/conf.d/00_openssl.ini
similarity index 100%
rename from src/php7.3/resources/php/00_openssl.ini
rename to src/php7.3/resources/php/conf.d/00_openssl.ini
diff --git a/src/php7.3/resources/php/00_session.ini b/src/php7.3/resources/php/conf.d/00_session.ini
similarity index 100%
rename from src/php7.3/resources/php/00_session.ini
rename to src/php7.3/resources/php/conf.d/00_session.ini
diff --git a/src/php7.3/resources/php/00_tokenizer.ini b/src/php7.3/resources/php/conf.d/00_tokenizer.ini
similarity index 100%
rename from src/php7.3/resources/php/00_tokenizer.ini
rename to src/php7.3/resources/php/conf.d/00_tokenizer.ini
diff --git a/src/php7.3/resources/php/php.ini b/src/php7.3/resources/php/php.ini
new file mode 100644
index 0000000..e795b02
--- /dev/null
+++ b/src/php7.3/resources/php/php.ini
@@ -0,0 +1,1939 @@
+[PHP]
+
+;;;;;;;;;;;;;;;;;;;
+; About php.ini   ;
+;;;;;;;;;;;;;;;;;;;
+; PHP's initialization file, generally called php.ini, is responsible for
+; configuring many of the aspects of PHP's behavior.
+
+; PHP attempts to find and load this configuration from a number of locations.
+; The following is a summary of its search order:
+; 1. SAPI module specific location.
+; 2. The PHPRC environment variable. (As of PHP 5.2.0)
+; 3. A number of predefined registry keys on Windows (As of PHP 5.2.0)
+; 4. Current working directory (except CLI)
+; 5. The web server's directory (for SAPI modules), or directory of PHP
+; (otherwise in Windows)
+; 6. The directory from the --with-config-file-path compile time option, or the
+; Windows directory (usually C:\windows)
+; See the PHP docs for more specific information.
+; http://php.net/configuration.file
+
+; The syntax of the file is extremely simple.  Whitespace and lines
+; beginning with a semicolon are silently ignored (as you probably guessed).
+; Section headers (e.g. [Foo]) are also silently ignored, even though
+; they might mean something in the future.
+
+; Directives following the section heading [PATH=/www/mysite] only
+; apply to PHP files in the /www/mysite directory.  Directives
+; following the section heading [HOST=www.example.com] only apply to
+; PHP files served from www.example.com.  Directives set in these
+; special sections cannot be overridden by user-defined INI files or
+; at runtime. Currently, [PATH=] and [HOST=] sections only work under
+; CGI/FastCGI.
+; http://php.net/ini.sections
+
+; Directives are specified using the following syntax:
+; directive = value
+; Directive names are *case sensitive* - foo=bar is different from FOO=bar.
+; Directives are variables used to configure PHP or PHP extensions.
+; There is no name validation.  If PHP can't find an expected
+; directive because it is not set or is mistyped, a default value will be used.
+
+; The value can be a string, a number, a PHP constant (e.g. E_ALL or M_PI), one
+; of the INI constants (On, Off, True, False, Yes, No and None) or an expression
+; (e.g. E_ALL & ~E_NOTICE), a quoted string ("bar"), or a reference to a
+; previously set variable or directive (e.g. ${foo})
+
+; Expressions in the INI file are limited to bitwise operators and parentheses:
+; |  bitwise OR
+; ^  bitwise XOR
+; &  bitwise AND
+; ~  bitwise NOT
+; !  boolean NOT
+
+; Boolean flags can be turned on using the values 1, On, True or Yes.
+; They can be turned off using the values 0, Off, False or No.
+
+; An empty string can be denoted by simply not writing anything after the equal
+; sign, or by using the None keyword:
+
+; foo =         ; sets foo to an empty string
+; foo = None    ; sets foo to an empty string
+; foo = "None"  ; sets foo to the string 'None'
+
+; If you use constants in your value, and these constants belong to a
+; dynamically loaded extension (either a PHP extension or a Zend extension),
+; you may only use these constants *after* the line that loads the extension.
+
+;;;;;;;;;;;;;;;;;;;
+; About this file ;
+;;;;;;;;;;;;;;;;;;;
+; PHP comes packaged with two INI files. One that is recommended to be used
+; in production environments and one that is recommended to be used in
+; development environments.
+
+; php.ini-production contains settings which hold security, performance and
+; best practices at its core. But please be aware, these settings may break
+; compatibility with older or less security conscience applications. We
+; recommending using the production ini in production and testing environments.
+
+; php.ini-development is very similar to its production variant, except it is
+; much more verbose when it comes to errors. We recommend using the
+; development version only in development environments, as errors shown to
+; application users can inadvertently leak otherwise secure information.
+
+; This is the php.ini-production INI file.
+
+;;;;;;;;;;;;;;;;;;;
+; Quick Reference ;
+;;;;;;;;;;;;;;;;;;;
+; The following are all the settings which are different in either the production
+; or development versions of the INIs with respect to PHP's default behavior.
+; Please see the actual settings later in the document for more details as to why
+; we recommend these changes in PHP's behavior.
+
+; display_errors
+;   Default Value: On
+;   Development Value: On
+;   Production Value: Off
+
+; display_startup_errors
+;   Default Value: Off
+;   Development Value: On
+;   Production Value: Off
+
+; error_reporting
+;   Default Value: E_ALL & ~E_NOTICE & ~E_STRICT & ~E_DEPRECATED
+;   Development Value: E_ALL
+;   Production Value: E_ALL & ~E_DEPRECATED & ~E_STRICT
+
+; html_errors
+;   Default Value: On
+;   Development Value: On
+;   Production value: On
+
+; log_errors
+;   Default Value: Off
+;   Development Value: On
+;   Production Value: On
+
+; max_input_time
+;   Default Value: -1 (Unlimited)
+;   Development Value: 60 (60 seconds)
+;   Production Value: 60 (60 seconds)
+
+; output_buffering
+;   Default Value: Off
+;   Development Value: 4096
+;   Production Value: 4096
+
+; register_argc_argv
+;   Default Value: On
+;   Development Value: Off
+;   Production Value: Off
+
+; request_order
+;   Default Value: None
+;   Development Value: "GP"
+;   Production Value: "GP"
+
+; session.gc_divisor
+;   Default Value: 100
+;   Development Value: 1000
+;   Production Value: 1000
+
+; session.sid_bits_per_character
+;   Default Value: 4
+;   Development Value: 5
+;   Production Value: 5
+
+; short_open_tag
+;   Default Value: On
+;   Development Value: Off
+;   Production Value: Off
+
+; variables_order
+;   Default Value: "EGPCS"
+;   Development Value: "GPCS"
+;   Production Value: "GPCS"
+
+;;;;;;;;;;;;;;;;;;;;
+; php.ini Options  ;
+;;;;;;;;;;;;;;;;;;;;
+; Name for user-defined php.ini (.htaccess) files. Default is ".user.ini"
+;user_ini.filename = ".user.ini"
+
+; To disable this feature set this option to an empty value
+;user_ini.filename =
+
+; TTL for user-defined php.ini files (time-to-live) in seconds. Default is 300 seconds (5 minutes)
+;user_ini.cache_ttl = 300
+
+;;;;;;;;;;;;;;;;;;;;
+; Language Options ;
+;;;;;;;;;;;;;;;;;;;;
+
+; Enable the PHP scripting language engine under Apache.
+; http://php.net/engine
+engine = On
+
+; This directive determines whether or not PHP will recognize code between
+; <? and ?> tags as PHP source which should be processed as such. It is
+; generally recommended that <?php and ?> should be used and that this feature
+; should be disabled, as enabling it may result in issues when generating XML
+; documents, however this remains supported for backward compatibility reasons.
+; Note that this directive does not control the <?= shorthand tag, which can be
+; used regardless of this directive.
+; Default Value: On
+; Development Value: Off
+; Production Value: Off
+; http://php.net/short-open-tag
+short_open_tag = Off
+
+; The number of significant digits displayed in floating point numbers.
+; http://php.net/precision
+precision = 14
+
+; Output buffering is a mechanism for controlling how much output data
+; (excluding headers and cookies) PHP should keep internally before pushing that
+; data to the client. If your application's output exceeds this setting, PHP
+; will send that data in chunks of roughly the size you specify.
+; Turning on this setting and managing its maximum buffer size can yield some
+; interesting side-effects depending on your application and web server.
+; You may be able to send headers and cookies after you've already sent output
+; through print or echo. You also may see performance benefits if your server is
+; emitting less packets due to buffered output versus PHP streaming the output
+; as it gets it. On production servers, 4096 bytes is a good setting for performance
+; reasons.
+; Note: Output buffering can also be controlled via Output Buffering Control
+;   functions.
+; Possible Values:
+;   On = Enabled and buffer is unlimited. (Use with caution)
+;   Off = Disabled
+;   Integer = Enables the buffer and sets its maximum size in bytes.
+; Note: This directive is hardcoded to Off for the CLI SAPI
+; Default Value: Off
+; Development Value: 4096
+; Production Value: 4096
+; http://php.net/output-buffering
+output_buffering = 4096
+
+; You can redirect all of the output of your scripts to a function.  For
+; example, if you set output_handler to "mb_output_handler", character
+; encoding will be transparently converted to the specified encoding.
+; Setting any output handler automatically turns on output buffering.
+; Note: People who wrote portable scripts should not depend on this ini
+;   directive. Instead, explicitly set the output handler using ob_start().
+;   Using this ini directive may cause problems unless you know what script
+;   is doing.
+; Note: You cannot use both "mb_output_handler" with "ob_iconv_handler"
+;   and you cannot use both "ob_gzhandler" and "zlib.output_compression".
+; Note: output_handler must be empty if this is set 'On' !!!!
+;   Instead you must use zlib.output_handler.
+; http://php.net/output-handler
+;output_handler =
+
+; URL rewriter function rewrites URL on the fly by using
+; output buffer. You can set target tags by this configuration.
+; "form" tag is special tag. It will add hidden input tag to pass values.
+; Refer to session.trans_sid_tags for usage.
+; Default Value: "form="
+; Development Value: "form="
+; Production Value: "form="
+;url_rewriter.tags
+
+; URL rewriter will not rewrite absolute URL nor form by default. To enable
+; absolute URL rewrite, allowed hosts must be defined at RUNTIME.
+; Refer to session.trans_sid_hosts for more details.
+; Default Value: ""
+; Development Value: ""
+; Production Value: ""
+;url_rewriter.hosts
+
+; Transparent output compression using the zlib library
+; Valid values for this option are 'off', 'on', or a specific buffer size
+; to be used for compression (default is 4KB)
+; Note: Resulting chunk size may vary due to nature of compression. PHP
+;   outputs chunks that are few hundreds bytes each as a result of
+;   compression. If you prefer a larger chunk size for better
+;   performance, enable output_buffering in addition.
+; Note: You need to use zlib.output_handler instead of the standard
+;   output_handler, or otherwise the output will be corrupted.
+; http://php.net/zlib.output-compression
+zlib.output_compression = Off
+
+; http://php.net/zlib.output-compression-level
+;zlib.output_compression_level = -1
+
+; You cannot specify additional output handlers if zlib.output_compression
+; is activated here. This setting does the same as output_handler but in
+; a different order.
+; http://php.net/zlib.output-handler
+;zlib.output_handler =
+
+; Implicit flush tells PHP to tell the output layer to flush itself
+; automatically after every output block.  This is equivalent to calling the
+; PHP function flush() after each and every call to print() or echo() and each
+; and every HTML block.  Turning this option on has serious performance
+; implications and is generally recommended for debugging purposes only.
+; http://php.net/implicit-flush
+; Note: This directive is hardcoded to On for the CLI SAPI
+implicit_flush = Off
+
+; The unserialize callback function will be called (with the undefined class'
+; name as parameter), if the unserializer finds an undefined class
+; which should be instantiated. A warning appears if the specified function is
+; not defined, or if the function doesn't include/implement the missing class.
+; So only set this entry, if you really want to implement such a
+; callback-function.
+unserialize_callback_func =
+
+; When floats & doubles are serialized, store serialize_precision significant
+; digits after the floating point. The default value ensures that when floats
+; are decoded with unserialize, the data will remain the same.
+; The value is also used for json_encode when encoding double values.
+; If -1 is used, then dtoa mode 0 is used which automatically select the best
+; precision.
+serialize_precision = -1
+
+; open_basedir, if set, limits all file operations to the defined directory
+; and below.  This directive makes most sense if used in a per-directory
+; or per-virtualhost web server configuration file.
+; Note: disables the realpath cache
+; http://php.net/open-basedir
+;open_basedir =
+
+; This directive allows you to disable certain functions for security reasons.
+; It receives a comma-delimited list of function names.
+; http://php.net/disable-functions
+disable_functions =
+
+; This directive allows you to disable certain classes for security reasons.
+; It receives a comma-delimited list of class names.
+; http://php.net/disable-classes
+disable_classes =
+
+; Colors for Syntax Highlighting mode.  Anything that's acceptable in
+; <span style="color: ???????"> would work.
+; http://php.net/syntax-highlighting
+;highlight.string  = #DD0000
+;highlight.comment = #FF9900
+;highlight.keyword = #007700
+;highlight.default = #0000BB
+;highlight.html    = #000000
+
+; If enabled, the request will be allowed to complete even if the user aborts
+; the request. Consider enabling it if executing long requests, which may end up
+; being interrupted by the user or a browser timing out. PHP's default behavior
+; is to disable this feature.
+; http://php.net/ignore-user-abort
+;ignore_user_abort = On
+
+; Determines the size of the realpath cache to be used by PHP. This value should
+; be increased on systems where PHP opens many files to reflect the quantity of
+; the file operations performed.
+; Note: if open_basedir is set, the cache is disabled
+; http://php.net/realpath-cache-size
+;realpath_cache_size = 4096k
+
+; Duration of time, in seconds for which to cache realpath information for a given
+; file or directory. For systems with rarely changing files, consider increasing this
+; value.
+; http://php.net/realpath-cache-ttl
+;realpath_cache_ttl = 120
+
+; Enables or disables the circular reference collector.
+; http://php.net/zend.enable-gc
+zend.enable_gc = On
+
+; If enabled, scripts may be written in encodings that are incompatible with
+; the scanner.  CP936, Big5, CP949 and Shift_JIS are the examples of such
+; encodings.  To use this feature, mbstring extension must be enabled.
+; Default: Off
+;zend.multibyte = Off
+
+; Allows to set the default encoding for the scripts.  This value will be used
+; unless "declare(encoding=...)" directive appears at the top of the script.
+; Only affects if zend.multibyte is set.
+; Default: ""
+;zend.script_encoding =
+
+;;;;;;;;;;;;;;;;;
+; Miscellaneous ;
+;;;;;;;;;;;;;;;;;
+
+; Decides whether PHP may expose the fact that it is installed on the server
+; (e.g. by adding its signature to the Web server header).  It is no security
+; threat in any way, but it makes it possible to determine whether you use PHP
+; on your server or not.
+; http://php.net/expose-php
+expose_php = On
+
+;;;;;;;;;;;;;;;;;;;
+; Resource Limits ;
+;;;;;;;;;;;;;;;;;;;
+
+; Maximum execution time of each script, in seconds
+; http://php.net/max-execution-time
+; Note: This directive is hardcoded to 0 for the CLI SAPI
+max_execution_time = 30
+
+; Maximum amount of time each script may spend parsing request data. It's a good
+; idea to limit this time on productions servers in order to eliminate unexpectedly
+; long running scripts.
+; Note: This directive is hardcoded to -1 for the CLI SAPI
+; Default Value: -1 (Unlimited)
+; Development Value: 60 (60 seconds)
+; Production Value: 60 (60 seconds)
+; http://php.net/max-input-time
+max_input_time = 60
+
+; Maximum input variable nesting level
+; http://php.net/max-input-nesting-level
+;max_input_nesting_level = 64
+
+; How many GET/POST/COOKIE input variables may be accepted
+;max_input_vars = 1000
+
+; Maximum amount of memory a script may consume (128MB)
+; http://php.net/memory-limit
+memory_limit = 128M
+
+;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
+; Error handling and logging ;
+;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
+
+; This directive informs PHP of which errors, warnings and notices you would like
+; it to take action for. The recommended way of setting values for this
+; directive is through the use of the error level constants and bitwise
+; operators. The error level constants are below here for convenience as well as
+; some common settings and their meanings.
+; By default, PHP is set to take action on all errors, notices and warnings EXCEPT
+; those related to E_NOTICE and E_STRICT, which together cover best practices and
+; recommended coding standards in PHP. For performance reasons, this is the
+; recommend error reporting setting. Your production server shouldn't be wasting
+; resources complaining about best practices and coding standards. That's what
+; development servers and development settings are for.
+; Note: The php.ini-development file has this setting as E_ALL. This
+; means it pretty much reports everything which is exactly what you want during
+; development and early testing.
+;
+; Error Level Constants:
+; E_ALL             - All errors and warnings (includes E_STRICT as of PHP 5.4.0)
+; E_ERROR           - fatal run-time errors
+; E_RECOVERABLE_ERROR  - almost fatal run-time errors
+; E_WARNING         - run-time warnings (non-fatal errors)
+; E_PARSE           - compile-time parse errors
+; E_NOTICE          - run-time notices (these are warnings which often result
+;                     from a bug in your code, but it's possible that it was
+;                     intentional (e.g., using an uninitialized variable and
+;                     relying on the fact it is automatically initialized to an
+;                     empty string)
+; E_STRICT          - run-time notices, enable to have PHP suggest changes
+;                     to your code which will ensure the best interoperability
+;                     and forward compatibility of your code
+; E_CORE_ERROR      - fatal errors that occur during PHP's initial startup
+; E_CORE_WARNING    - warnings (non-fatal errors) that occur during PHP's
+;                     initial startup
+; E_COMPILE_ERROR   - fatal compile-time errors
+; E_COMPILE_WARNING - compile-time warnings (non-fatal errors)
+; E_USER_ERROR      - user-generated error message
+; E_USER_WARNING    - user-generated warning message
+; E_USER_NOTICE     - user-generated notice message
+; E_DEPRECATED      - warn about code that will not work in future versions
+;                     of PHP
+; E_USER_DEPRECATED - user-generated deprecation warnings
+;
+; Common Values:
+;   E_ALL (Show all errors, warnings and notices including coding standards.)
+;   E_ALL & ~E_NOTICE  (Show all errors, except for notices)
+;   E_ALL & ~E_NOTICE & ~E_STRICT  (Show all errors, except for notices and coding standards warnings.)
+;   E_COMPILE_ERROR|E_RECOVERABLE_ERROR|E_ERROR|E_CORE_ERROR  (Show only errors)
+; Default Value: E_ALL & ~E_NOTICE & ~E_STRICT & ~E_DEPRECATED
+; Development Value: E_ALL
+; Production Value: E_ALL & ~E_DEPRECATED & ~E_STRICT
+; http://php.net/error-reporting
+error_reporting = E_ALL & ~E_DEPRECATED & ~E_STRICT
+
+; This directive controls whether or not and where PHP will output errors,
+; notices and warnings too. Error output is very useful during development, but
+; it could be very dangerous in production environments. Depending on the code
+; which is triggering the error, sensitive information could potentially leak
+; out of your application such as database usernames and passwords or worse.
+; For production environments, we recommend logging errors rather than
+; sending them to STDOUT.
+; Possible Values:
+;   Off = Do not display any errors
+;   stderr = Display errors to STDERR (affects only CGI/CLI binaries!)
+;   On or stdout = Display errors to STDOUT
+; Default Value: On
+; Development Value: On
+; Production Value: Off
+; http://php.net/display-errors
+display_errors = Off
+
+; The display of errors which occur during PHP's startup sequence are handled
+; separately from display_errors. PHP's default behavior is to suppress those
+; errors from clients. Turning the display of startup errors on can be useful in
+; debugging configuration problems. We strongly recommend you
+; set this to 'off' for production servers.
+; Default Value: Off
+; Development Value: On
+; Production Value: Off
+; http://php.net/display-startup-errors
+display_startup_errors = Off
+
+; Besides displaying errors, PHP can also log errors to locations such as a
+; server-specific log, STDERR, or a location specified by the error_log
+; directive found below. While errors should not be displayed on productions
+; servers they should still be monitored and logging is a great way to do that.
+; Default Value: Off
+; Development Value: On
+; Production Value: On
+; http://php.net/log-errors
+log_errors = On
+
+; Set maximum length of log_errors. In error_log information about the source is
+; added. The default is 1024 and 0 allows to not apply any maximum length at all.
+; http://php.net/log-errors-max-len
+log_errors_max_len = 1024
+
+; Do not log repeated messages. Repeated errors must occur in same file on same
+; line unless ignore_repeated_source is set true.
+; http://php.net/ignore-repeated-errors
+ignore_repeated_errors = Off
+
+; Ignore source of message when ignoring repeated messages. When this setting
+; is On you will not log errors with repeated messages from different files or
+; source lines.
+; http://php.net/ignore-repeated-source
+ignore_repeated_source = Off
+
+; If this parameter is set to Off, then memory leaks will not be shown (on
+; stdout or in the log). This has only effect in a debug compile, and if
+; error reporting includes E_WARNING in the allowed list
+; http://php.net/report-memleaks
+report_memleaks = On
+
+; This setting is on by default.
+;report_zend_debug = 0
+
+; Store the last error/warning message in $php_errormsg (boolean). Setting this value
+; to On can assist in debugging and is appropriate for development servers. It should
+; however be disabled on production servers.
+; This directive is DEPRECATED.
+; Default Value: Off
+; Development Value: Off
+; Production Value: Off
+; http://php.net/track-errors
+;track_errors = Off
+
+; Turn off normal error reporting and emit XML-RPC error XML
+; http://php.net/xmlrpc-errors
+;xmlrpc_errors = 0
+
+; An XML-RPC faultCode
+;xmlrpc_error_number = 0
+
+; When PHP displays or logs an error, it has the capability of formatting the
+; error message as HTML for easier reading. This directive controls whether
+; the error message is formatted as HTML or not.
+; Note: This directive is hardcoded to Off for the CLI SAPI
+; Default Value: On
+; Development Value: On
+; Production value: On
+; http://php.net/html-errors
+html_errors = On
+
+; If html_errors is set to On *and* docref_root is not empty, then PHP
+; produces clickable error messages that direct to a page describing the error
+; or function causing the error in detail.
+; You can download a copy of the PHP manual from http://php.net/docs
+; and change docref_root to the base URL of your local copy including the
+; leading '/'. You must also specify the file extension being used including
+; the dot. PHP's default behavior is to leave these settings empty, in which
+; case no links to documentation are generated.
+; Note: Never use this feature for production boxes.
+; http://php.net/docref-root
+; Examples
+;docref_root = "/phpmanual/"
+
+; http://php.net/docref-ext
+;docref_ext = .html
+
+; String to output before an error message. PHP's default behavior is to leave
+; this setting blank.
+; http://php.net/error-prepend-string
+; Example:
+;error_prepend_string = "<span style='color: #ff0000'>"
+
+; String to output after an error message. PHP's default behavior is to leave
+; this setting blank.
+; http://php.net/error-append-string
+; Example:
+;error_append_string = "</span>"
+
+; Log errors to specified file. PHP's default behavior is to leave this value
+; empty.
+; http://php.net/error-log
+; Example:
+;error_log = php_errors.log
+; Log errors to syslog (Event Log on Windows).
+;error_log = syslog
+
+; The syslog ident is a string which is prepended to every message logged
+; to syslog. Only used when error_log is set to syslog.
+;syslog.ident = php
+
+; The syslog facility is used to specify what type of program is logging
+; the message. Only used when error_log is set to syslog.
+;syslog.facility = user
+
+; Set this to disable filtering control characters (the default).
+; Some loggers only accept NVT-ASCII, others accept anything that's not
+; control characters. If your logger accepts everything, then no filtering
+; is needed at all.
+; Allowed values are:
+;   ascii (all printable ASCII characters and NL)
+;   no-ctrl (all characters except control characters)
+;   all (all characters)
+;   raw (like "all", but messages are not split at newlines)
+; http://php.net/syslog.filter
+;syslog.filter = ascii
+
+;windows.show_crt_warning
+; Default value: 0
+; Development value: 0
+; Production value: 0
+
+;;;;;;;;;;;;;;;;;
+; Data Handling ;
+;;;;;;;;;;;;;;;;;
+
+; The separator used in PHP generated URLs to separate arguments.
+; PHP's default setting is "&".
+; http://php.net/arg-separator.output
+; Example:
+;arg_separator.output = "&amp;"
+
+; List of separator(s) used by PHP to parse input URLs into variables.
+; PHP's default setting is "&".
+; NOTE: Every character in this directive is considered as separator!
+; http://php.net/arg-separator.input
+; Example:
+;arg_separator.input = ";&"
+
+; This directive determines which super global arrays are registered when PHP
+; starts up. G,P,C,E & S are abbreviations for the following respective super
+; globals: GET, POST, COOKIE, ENV and SERVER. There is a performance penalty
+; paid for the registration of these arrays and because ENV is not as commonly
+; used as the others, ENV is not recommended on productions servers. You
+; can still get access to the environment variables through getenv() should you
+; need to.
+; Default Value: "EGPCS"
+; Development Value: "GPCS"
+; Production Value: "GPCS";
+; http://php.net/variables-order
+variables_order = "GPCS"
+
+; This directive determines which super global data (G,P & C) should be
+; registered into the super global array REQUEST. If so, it also determines
+; the order in which that data is registered. The values for this directive
+; are specified in the same manner as the variables_order directive,
+; EXCEPT one. Leaving this value empty will cause PHP to use the value set
+; in the variables_order directive. It does not mean it will leave the super
+; globals array REQUEST empty.
+; Default Value: None
+; Development Value: "GP"
+; Production Value: "GP"
+; http://php.net/request-order
+request_order = "GP"
+
+; This directive determines whether PHP registers $argv & $argc each time it
+; runs. $argv contains an array of all the arguments passed to PHP when a script
+; is invoked. $argc contains an integer representing the number of arguments
+; that were passed when the script was invoked. These arrays are extremely
+; useful when running scripts from the command line. When this directive is
+; enabled, registering these variables consumes CPU cycles and memory each time
+; a script is executed. For performance reasons, this feature should be disabled
+; on production servers.
+; Note: This directive is hardcoded to On for the CLI SAPI
+; Default Value: On
+; Development Value: Off
+; Production Value: Off
+; http://php.net/register-argc-argv
+register_argc_argv = Off
+
+; When enabled, the ENV, REQUEST and SERVER variables are created when they're
+; first used (Just In Time) instead of when the script starts. If these
+; variables are not used within a script, having this directive on will result
+; in a performance gain. The PHP directive register_argc_argv must be disabled
+; for this directive to have any affect.
+; http://php.net/auto-globals-jit
+auto_globals_jit = On
+
+; Whether PHP will read the POST data.
+; This option is enabled by default.
+; Most likely, you won't want to disable this option globally. It causes $_POST
+; and $_FILES to always be empty; the only way you will be able to read the
+; POST data will be through the php://input stream wrapper. This can be useful
+; to proxy requests or to process the POST data in a memory efficient fashion.
+; http://php.net/enable-post-data-reading
+;enable_post_data_reading = Off
+
+; Maximum size of POST data that PHP will accept.
+; Its value may be 0 to disable the limit. It is ignored if POST data reading
+; is disabled through enable_post_data_reading.
+; http://php.net/post-max-size
+post_max_size = 8M
+
+; Automatically add files before PHP document.
+; http://php.net/auto-prepend-file
+auto_prepend_file =
+
+; Automatically add files after PHP document.
+; http://php.net/auto-append-file
+auto_append_file =
+
+; By default, PHP will output a media type using the Content-Type header. To
+; disable this, simply set it to be empty.
+;
+; PHP's built-in default media type is set to text/html.
+; http://php.net/default-mimetype
+default_mimetype = "text/html"
+
+; PHP's default character set is set to UTF-8.
+; http://php.net/default-charset
+default_charset = "UTF-8"
+
+; PHP internal character encoding is set to empty.
+; If empty, default_charset is used.
+; http://php.net/internal-encoding
+;internal_encoding =
+
+; PHP input character encoding is set to empty.
+; If empty, default_charset is used.
+; http://php.net/input-encoding
+;input_encoding =
+
+; PHP output character encoding is set to empty.
+; If empty, default_charset is used.
+; See also output_buffer.
+; http://php.net/output-encoding
+;output_encoding =
+
+;;;;;;;;;;;;;;;;;;;;;;;;;
+; Paths and Directories ;
+;;;;;;;;;;;;;;;;;;;;;;;;;
+
+; UNIX: "/path1:/path2"
+include_path = ".:/usr/share/php7"
+;
+; Windows: "\path1;\path2"
+;include_path = ".;c:\php\includes"
+;
+; PHP's default setting for include_path is ".;/path/to/php/pear"
+; http://php.net/include-path
+
+; The root of the PHP pages, used only if nonempty.
+; if PHP was not compiled with FORCE_REDIRECT, you SHOULD set doc_root
+; if you are running php as a CGI under any web server (other than IIS)
+; see documentation for security issues.  The alternate is to use the
+; cgi.force_redirect configuration below
+; http://php.net/doc-root
+doc_root =
+
+; The directory under which PHP opens the script using /~username used only
+; if nonempty.
+; http://php.net/user-dir
+user_dir =
+
+; Directory in which the loadable extensions (modules) reside.
+; http://php.net/extension-dir
+;extension_dir = "./"
+; On windows:
+;extension_dir = "ext"
+
+; Directory where the temporary files should be placed.
+; Defaults to the system default (see sys_get_temp_dir)
+;sys_temp_dir = "/tmp"
+
+; Whether or not to enable the dl() function.  The dl() function does NOT work
+; properly in multithreaded servers, such as IIS or Zeus, and is automatically
+; disabled on them.
+; http://php.net/enable-dl
+enable_dl = Off
+
+; cgi.force_redirect is necessary to provide security running PHP as a CGI under
+; most web servers.  Left undefined, PHP turns this on by default.  You can
+; turn it off here AT YOUR OWN RISK
+; **You CAN safely turn this off for IIS, in fact, you MUST.**
+; http://php.net/cgi.force-redirect
+;cgi.force_redirect = 1
+
+; if cgi.nph is enabled it will force cgi to always sent Status: 200 with
+; every request. PHP's default behavior is to disable this feature.
+;cgi.nph = 1
+
+; if cgi.force_redirect is turned on, and you are not running under Apache or Netscape
+; (iPlanet) web servers, you MAY need to set an environment variable name that PHP
+; will look for to know it is OK to continue execution.  Setting this variable MAY
+; cause security issues, KNOW WHAT YOU ARE DOING FIRST.
+; http://php.net/cgi.redirect-status-env
+;cgi.redirect_status_env =
+
+; cgi.fix_pathinfo provides *real* PATH_INFO/PATH_TRANSLATED support for CGI.  PHP's
+; previous behaviour was to set PATH_TRANSLATED to SCRIPT_FILENAME, and to not grok
+; what PATH_INFO is.  For more information on PATH_INFO, see the cgi specs.  Setting
+; this to 1 will cause PHP CGI to fix its paths to conform to the spec.  A setting
+; of zero causes PHP to behave as before.  Default is 1.  You should fix your scripts
+; to use SCRIPT_FILENAME rather than PATH_TRANSLATED.
+; http://php.net/cgi.fix-pathinfo
+;cgi.fix_pathinfo=1
+
+; if cgi.discard_path is enabled, the PHP CGI binary can safely be placed outside
+; of the web tree and people will not be able to circumvent .htaccess security.
+;cgi.discard_path=1
+
+; FastCGI under IIS supports the ability to impersonate
+; security tokens of the calling client.  This allows IIS to define the
+; security context that the request runs under.  mod_fastcgi under Apache
+; does not currently support this feature (03/17/2002)
+; Set to 1 if running under IIS.  Default is zero.
+; http://php.net/fastcgi.impersonate
+;fastcgi.impersonate = 1
+
+; Disable logging through FastCGI connection. PHP's default behavior is to enable
+; this feature.
+;fastcgi.logging = 0
+
+; cgi.rfc2616_headers configuration option tells PHP what type of headers to
+; use when sending HTTP response code. If set to 0, PHP sends Status: header that
+; is supported by Apache. When this option is set to 1, PHP will send
+; RFC2616 compliant header.
+; Default is zero.
+; http://php.net/cgi.rfc2616-headers
+;cgi.rfc2616_headers = 0
+
+; cgi.check_shebang_line controls whether CGI PHP checks for line starting with #!
+; (shebang) at the top of the running script. This line might be needed if the
+; script support running both as stand-alone script and via PHP CGI<. PHP in CGI
+; mode skips this line and ignores its content if this directive is turned on.
+; http://php.net/cgi.check-shebang-line
+;cgi.check_shebang_line=1
+
+;;;;;;;;;;;;;;;;
+; File Uploads ;
+;;;;;;;;;;;;;;;;
+
+; Whether to allow HTTP file uploads.
+; http://php.net/file-uploads
+file_uploads = On
+
+; Temporary directory for HTTP uploaded files (will use system default if not
+; specified).
+; http://php.net/upload-tmp-dir
+;upload_tmp_dir =
+
+; Maximum allowed size for uploaded files.
+; http://php.net/upload-max-filesize
+upload_max_filesize = 2M
+
+; Maximum number of files that can be uploaded via a single request
+max_file_uploads = 20
+
+;;;;;;;;;;;;;;;;;;
+; Fopen wrappers ;
+;;;;;;;;;;;;;;;;;;
+
+; Whether to allow the treatment of URLs (like http:// or ftp://) as files.
+; http://php.net/allow-url-fopen
+allow_url_fopen = On
+
+; Whether to allow include/require to open URLs (like http:// or ftp://) as files.
+; http://php.net/allow-url-include
+allow_url_include = Off
+
+; Define the anonymous ftp password (your email address). PHP's default setting
+; for this is empty.
+; http://php.net/from
+;from="john@doe.com"
+
+; Define the User-Agent string. PHP's default setting for this is empty.
+; http://php.net/user-agent
+;user_agent="PHP"
+
+; Default timeout for socket based streams (seconds)
+; http://php.net/default-socket-timeout
+default_socket_timeout = 60
+
+; If your scripts have to deal with files from Macintosh systems,
+; or you are running on a Mac and need to deal with files from
+; unix or win32 systems, setting this flag will cause PHP to
+; automatically detect the EOL character in those files so that
+; fgets() and file() will work regardless of the source of the file.
+; http://php.net/auto-detect-line-endings
+;auto_detect_line_endings = Off
+
+;;;;;;;;;;;;;;;;;;;;;;
+; Dynamic Extensions ;
+;;;;;;;;;;;;;;;;;;;;;;
+
+; If you wish to have an extension loaded automatically, use the following
+; syntax:
+;
+;   extension=modulename
+;
+; For example:
+;
+;   extension=mysqli
+;
+; When the extension library to load is not located in the default extension
+; directory, You may specify an absolute path to the library file:
+;
+;   extension=/path/to/extension/mysqli.so
+;
+; Note : The syntax used in previous PHP versions ('extension=<ext>.so' and
+; 'extension='php_<ext>.dll') is supported for legacy reasons and may be
+; deprecated in a future PHP major version. So, when it is possible, please
+; move to the new ('extension=<ext>) syntax.
+;
+; Notes for Windows environments :
+;
+; - Many DLL files are located in the extensions/ (PHP 4) or ext/ (PHP 5+)
+;   extension folders as well as the separate PECL DLL download (PHP 5+).
+;   Be sure to appropriately set the extension_dir directive.
+;
+;extension=bz2
+;extension=curl
+;extension=fileinfo
+;extension=gd2
+;extension=gettext
+;extension=gmp
+;extension=intl
+;extension=imap
+;extension=interbase
+;extension=ldap
+;extension=mbstring
+;extension=exif      ; Must be after mbstring as it depends on it
+;extension=mysqli
+;extension=oci8_12c  ; Use with Oracle Database 12c Instant Client
+;extension=odbc
+;extension=openssl
+;extension=pdo_firebird
+;extension=pdo_mysql
+;extension=pdo_oci
+;extension=pdo_odbc
+;extension=pdo_pgsql
+;extension=pdo_sqlite
+;extension=pgsql
+;extension=shmop
+
+; The MIBS data available in the PHP distribution must be installed.
+; See http://www.php.net/manual/en/snmp.installation.php
+;extension=snmp
+
+;extension=soap
+;extension=sockets
+;extension=sodium
+;extension=sqlite3
+;extension=tidy
+;extension=xmlrpc
+;extension=xsl
+
+;;;;;;;;;;;;;;;;;;;
+; Module Settings ;
+;;;;;;;;;;;;;;;;;;;
+
+[CLI Server]
+; Whether the CLI web server uses ANSI color coding in its terminal output.
+cli_server.color = On
+
+[Date]
+; Defines the default timezone used by the date functions
+; http://php.net/date.timezone
+;date.timezone =
+
+; http://php.net/date.default-latitude
+;date.default_latitude = 31.7667
+
+; http://php.net/date.default-longitude
+;date.default_longitude = 35.2333
+
+; http://php.net/date.sunrise-zenith
+;date.sunrise_zenith = 90.583333
+
+; http://php.net/date.sunset-zenith
+;date.sunset_zenith = 90.583333
+
+[filter]
+; http://php.net/filter.default
+;filter.default = unsafe_raw
+
+; http://php.net/filter.default-flags
+;filter.default_flags =
+
+[iconv]
+; Use of this INI entry is deprecated, use global input_encoding instead.
+; If empty, default_charset or input_encoding or iconv.input_encoding is used.
+; The precedence is: default_charset < input_encoding < iconv.input_encoding
+;iconv.input_encoding =
+
+; Use of this INI entry is deprecated, use global internal_encoding instead.
+; If empty, default_charset or internal_encoding or iconv.internal_encoding is used.
+; The precedence is: default_charset < internal_encoding < iconv.internal_encoding
+;iconv.internal_encoding =
+
+; Use of this INI entry is deprecated, use global output_encoding instead.
+; If empty, default_charset or output_encoding or iconv.output_encoding is used.
+; The precedence is: default_charset < output_encoding < iconv.output_encoding
+; To use an output encoding conversion, iconv's output handler must be set
+; otherwise output encoding conversion cannot be performed.
+;iconv.output_encoding =
+
+[imap]
+; rsh/ssh logins are disabled by default. Use this INI entry if you want to
+; enable them. Note that the IMAP library does not filter mailbox names before
+; passing them to rsh/ssh command, thus passing untrusted data to this function
+; with rsh/ssh enabled is insecure.
+;imap.enable_insecure_rsh=0
+
+[intl]
+;intl.default_locale =
+; This directive allows you to produce PHP errors when some error
+; happens within intl functions. The value is the level of the error produced.
+; Default is 0, which does not produce any errors.
+;intl.error_level = E_WARNING
+;intl.use_exceptions = 0
+
+[sqlite3]
+; Directory pointing to SQLite3 extensions
+; http://php.net/sqlite3.extension-dir
+;sqlite3.extension_dir =
+
+; SQLite defensive mode flag (only available from SQLite 3.26+)
+; When the defensive flag is enabled, language features that allow ordinary
+; SQL to deliberately corrupt the database file are disabled. This forbids
+; writing directly to the schema, shadow tables (eg. FTS data tables), or
+; the sqlite_dbpage virtual table.
+; https://www.sqlite.org/c3ref/c_dbconfig_defensive.html
+; (for older SQLite versions, this flag has no use)
+;sqlite3.defensive = 1
+
+[Pcre]
+; PCRE library backtracking limit.
+; http://php.net/pcre.backtrack-limit
+;pcre.backtrack_limit=100000
+
+; PCRE library recursion limit.
+; Please note that if you set this value to a high number you may consume all
+; the available process stack and eventually crash PHP (due to reaching the
+; stack size limit imposed by the Operating System).
+; http://php.net/pcre.recursion-limit
+;pcre.recursion_limit=100000
+
+; Enables or disables JIT compilation of patterns. This requires the PCRE
+; library to be compiled with JIT support.
+;pcre.jit=1
+
+[Pdo]
+; Whether to pool ODBC connections. Can be one of "strict", "relaxed" or "off"
+; http://php.net/pdo-odbc.connection-pooling
+;pdo_odbc.connection_pooling=strict
+
+;pdo_odbc.db2_instance_name
+
+[Pdo_mysql]
+; Default socket name for local MySQL connects.  If empty, uses the built-in
+; MySQL defaults.
+pdo_mysql.default_socket=
+
+[Phar]
+; http://php.net/phar.readonly
+;phar.readonly = On
+
+; http://php.net/phar.require-hash
+;phar.require_hash = On
+
+;phar.cache_list =
+
+[mail function]
+; For Win32 only.
+; http://php.net/smtp
+SMTP = localhost
+; http://php.net/smtp-port
+smtp_port = 25
+
+; For Win32 only.
+; http://php.net/sendmail-from
+;sendmail_from = me@example.com
+
+; For Unix only.  You may supply arguments as well (default: "sendmail -t -i").
+; http://php.net/sendmail-path
+;sendmail_path =
+
+; Force the addition of the specified parameters to be passed as extra parameters
+; to the sendmail binary. These parameters will always replace the value of
+; the 5th parameter to mail().
+;mail.force_extra_parameters =
+
+; Add X-PHP-Originating-Script: that will include uid of the script followed by the filename
+mail.add_x_header = Off
+
+; The path to a log file that will log all mail() calls. Log entries include
+; the full path of the script, line number, To address and headers.
+;mail.log =
+; Log mail to syslog (Event Log on Windows).
+;mail.log = syslog
+
+[ODBC]
+; http://php.net/odbc.default-db
+;odbc.default_db    =  Not yet implemented
+
+; http://php.net/odbc.default-user
+;odbc.default_user  =  Not yet implemented
+
+; http://php.net/odbc.default-pw
+;odbc.default_pw    =  Not yet implemented
+
+; Controls the ODBC cursor model.
+; Default: SQL_CURSOR_STATIC (default).
+;odbc.default_cursortype
+
+; Allow or prevent persistent links.
+; http://php.net/odbc.allow-persistent
+odbc.allow_persistent = On
+
+; Check that a connection is still valid before reuse.
+; http://php.net/odbc.check-persistent
+odbc.check_persistent = On
+
+; Maximum number of persistent links.  -1 means no limit.
+; http://php.net/odbc.max-persistent
+odbc.max_persistent = -1
+
+; Maximum number of links (persistent + non-persistent).  -1 means no limit.
+; http://php.net/odbc.max-links
+odbc.max_links = -1
+
+; Handling of LONG fields.  Returns number of bytes to variables.  0 means
+; passthru.
+; http://php.net/odbc.defaultlrl
+odbc.defaultlrl = 4096
+
+; Handling of binary data.  0 means passthru, 1 return as is, 2 convert to char.
+; See the documentation on odbc_binmode and odbc_longreadlen for an explanation
+; of odbc.defaultlrl and odbc.defaultbinmode
+; http://php.net/odbc.defaultbinmode
+odbc.defaultbinmode = 1
+
+[Interbase]
+; Allow or prevent persistent links.
+ibase.allow_persistent = 1
+
+; Maximum number of persistent links.  -1 means no limit.
+ibase.max_persistent = -1
+
+; Maximum number of links (persistent + non-persistent).  -1 means no limit.
+ibase.max_links = -1
+
+; Default database name for ibase_connect().
+;ibase.default_db =
+
+; Default username for ibase_connect().
+;ibase.default_user =
+
+; Default password for ibase_connect().
+;ibase.default_password =
+
+; Default charset for ibase_connect().
+;ibase.default_charset =
+
+; Default timestamp format.
+ibase.timestampformat = "%Y-%m-%d %H:%M:%S"
+
+; Default date format.
+ibase.dateformat = "%Y-%m-%d"
+
+; Default time format.
+ibase.timeformat = "%H:%M:%S"
+
+[MySQLi]
+
+; Maximum number of persistent links.  -1 means no limit.
+; http://php.net/mysqli.max-persistent
+mysqli.max_persistent = -1
+
+; Allow accessing, from PHP's perspective, local files with LOAD DATA statements
+; http://php.net/mysqli.allow_local_infile
+;mysqli.allow_local_infile = On
+
+; Allow or prevent persistent links.
+; http://php.net/mysqli.allow-persistent
+mysqli.allow_persistent = On
+
+; Maximum number of links.  -1 means no limit.
+; http://php.net/mysqli.max-links
+mysqli.max_links = -1
+
+; Default port number for mysqli_connect().  If unset, mysqli_connect() will use
+; the $MYSQL_TCP_PORT or the mysql-tcp entry in /etc/services or the
+; compile-time value defined MYSQL_PORT (in that order).  Win32 will only look
+; at MYSQL_PORT.
+; http://php.net/mysqli.default-port
+mysqli.default_port = 3306
+
+; Default socket name for local MySQL connects.  If empty, uses the built-in
+; MySQL defaults.
+; http://php.net/mysqli.default-socket
+mysqli.default_socket =
+
+; Default host for mysql_connect() (doesn't apply in safe mode).
+; http://php.net/mysqli.default-host
+mysqli.default_host =
+
+; Default user for mysql_connect() (doesn't apply in safe mode).
+; http://php.net/mysqli.default-user
+mysqli.default_user =
+
+; Default password for mysqli_connect() (doesn't apply in safe mode).
+; Note that this is generally a *bad* idea to store passwords in this file.
+; *Any* user with PHP access can run 'echo get_cfg_var("mysqli.default_pw")
+; and reveal this password!  And of course, any users with read access to this
+; file will be able to reveal the password as well.
+; http://php.net/mysqli.default-pw
+mysqli.default_pw =
+
+; Allow or prevent reconnect
+mysqli.reconnect = Off
+
+[mysqlnd]
+; Enable / Disable collection of general statistics by mysqlnd which can be
+; used to tune and monitor MySQL operations.
+mysqlnd.collect_statistics = On
+
+; Enable / Disable collection of memory usage statistics by mysqlnd which can be
+; used to tune and monitor MySQL operations.
+mysqlnd.collect_memory_statistics = Off
+
+; Records communication from all extensions using mysqlnd to the specified log
+; file.
+; http://php.net/mysqlnd.debug
+;mysqlnd.debug =
+
+; Defines which queries will be logged.
+;mysqlnd.log_mask = 0
+
+; Default size of the mysqlnd memory pool, which is used by result sets.
+;mysqlnd.mempool_default_size = 16000
+
+; Size of a pre-allocated buffer used when sending commands to MySQL in bytes.
+;mysqlnd.net_cmd_buffer_size = 2048
+
+; Size of a pre-allocated buffer used for reading data sent by the server in
+; bytes.
+;mysqlnd.net_read_buffer_size = 32768
+
+; Timeout for network requests in seconds.
+;mysqlnd.net_read_timeout = 31536000
+
+; SHA-256 Authentication Plugin related. File with the MySQL server public RSA
+; key.
+;mysqlnd.sha256_server_public_key =
+
+[OCI8]
+
+; Connection: Enables privileged connections using external
+; credentials (OCI_SYSOPER, OCI_SYSDBA)
+; http://php.net/oci8.privileged-connect
+;oci8.privileged_connect = Off
+
+; Connection: The maximum number of persistent OCI8 connections per
+; process. Using -1 means no limit.
+; http://php.net/oci8.max-persistent
+;oci8.max_persistent = -1
+
+; Connection: The maximum number of seconds a process is allowed to
+; maintain an idle persistent connection. Using -1 means idle
+; persistent connections will be maintained forever.
+; http://php.net/oci8.persistent-timeout
+;oci8.persistent_timeout = -1
+
+; Connection: The number of seconds that must pass before issuing a
+; ping during oci_pconnect() to check the connection validity. When
+; set to 0, each oci_pconnect() will cause a ping. Using -1 disables
+; pings completely.
+; http://php.net/oci8.ping-interval
+;oci8.ping_interval = 60
+
+; Connection: Set this to a user chosen connection class to be used
+; for all pooled server requests with Oracle 11g Database Resident
+; Connection Pooling (DRCP).  To use DRCP, this value should be set to
+; the same string for all web servers running the same application,
+; the database pool must be configured, and the connection string must
+; specify to use a pooled server.
+;oci8.connection_class =
+
+; High Availability: Using On lets PHP receive Fast Application
+; Notification (FAN) events generated when a database node fails. The
+; database must also be configured to post FAN events.
+;oci8.events = Off
+
+; Tuning: This option enables statement caching, and specifies how
+; many statements to cache. Using 0 disables statement caching.
+; http://php.net/oci8.statement-cache-size
+;oci8.statement_cache_size = 20
+
+; Tuning: Enables statement prefetching and sets the default number of
+; rows that will be fetched automatically after statement execution.
+; http://php.net/oci8.default-prefetch
+;oci8.default_prefetch = 100
+
+; Compatibility. Using On means oci_close() will not close
+; oci_connect() and oci_new_connect() connections.
+; http://php.net/oci8.old-oci-close-semantics
+;oci8.old_oci_close_semantics = Off
+
+[PostgreSQL]
+; Allow or prevent persistent links.
+; http://php.net/pgsql.allow-persistent
+pgsql.allow_persistent = On
+
+; Detect broken persistent links always with pg_pconnect().
+; Auto reset feature requires a little overheads.
+; http://php.net/pgsql.auto-reset-persistent
+pgsql.auto_reset_persistent = Off
+
+; Maximum number of persistent links.  -1 means no limit.
+; http://php.net/pgsql.max-persistent
+pgsql.max_persistent = -1
+
+; Maximum number of links (persistent+non persistent).  -1 means no limit.
+; http://php.net/pgsql.max-links
+pgsql.max_links = -1
+
+; Ignore PostgreSQL backends Notice message or not.
+; Notice message logging require a little overheads.
+; http://php.net/pgsql.ignore-notice
+pgsql.ignore_notice = 0
+
+; Log PostgreSQL backends Notice message or not.
+; Unless pgsql.ignore_notice=0, module cannot log notice message.
+; http://php.net/pgsql.log-notice
+pgsql.log_notice = 0
+
+[bcmath]
+; Number of decimal digits for all bcmath functions.
+; http://php.net/bcmath.scale
+bcmath.scale = 0
+
+[browscap]
+; http://php.net/browscap
+;browscap = extra/browscap.ini
+
+[Session]
+; Handler used to store/retrieve data.
+; http://php.net/session.save-handler
+session.save_handler = files
+
+; Argument passed to save_handler.  In the case of files, this is the path
+; where data files are stored. Note: Windows users have to change this
+; variable in order to use PHP's session functions.
+;
+; The path can be defined as:
+;
+;     session.save_path = "N;/path"
+;
+; where N is an integer.  Instead of storing all the session files in
+; /path, what this will do is use subdirectories N-levels deep, and
+; store the session data in those directories.  This is useful if
+; your OS has problems with many files in one directory, and is
+; a more efficient layout for servers that handle many sessions.
+;
+; NOTE 1: PHP will not create this directory structure automatically.
+;         You can use the script in the ext/session dir for that purpose.
+; NOTE 2: See the section on garbage collection below if you choose to
+;         use subdirectories for session storage
+;
+; The file storage module creates files using mode 600 by default.
+; You can change that by using
+;
+;     session.save_path = "N;MODE;/path"
+;
+; where MODE is the octal representation of the mode. Note that this
+; does not overwrite the process's umask.
+; http://php.net/session.save-path
+;session.save_path = "/tmp"
+
+; Whether to use strict session mode.
+; Strict session mode does not accept an uninitialized session ID, and
+; regenerates the session ID if the browser sends an uninitialized session ID.
+; Strict mode protects applications from session fixation via a session adoption
+; vulnerability. It is disabled by default for maximum compatibility, but
+; enabling it is encouraged.
+; https://wiki.php.net/rfc/strict_sessions
+session.use_strict_mode = 0
+
+; Whether to use cookies.
+; http://php.net/session.use-cookies
+session.use_cookies = 1
+
+; http://php.net/session.cookie-secure
+;session.cookie_secure =
+
+; This option forces PHP to fetch and use a cookie for storing and maintaining
+; the session id. We encourage this operation as it's very helpful in combating
+; session hijacking when not specifying and managing your own session id. It is
+; not the be-all and end-all of session hijacking defense, but it's a good start.
+; http://php.net/session.use-only-cookies
+session.use_only_cookies = 1
+
+; Name of the session (used as cookie name).
+; http://php.net/session.name
+session.name = PHPSESSID
+
+; Initialize session on request startup.
+; http://php.net/session.auto-start
+session.auto_start = 0
+
+; Lifetime in seconds of cookie or, if 0, until browser is restarted.
+; http://php.net/session.cookie-lifetime
+session.cookie_lifetime = 0
+
+; The path for which the cookie is valid.
+; http://php.net/session.cookie-path
+session.cookie_path = /
+
+; The domain for which the cookie is valid.
+; http://php.net/session.cookie-domain
+session.cookie_domain =
+
+; Whether or not to add the httpOnly flag to the cookie, which makes it
+; inaccessible to browser scripting languages such as JavaScript.
+; http://php.net/session.cookie-httponly
+session.cookie_httponly =
+
+; Add SameSite attribute to cookie to help mitigate Cross-Site Request Forgery (CSRF/XSRF)
+; Current valid values are "Strict", "Lax" or "None". When using "None",
+; make sure to include the quotes, as `none` is interpreted like `false` in ini files.
+; https://tools.ietf.org/html/draft-west-first-party-cookies-07
+session.cookie_samesite =
+
+; Handler used to serialize data. php is the standard serializer of PHP.
+; http://php.net/session.serialize-handler
+session.serialize_handler = php
+
+; Defines the probability that the 'garbage collection' process is started on every
+; session initialization. The probability is calculated by using gc_probability/gc_divisor,
+; e.g. 1/100 means there is a 1% chance that the GC process starts on each request.
+; Default Value: 1
+; Development Value: 1
+; Production Value: 1
+; http://php.net/session.gc-probability
+session.gc_probability = 1
+
+; Defines the probability that the 'garbage collection' process is started on every
+; session initialization. The probability is calculated by using gc_probability/gc_divisor,
+; e.g. 1/100 means there is a 1% chance that the GC process starts on each request.
+; For high volume production servers, using a value of 1000 is a more efficient approach.
+; Default Value: 100
+; Development Value: 1000
+; Production Value: 1000
+; http://php.net/session.gc-divisor
+session.gc_divisor = 1000
+
+; After this number of seconds, stored data will be seen as 'garbage' and
+; cleaned up by the garbage collection process.
+; http://php.net/session.gc-maxlifetime
+session.gc_maxlifetime = 1440
+
+; NOTE: If you are using the subdirectory option for storing session files
+;       (see session.save_path above), then garbage collection does *not*
+;       happen automatically.  You will need to do your own garbage
+;       collection through a shell script, cron entry, or some other method.
+;       For example, the following script is the equivalent of setting
+;       session.gc_maxlifetime to 1440 (1440 seconds = 24 minutes):
+;          find /path/to/sessions -cmin +24 -type f | xargs rm
+
+; Check HTTP Referer to invalidate externally stored URLs containing ids.
+; HTTP_REFERER has to contain this substring for the session to be
+; considered as valid.
+; http://php.net/session.referer-check
+session.referer_check =
+
+; Set to {nocache,private,public,} to determine HTTP caching aspects
+; or leave this empty to avoid sending anti-caching headers.
+; http://php.net/session.cache-limiter
+session.cache_limiter = nocache
+
+; Document expires after n minutes.
+; http://php.net/session.cache-expire
+session.cache_expire = 180
+
+; trans sid support is disabled by default.
+; Use of trans sid may risk your users' security.
+; Use this option with caution.
+; - User may send URL contains active session ID
+;   to other person via. email/irc/etc.
+; - URL that contains active session ID may be stored
+;   in publicly accessible computer.
+; - User may access your site with the same session ID
+;   always using URL stored in browser's history or bookmarks.
+; http://php.net/session.use-trans-sid
+session.use_trans_sid = 0
+
+; Set session ID character length. This value could be between 22 to 256.
+; Shorter length than default is supported only for compatibility reason.
+; Users should use 32 or more chars.
+; http://php.net/session.sid-length
+; Default Value: 32
+; Development Value: 26
+; Production Value: 26
+session.sid_length = 26
+
+; The URL rewriter will look for URLs in a defined set of HTML tags.
+; <form> is special; if you include them here, the rewriter will
+; add a hidden <input> field with the info which is otherwise appended
+; to URLs. <form> tag's action attribute URL will not be modified
+; unless it is specified.
+; Note that all valid entries require a "=", even if no value follows.
+; Default Value: "a=href,area=href,frame=src,form="
+; Development Value: "a=href,area=href,frame=src,form="
+; Production Value: "a=href,area=href,frame=src,form="
+; http://php.net/url-rewriter.tags
+session.trans_sid_tags = "a=href,area=href,frame=src,form="
+
+; URL rewriter does not rewrite absolute URLs by default.
+; To enable rewrites for absolute paths, target hosts must be specified
+; at RUNTIME. i.e. use ini_set()
+; <form> tags is special. PHP will check action attribute's URL regardless
+; of session.trans_sid_tags setting.
+; If no host is defined, HTTP_HOST will be used for allowed host.
+; Example value: php.net,www.php.net,wiki.php.net
+; Use "," for multiple hosts. No spaces are allowed.
+; Default Value: ""
+; Development Value: ""
+; Production Value: ""
+;session.trans_sid_hosts=""
+
+; Define how many bits are stored in each character when converting
+; the binary hash data to something readable.
+; Possible values:
+;   4  (4 bits: 0-9, a-f)
+;   5  (5 bits: 0-9, a-v)
+;   6  (6 bits: 0-9, a-z, A-Z, "-", ",")
+; Default Value: 4
+; Development Value: 5
+; Production Value: 5
+; http://php.net/session.hash-bits-per-character
+session.sid_bits_per_character = 5
+
+; Enable upload progress tracking in $_SESSION
+; Default Value: On
+; Development Value: On
+; Production Value: On
+; http://php.net/session.upload-progress.enabled
+;session.upload_progress.enabled = On
+
+; Cleanup the progress information as soon as all POST data has been read
+; (i.e. upload completed).
+; Default Value: On
+; Development Value: On
+; Production Value: On
+; http://php.net/session.upload-progress.cleanup
+;session.upload_progress.cleanup = On
+
+; A prefix used for the upload progress key in $_SESSION
+; Default Value: "upload_progress_"
+; Development Value: "upload_progress_"
+; Production Value: "upload_progress_"
+; http://php.net/session.upload-progress.prefix
+;session.upload_progress.prefix = "upload_progress_"
+
+; The index name (concatenated with the prefix) in $_SESSION
+; containing the upload progress information
+; Default Value: "PHP_SESSION_UPLOAD_PROGRESS"
+; Development Value: "PHP_SESSION_UPLOAD_PROGRESS"
+; Production Value: "PHP_SESSION_UPLOAD_PROGRESS"
+; http://php.net/session.upload-progress.name
+;session.upload_progress.name = "PHP_SESSION_UPLOAD_PROGRESS"
+
+; How frequently the upload progress should be updated.
+; Given either in percentages (per-file), or in bytes
+; Default Value: "1%"
+; Development Value: "1%"
+; Production Value: "1%"
+; http://php.net/session.upload-progress.freq
+;session.upload_progress.freq =  "1%"
+
+; The minimum delay between updates, in seconds
+; Default Value: 1
+; Development Value: 1
+; Production Value: 1
+; http://php.net/session.upload-progress.min-freq
+;session.upload_progress.min_freq = "1"
+
+; Only write session data when session data is changed. Enabled by default.
+; http://php.net/session.lazy-write
+;session.lazy_write = On
+
+[Assertion]
+; Switch whether to compile assertions at all (to have no overhead at run-time)
+; -1: Do not compile at all
+;  0: Jump over assertion at run-time
+;  1: Execute assertions
+; Changing from or to a negative value is only possible in php.ini! (For turning assertions on and off at run-time, see assert.active, when zend.assertions = 1)
+; Default Value: 1
+; Development Value: 1
+; Production Value: -1
+; http://php.net/zend.assertions
+zend.assertions = -1
+
+; Assert(expr); active by default.
+; http://php.net/assert.active
+;assert.active = On
+
+; Throw an AssertionError on failed assertions
+; http://php.net/assert.exception
+;assert.exception = On
+
+; Issue a PHP warning for each failed assertion. (Overridden by assert.exception if active)
+; http://php.net/assert.warning
+;assert.warning = On
+
+; Don't bail out by default.
+; http://php.net/assert.bail
+;assert.bail = Off
+
+; User-function to be called if an assertion fails.
+; http://php.net/assert.callback
+;assert.callback = 0
+
+; Eval the expression with current error_reporting().  Set to true if you want
+; error_reporting(0) around the eval().
+; http://php.net/assert.quiet-eval
+;assert.quiet_eval = 0
+
+[COM]
+; path to a file containing GUIDs, IIDs or filenames of files with TypeLibs
+; http://php.net/com.typelib-file
+;com.typelib_file =
+
+; allow Distributed-COM calls
+; http://php.net/com.allow-dcom
+;com.allow_dcom = true
+
+; autoregister constants of a component's typlib on com_load()
+; http://php.net/com.autoregister-typelib
+;com.autoregister_typelib = true
+
+; register constants casesensitive
+; http://php.net/com.autoregister-casesensitive
+;com.autoregister_casesensitive = false
+
+; show warnings on duplicate constant registrations
+; http://php.net/com.autoregister-verbose
+;com.autoregister_verbose = true
+
+; The default character set code-page to use when passing strings to and from COM objects.
+; Default: system ANSI code page
+;com.code_page=
+
+[mbstring]
+; language for internal character representation.
+; This affects mb_send_mail() and mbstring.detect_order.
+; http://php.net/mbstring.language
+;mbstring.language = Japanese
+
+; Use of this INI entry is deprecated, use global internal_encoding instead.
+; internal/script encoding.
+; Some encoding cannot work as internal encoding. (e.g. SJIS, BIG5, ISO-2022-*)
+; If empty, default_charset or internal_encoding or iconv.internal_encoding is used.
+; The precedence is: default_charset < internal_encoding < iconv.internal_encoding
+;mbstring.internal_encoding =
+
+; Use of this INI entry is deprecated, use global input_encoding instead.
+; http input encoding.
+; mbstring.encoding_translation = On is needed to use this setting.
+; If empty, default_charset or input_encoding or mbstring.input is used.
+; The precedence is: default_charset < input_encoding < mbsting.http_input
+; http://php.net/mbstring.http-input
+;mbstring.http_input =
+
+; Use of this INI entry is deprecated, use global output_encoding instead.
+; http output encoding.
+; mb_output_handler must be registered as output buffer to function.
+; If empty, default_charset or output_encoding or mbstring.http_output is used.
+; The precedence is: default_charset < output_encoding < mbstring.http_output
+; To use an output encoding conversion, mbstring's output handler must be set
+; otherwise output encoding conversion cannot be performed.
+; http://php.net/mbstring.http-output
+;mbstring.http_output =
+
+; enable automatic encoding translation according to
+; mbstring.internal_encoding setting. Input chars are
+; converted to internal encoding by setting this to On.
+; Note: Do _not_ use automatic encoding translation for
+;       portable libs/applications.
+; http://php.net/mbstring.encoding-translation
+;mbstring.encoding_translation = Off
+
+; automatic encoding detection order.
+; "auto" detect order is changed according to mbstring.language
+; http://php.net/mbstring.detect-order
+;mbstring.detect_order = auto
+
+; substitute_character used when character cannot be converted
+; one from another
+; http://php.net/mbstring.substitute-character
+;mbstring.substitute_character = none
+
+; overload(replace) single byte functions by mbstring functions.
+; mail(), ereg(), etc are overloaded by mb_send_mail(), mb_ereg(),
+; etc. Possible values are 0,1,2,4 or combination of them.
+; For example, 7 for overload everything.
+; 0: No overload
+; 1: Overload mail() function
+; 2: Overload str*() functions
+; 4: Overload ereg*() functions
+; http://php.net/mbstring.func-overload
+;mbstring.func_overload = 0
+
+; enable strict encoding detection.
+; Default: Off
+;mbstring.strict_detection = On
+
+; This directive specifies the regex pattern of content types for which mb_output_handler()
+; is activated.
+; Default: mbstring.http_output_conv_mimetype=^(text/|application/xhtml\+xml)
+;mbstring.http_output_conv_mimetype=
+
+; This directive specifies maximum stack depth for mbstring regular expressions. It is similar
+; to the pcre.recursion_limit for PCRE. 
+; Default: 100000
+;mbstring.regex_stack_limit=100000
+
+[gd]
+; Tell the jpeg decode to ignore warnings and try to create
+; a gd image. The warning will then be displayed as notices
+; disabled by default
+; http://php.net/gd.jpeg-ignore-warning
+;gd.jpeg_ignore_warning = 1
+
+[exif]
+; Exif UNICODE user comments are handled as UCS-2BE/UCS-2LE and JIS as JIS.
+; With mbstring support this will automatically be converted into the encoding
+; given by corresponding encode setting. When empty mbstring.internal_encoding
+; is used. For the decode settings you can distinguish between motorola and
+; intel byte order. A decode setting cannot be empty.
+; http://php.net/exif.encode-unicode
+;exif.encode_unicode = ISO-8859-15
+
+; http://php.net/exif.decode-unicode-motorola
+;exif.decode_unicode_motorola = UCS-2BE
+
+; http://php.net/exif.decode-unicode-intel
+;exif.decode_unicode_intel    = UCS-2LE
+
+; http://php.net/exif.encode-jis
+;exif.encode_jis =
+
+; http://php.net/exif.decode-jis-motorola
+;exif.decode_jis_motorola = JIS
+
+; http://php.net/exif.decode-jis-intel
+;exif.decode_jis_intel    = JIS
+
+[Tidy]
+; The path to a default tidy configuration file to use when using tidy
+; http://php.net/tidy.default-config
+;tidy.default_config = /usr/local/lib/php/default.tcfg
+
+; Should tidy clean and repair output automatically?
+; WARNING: Do not use this option if you are generating non-html content
+; such as dynamic images
+; http://php.net/tidy.clean-output
+tidy.clean_output = Off
+
+[soap]
+; Enables or disables WSDL caching feature.
+; http://php.net/soap.wsdl-cache-enabled
+soap.wsdl_cache_enabled=1
+
+; Sets the directory name where SOAP extension will put cache files.
+; http://php.net/soap.wsdl-cache-dir
+soap.wsdl_cache_dir="/tmp"
+
+; (time to live) Sets the number of second while cached file will be used
+; instead of original one.
+; http://php.net/soap.wsdl-cache-ttl
+soap.wsdl_cache_ttl=86400
+
+; Sets the size of the cache limit. (Max. number of WSDL files to cache)
+soap.wsdl_cache_limit = 5
+
+[sysvshm]
+; A default size of the shared memory segment
+;sysvshm.init_mem = 10000
+
+[ldap]
+; Sets the maximum number of open links or -1 for unlimited.
+ldap.max_links = -1
+
+[dba]
+;dba.default_handler=
+
+[opcache]
+; Determines if Zend OPCache is enabled
+;opcache.enable=1
+
+; Determines if Zend OPCache is enabled for the CLI version of PHP
+;opcache.enable_cli=0
+
+; The OPcache shared memory storage size.
+;opcache.memory_consumption=128
+
+; The amount of memory for interned strings in Mbytes.
+;opcache.interned_strings_buffer=8
+
+; The maximum number of keys (scripts) in the OPcache hash table.
+; Only numbers between 200 and 1000000 are allowed.
+;opcache.max_accelerated_files=10000
+
+; The maximum percentage of "wasted" memory until a restart is scheduled.
+;opcache.max_wasted_percentage=5
+
+; When this directive is enabled, the OPcache appends the current working
+; directory to the script key, thus eliminating possible collisions between
+; files with the same name (basename). Disabling the directive improves
+; performance, but may break existing applications.
+;opcache.use_cwd=1
+
+; When disabled, you must reset the OPcache manually or restart the
+; webserver for changes to the filesystem to take effect.
+;opcache.validate_timestamps=1
+
+; How often (in seconds) to check file timestamps for changes to the shared
+; memory storage allocation. ("1" means validate once per second, but only
+; once per request. "0" means always validate)
+;opcache.revalidate_freq=2
+
+; Enables or disables file search in include_path optimization
+;opcache.revalidate_path=0
+
+; If disabled, all PHPDoc comments are dropped from the code to reduce the
+; size of the optimized code.
+;opcache.save_comments=1
+
+; Allow file existence override (file_exists, etc.) performance feature.
+;opcache.enable_file_override=0
+
+; A bitmask, where each bit enables or disables the appropriate OPcache
+; passes
+;opcache.optimization_level=0x7FFFBFFF
+
+;opcache.dups_fix=0
+
+; The location of the OPcache blacklist file (wildcards allowed).
+; Each OPcache blacklist file is a text file that holds the names of files
+; that should not be accelerated. The file format is to add each filename
+; to a new line. The filename may be a full path or just a file prefix
+; (i.e., /var/www/x  blacklists all the files and directories in /var/www
+; that start with 'x'). Line starting with a ; are ignored (comments).
+;opcache.blacklist_filename=
+
+; Allows exclusion of large files from being cached. By default all files
+; are cached.
+;opcache.max_file_size=0
+
+; Check the cache checksum each N requests.
+; The default value of "0" means that the checks are disabled.
+;opcache.consistency_checks=0
+
+; How long to wait (in seconds) for a scheduled restart to begin if the cache
+; is not being accessed.
+;opcache.force_restart_timeout=180
+
+; OPcache error_log file name. Empty string assumes "stderr".
+;opcache.error_log=
+
+; All OPcache errors go to the Web server log.
+; By default, only fatal errors (level 0) or errors (level 1) are logged.
+; You can also enable warnings (level 2), info messages (level 3) or
+; debug messages (level 4).
+;opcache.log_verbosity_level=1
+
+; Preferred Shared Memory back-end. Leave empty and let the system decide.
+;opcache.preferred_memory_model=
+
+; Protect the shared memory from unexpected writing during script execution.
+; Useful for internal debugging only.
+;opcache.protect_memory=0
+
+; Allows calling OPcache API functions only from PHP scripts which path is
+; started from specified string. The default "" means no restriction
+;opcache.restrict_api=
+
+; Mapping base of shared memory segments (for Windows only). All the PHP
+; processes have to map shared memory into the same address space. This
+; directive allows to manually fix the "Unable to reattach to base address"
+; errors.
+;opcache.mmap_base=
+
+; Enables and sets the second level cache directory.
+; It should improve performance when SHM memory is full, at server restart or
+; SHM reset. The default "" disables file based caching.
+;opcache.file_cache=
+
+; Enables or disables opcode caching in shared memory.
+;opcache.file_cache_only=0
+
+; Enables or disables checksum validation when script loaded from file cache.
+;opcache.file_cache_consistency_checks=1
+
+; Implies opcache.file_cache_only=1 for a certain process that failed to
+; reattach to the shared memory (for Windows only). Explicitly enabled file
+; cache is required.
+;opcache.file_cache_fallback=1
+
+; Enables or disables copying of PHP code (text segment) into HUGE PAGES.
+; This should improve performance, but requires appropriate OS configuration.
+;opcache.huge_code_pages=1
+
+; Validate cached file permissions.
+;opcache.validate_permission=0
+
+; Prevent name collisions in chroot'ed environment.
+;opcache.validate_root=0
+
+; If specified, it produces opcode dumps for debugging different stages of
+; optimizations.
+;opcache.opt_debug_level=0
+
+[curl]
+; A default value for the CURLOPT_CAINFO option. This is required to be an
+; absolute path.
+;curl.cainfo =
+
+[openssl]
+; The location of a Certificate Authority (CA) file on the local filesystem
+; to use when verifying the identity of SSL/TLS peers. Most users should
+; not specify a value for this directive as PHP will attempt to use the
+; OS-managed cert stores in its absence. If specified, this value may still
+; be overridden on a per-stream basis via the "cafile" SSL stream context
+; option.
+;openssl.cafile=
+
+; If openssl.cafile is not specified or if the CA file is not found, the
+; directory pointed to by openssl.capath is searched for a suitable
+; certificate. This value must be a correctly hashed certificate directory.
+; Most users should not specify a value for this directive as PHP will
+; attempt to use the OS-managed cert stores in its absence. If specified,
+; this value may still be overridden on a per-stream basis via the "capath"
+; SSL stream context option.
+;openssl.capath=
+
+; Local Variables:
+; tab-width: 4
+; End:
diff --git a/src/php7.3/resources/php/php.ini-development b/src/php7.3/resources/php/php.ini-development
new file mode 100644
index 0000000..b8ed4fb
--- /dev/null
+++ b/src/php7.3/resources/php/php.ini-development
@@ -0,0 +1,1937 @@
+[PHP]
+
+;;;;;;;;;;;;;;;;;;;
+; About php.ini   ;
+;;;;;;;;;;;;;;;;;;;
+; PHP's initialization file, generally called php.ini, is responsible for
+; configuring many of the aspects of PHP's behavior.
+
+; PHP attempts to find and load this configuration from a number of locations.
+; The following is a summary of its search order:
+; 1. SAPI module specific location.
+; 2. The PHPRC environment variable. (As of PHP 5.2.0)
+; 3. A number of predefined registry keys on Windows (As of PHP 5.2.0)
+; 4. Current working directory (except CLI)
+; 5. The web server's directory (for SAPI modules), or directory of PHP
+; (otherwise in Windows)
+; 6. The directory from the --with-config-file-path compile time option, or the
+; Windows directory (usually C:\windows)
+; See the PHP docs for more specific information.
+; http://php.net/configuration.file
+
+; The syntax of the file is extremely simple.  Whitespace and lines
+; beginning with a semicolon are silently ignored (as you probably guessed).
+; Section headers (e.g. [Foo]) are also silently ignored, even though
+; they might mean something in the future.
+
+; Directives following the section heading [PATH=/www/mysite] only
+; apply to PHP files in the /www/mysite directory.  Directives
+; following the section heading [HOST=www.example.com] only apply to
+; PHP files served from www.example.com.  Directives set in these
+; special sections cannot be overridden by user-defined INI files or
+; at runtime. Currently, [PATH=] and [HOST=] sections only work under
+; CGI/FastCGI.
+; http://php.net/ini.sections
+
+; Directives are specified using the following syntax:
+; directive = value
+; Directive names are *case sensitive* - foo=bar is different from FOO=bar.
+; Directives are variables used to configure PHP or PHP extensions.
+; There is no name validation.  If PHP can't find an expected
+; directive because it is not set or is mistyped, a default value will be used.
+
+; The value can be a string, a number, a PHP constant (e.g. E_ALL or M_PI), one
+; of the INI constants (On, Off, True, False, Yes, No and None) or an expression
+; (e.g. E_ALL & ~E_NOTICE), a quoted string ("bar"), or a reference to a
+; previously set variable or directive (e.g. ${foo})
+
+; Expressions in the INI file are limited to bitwise operators and parentheses:
+; |  bitwise OR
+; ^  bitwise XOR
+; &  bitwise AND
+; ~  bitwise NOT
+; !  boolean NOT
+
+; Boolean flags can be turned on using the values 1, On, True or Yes.
+; They can be turned off using the values 0, Off, False or No.
+
+; An empty string can be denoted by simply not writing anything after the equal
+; sign, or by using the None keyword:
+
+; foo =         ; sets foo to an empty string
+; foo = None    ; sets foo to an empty string
+; foo = "None"  ; sets foo to the string 'None'
+
+; If you use constants in your value, and these constants belong to a
+; dynamically loaded extension (either a PHP extension or a Zend extension),
+; you may only use these constants *after* the line that loads the extension.
+
+;;;;;;;;;;;;;;;;;;;
+; About this file ;
+;;;;;;;;;;;;;;;;;;;
+; PHP comes packaged with two INI files. One that is recommended to be used
+; in production environments and one that is recommended to be used in
+; development environments.
+
+; php.ini-production contains settings which hold security, performance and
+; best practices at its core. But please be aware, these settings may break
+; compatibility with older or less security conscience applications. We
+; recommending using the production ini in production and testing environments.
+
+; php.ini-development is very similar to its production variant, except it is
+; much more verbose when it comes to errors. We recommend using the
+; development version only in development environments, as errors shown to
+; application users can inadvertently leak otherwise secure information.
+
+; This is the php.ini-development INI file.
+
+;;;;;;;;;;;;;;;;;;;
+; Quick Reference ;
+;;;;;;;;;;;;;;;;;;;
+; The following are all the settings which are different in either the production
+; or development versions of the INIs with respect to PHP's default behavior.
+; Please see the actual settings later in the document for more details as to why
+; we recommend these changes in PHP's behavior.
+
+; display_errors
+;   Default Value: On
+;   Development Value: On
+;   Production Value: Off
+
+; display_startup_errors
+;   Default Value: Off
+;   Development Value: On
+;   Production Value: Off
+
+; error_reporting
+;   Default Value: E_ALL & ~E_NOTICE & ~E_STRICT & ~E_DEPRECATED
+;   Development Value: E_ALL
+;   Production Value: E_ALL & ~E_DEPRECATED & ~E_STRICT
+
+; html_errors
+;   Default Value: On
+;   Development Value: On
+;   Production value: On
+
+; log_errors
+;   Default Value: Off
+;   Development Value: On
+;   Production Value: On
+
+; max_input_time
+;   Default Value: -1 (Unlimited)
+;   Development Value: 60 (60 seconds)
+;   Production Value: 60 (60 seconds)
+
+; output_buffering
+;   Default Value: Off
+;   Development Value: 4096
+;   Production Value: 4096
+
+; register_argc_argv
+;   Default Value: On
+;   Development Value: Off
+;   Production Value: Off
+
+; request_order
+;   Default Value: None
+;   Development Value: "GP"
+;   Production Value: "GP"
+
+; session.gc_divisor
+;   Default Value: 100
+;   Development Value: 1000
+;   Production Value: 1000
+
+; session.sid_bits_per_character
+;   Default Value: 4
+;   Development Value: 5
+;   Production Value: 5
+
+; short_open_tag
+;   Default Value: On
+;   Development Value: Off
+;   Production Value: Off
+
+; variables_order
+;   Default Value: "EGPCS"
+;   Development Value: "GPCS"
+;   Production Value: "GPCS"
+
+;;;;;;;;;;;;;;;;;;;;
+; php.ini Options  ;
+;;;;;;;;;;;;;;;;;;;;
+; Name for user-defined php.ini (.htaccess) files. Default is ".user.ini"
+;user_ini.filename = ".user.ini"
+
+; To disable this feature set this option to an empty value
+;user_ini.filename =
+
+; TTL for user-defined php.ini files (time-to-live) in seconds. Default is 300 seconds (5 minutes)
+;user_ini.cache_ttl = 300
+
+;;;;;;;;;;;;;;;;;;;;
+; Language Options ;
+;;;;;;;;;;;;;;;;;;;;
+
+; Enable the PHP scripting language engine under Apache.
+; http://php.net/engine
+engine = On
+
+; This directive determines whether or not PHP will recognize code between
+; <? and ?> tags as PHP source which should be processed as such. It is
+; generally recommended that <?php and ?> should be used and that this feature
+; should be disabled, as enabling it may result in issues when generating XML
+; documents, however this remains supported for backward compatibility reasons.
+; Note that this directive does not control the <?= shorthand tag, which can be
+; used regardless of this directive.
+; Default Value: On
+; Development Value: Off
+; Production Value: Off
+; http://php.net/short-open-tag
+short_open_tag = Off
+
+; The number of significant digits displayed in floating point numbers.
+; http://php.net/precision
+precision = 14
+
+; Output buffering is a mechanism for controlling how much output data
+; (excluding headers and cookies) PHP should keep internally before pushing that
+; data to the client. If your application's output exceeds this setting, PHP
+; will send that data in chunks of roughly the size you specify.
+; Turning on this setting and managing its maximum buffer size can yield some
+; interesting side-effects depending on your application and web server.
+; You may be able to send headers and cookies after you've already sent output
+; through print or echo. You also may see performance benefits if your server is
+; emitting less packets due to buffered output versus PHP streaming the output
+; as it gets it. On production servers, 4096 bytes is a good setting for performance
+; reasons.
+; Note: Output buffering can also be controlled via Output Buffering Control
+;   functions.
+; Possible Values:
+;   On = Enabled and buffer is unlimited. (Use with caution)
+;   Off = Disabled
+;   Integer = Enables the buffer and sets its maximum size in bytes.
+; Note: This directive is hardcoded to Off for the CLI SAPI
+; Default Value: Off
+; Development Value: 4096
+; Production Value: 4096
+; http://php.net/output-buffering
+output_buffering = 4096
+
+; You can redirect all of the output of your scripts to a function.  For
+; example, if you set output_handler to "mb_output_handler", character
+; encoding will be transparently converted to the specified encoding.
+; Setting any output handler automatically turns on output buffering.
+; Note: People who wrote portable scripts should not depend on this ini
+;   directive. Instead, explicitly set the output handler using ob_start().
+;   Using this ini directive may cause problems unless you know what script
+;   is doing.
+; Note: You cannot use both "mb_output_handler" with "ob_iconv_handler"
+;   and you cannot use both "ob_gzhandler" and "zlib.output_compression".
+; Note: output_handler must be empty if this is set 'On' !!!!
+;   Instead you must use zlib.output_handler.
+; http://php.net/output-handler
+;output_handler =
+
+; URL rewriter function rewrites URL on the fly by using
+; output buffer. You can set target tags by this configuration.
+; "form" tag is special tag. It will add hidden input tag to pass values.
+; Refer to session.trans_sid_tags for usage.
+; Default Value: "form="
+; Development Value: "form="
+; Production Value: "form="
+;url_rewriter.tags
+
+; URL rewriter will not rewrite absolute URL nor form by default. To enable
+; absolute URL rewrite, allowed hosts must be defined at RUNTIME.
+; Refer to session.trans_sid_hosts for more details.
+; Default Value: ""
+; Development Value: ""
+; Production Value: ""
+;url_rewriter.hosts
+
+; Transparent output compression using the zlib library
+; Valid values for this option are 'off', 'on', or a specific buffer size
+; to be used for compression (default is 4KB)
+; Note: Resulting chunk size may vary due to nature of compression. PHP
+;   outputs chunks that are few hundreds bytes each as a result of
+;   compression. If you prefer a larger chunk size for better
+;   performance, enable output_buffering in addition.
+; Note: You need to use zlib.output_handler instead of the standard
+;   output_handler, or otherwise the output will be corrupted.
+; http://php.net/zlib.output-compression
+zlib.output_compression = Off
+
+; http://php.net/zlib.output-compression-level
+;zlib.output_compression_level = -1
+
+; You cannot specify additional output handlers if zlib.output_compression
+; is activated here. This setting does the same as output_handler but in
+; a different order.
+; http://php.net/zlib.output-handler
+;zlib.output_handler =
+
+; Implicit flush tells PHP to tell the output layer to flush itself
+; automatically after every output block.  This is equivalent to calling the
+; PHP function flush() after each and every call to print() or echo() and each
+; and every HTML block.  Turning this option on has serious performance
+; implications and is generally recommended for debugging purposes only.
+; http://php.net/implicit-flush
+; Note: This directive is hardcoded to On for the CLI SAPI
+implicit_flush = Off
+
+; The unserialize callback function will be called (with the undefined class'
+; name as parameter), if the unserializer finds an undefined class
+; which should be instantiated. A warning appears if the specified function is
+; not defined, or if the function doesn't include/implement the missing class.
+; So only set this entry, if you really want to implement such a
+; callback-function.
+unserialize_callback_func =
+
+; When floats & doubles are serialized, store serialize_precision significant
+; digits after the floating point. The default value ensures that when floats
+; are decoded with unserialize, the data will remain the same.
+; The value is also used for json_encode when encoding double values.
+; If -1 is used, then dtoa mode 0 is used which automatically select the best
+; precision.
+serialize_precision = -1
+
+; open_basedir, if set, limits all file operations to the defined directory
+; and below.  This directive makes most sense if used in a per-directory
+; or per-virtualhost web server configuration file.
+; Note: disables the realpath cache
+; http://php.net/open-basedir
+;open_basedir =
+
+; This directive allows you to disable certain functions for security reasons.
+; It receives a comma-delimited list of function names.
+; http://php.net/disable-functions
+disable_functions =
+
+; This directive allows you to disable certain classes for security reasons.
+; It receives a comma-delimited list of class names.
+; http://php.net/disable-classes
+disable_classes =
+
+; Colors for Syntax Highlighting mode.  Anything that's acceptable in
+; <span style="color: ???????"> would work.
+; http://php.net/syntax-highlighting
+;highlight.string  = #DD0000
+;highlight.comment = #FF9900
+;highlight.keyword = #007700
+;highlight.default = #0000BB
+;highlight.html    = #000000
+
+; If enabled, the request will be allowed to complete even if the user aborts
+; the request. Consider enabling it if executing long requests, which may end up
+; being interrupted by the user or a browser timing out. PHP's default behavior
+; is to disable this feature.
+; http://php.net/ignore-user-abort
+;ignore_user_abort = On
+
+; Determines the size of the realpath cache to be used by PHP. This value should
+; be increased on systems where PHP opens many files to reflect the quantity of
+; the file operations performed.
+; Note: if open_basedir is set, the cache is disabled
+; http://php.net/realpath-cache-size
+;realpath_cache_size = 4096k
+
+; Duration of time, in seconds for which to cache realpath information for a given
+; file or directory. For systems with rarely changing files, consider increasing this
+; value.
+; http://php.net/realpath-cache-ttl
+;realpath_cache_ttl = 120
+
+; Enables or disables the circular reference collector.
+; http://php.net/zend.enable-gc
+zend.enable_gc = On
+
+; If enabled, scripts may be written in encodings that are incompatible with
+; the scanner.  CP936, Big5, CP949 and Shift_JIS are the examples of such
+; encodings.  To use this feature, mbstring extension must be enabled.
+; Default: Off
+;zend.multibyte = Off
+
+; Allows to set the default encoding for the scripts.  This value will be used
+; unless "declare(encoding=...)" directive appears at the top of the script.
+; Only affects if zend.multibyte is set.
+; Default: ""
+;zend.script_encoding =
+
+;;;;;;;;;;;;;;;;;
+; Miscellaneous ;
+;;;;;;;;;;;;;;;;;
+
+; Decides whether PHP may expose the fact that it is installed on the server
+; (e.g. by adding its signature to the Web server header).  It is no security
+; threat in any way, but it makes it possible to determine whether you use PHP
+; on your server or not.
+; http://php.net/expose-php
+expose_php = On
+
+;;;;;;;;;;;;;;;;;;;
+; Resource Limits ;
+;;;;;;;;;;;;;;;;;;;
+
+; Maximum execution time of each script, in seconds
+; http://php.net/max-execution-time
+; Note: This directive is hardcoded to 0 for the CLI SAPI
+max_execution_time = 30
+
+; Maximum amount of time each script may spend parsing request data. It's a good
+; idea to limit this time on productions servers in order to eliminate unexpectedly
+; long running scripts.
+; Note: This directive is hardcoded to -1 for the CLI SAPI
+; Default Value: -1 (Unlimited)
+; Development Value: 60 (60 seconds)
+; Production Value: 60 (60 seconds)
+; http://php.net/max-input-time
+max_input_time = 60
+
+; Maximum input variable nesting level
+; http://php.net/max-input-nesting-level
+;max_input_nesting_level = 64
+
+; How many GET/POST/COOKIE input variables may be accepted
+;max_input_vars = 1000
+
+; Maximum amount of memory a script may consume (128MB)
+; http://php.net/memory-limit
+memory_limit = 128M
+
+;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
+; Error handling and logging ;
+;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
+
+; This directive informs PHP of which errors, warnings and notices you would like
+; it to take action for. The recommended way of setting values for this
+; directive is through the use of the error level constants and bitwise
+; operators. The error level constants are below here for convenience as well as
+; some common settings and their meanings.
+; By default, PHP is set to take action on all errors, notices and warnings EXCEPT
+; those related to E_NOTICE and E_STRICT, which together cover best practices and
+; recommended coding standards in PHP. For performance reasons, this is the
+; recommend error reporting setting. Your production server shouldn't be wasting
+; resources complaining about best practices and coding standards. That's what
+; development servers and development settings are for.
+; Note: The php.ini-development file has this setting as E_ALL. This
+; means it pretty much reports everything which is exactly what you want during
+; development and early testing.
+;
+; Error Level Constants:
+; E_ALL             - All errors and warnings (includes E_STRICT as of PHP 5.4.0)
+; E_ERROR           - fatal run-time errors
+; E_RECOVERABLE_ERROR  - almost fatal run-time errors
+; E_WARNING         - run-time warnings (non-fatal errors)
+; E_PARSE           - compile-time parse errors
+; E_NOTICE          - run-time notices (these are warnings which often result
+;                     from a bug in your code, but it's possible that it was
+;                     intentional (e.g., using an uninitialized variable and
+;                     relying on the fact it is automatically initialized to an
+;                     empty string)
+; E_STRICT          - run-time notices, enable to have PHP suggest changes
+;                     to your code which will ensure the best interoperability
+;                     and forward compatibility of your code
+; E_CORE_ERROR      - fatal errors that occur during PHP's initial startup
+; E_CORE_WARNING    - warnings (non-fatal errors) that occur during PHP's
+;                     initial startup
+; E_COMPILE_ERROR   - fatal compile-time errors
+; E_COMPILE_WARNING - compile-time warnings (non-fatal errors)
+; E_USER_ERROR      - user-generated error message
+; E_USER_WARNING    - user-generated warning message
+; E_USER_NOTICE     - user-generated notice message
+; E_DEPRECATED      - warn about code that will not work in future versions
+;                     of PHP
+; E_USER_DEPRECATED - user-generated deprecation warnings
+;
+; Common Values:
+;   E_ALL (Show all errors, warnings and notices including coding standards.)
+;   E_ALL & ~E_NOTICE  (Show all errors, except for notices)
+;   E_ALL & ~E_NOTICE & ~E_STRICT  (Show all errors, except for notices and coding standards warnings.)
+;   E_COMPILE_ERROR|E_RECOVERABLE_ERROR|E_ERROR|E_CORE_ERROR  (Show only errors)
+; Default Value: E_ALL & ~E_NOTICE & ~E_STRICT & ~E_DEPRECATED
+; Development Value: E_ALL
+; Production Value: E_ALL & ~E_DEPRECATED & ~E_STRICT
+; http://php.net/error-reporting
+error_reporting = E_ALL
+
+; This directive controls whether or not and where PHP will output errors,
+; notices and warnings too. Error output is very useful during development, but
+; it could be very dangerous in production environments. Depending on the code
+; which is triggering the error, sensitive information could potentially leak
+; out of your application such as database usernames and passwords or worse.
+; For production environments, we recommend logging errors rather than
+; sending them to STDOUT.
+; Possible Values:
+;   Off = Do not display any errors
+;   stderr = Display errors to STDERR (affects only CGI/CLI binaries!)
+;   On or stdout = Display errors to STDOUT
+; Default Value: On
+; Development Value: On
+; Production Value: Off
+; http://php.net/display-errors
+display_errors = On
+
+; The display of errors which occur during PHP's startup sequence are handled
+; separately from display_errors. PHP's default behavior is to suppress those
+; errors from clients. Turning the display of startup errors on can be useful in
+; debugging configuration problems. We strongly recommend you
+; set this to 'off' for production servers.
+; Default Value: Off
+; Development Value: On
+; Production Value: Off
+; http://php.net/display-startup-errors
+display_startup_errors = On
+
+; Besides displaying errors, PHP can also log errors to locations such as a
+; server-specific log, STDERR, or a location specified by the error_log
+; directive found below. While errors should not be displayed on productions
+; servers they should still be monitored and logging is a great way to do that.
+; Default Value: Off
+; Development Value: On
+; Production Value: On
+; http://php.net/log-errors
+log_errors = On
+
+; Set maximum length of log_errors. In error_log information about the source is
+; added. The default is 1024 and 0 allows to not apply any maximum length at all.
+; http://php.net/log-errors-max-len
+log_errors_max_len = 1024
+
+; Do not log repeated messages. Repeated errors must occur in same file on same
+; line unless ignore_repeated_source is set true.
+; http://php.net/ignore-repeated-errors
+ignore_repeated_errors = Off
+
+; Ignore source of message when ignoring repeated messages. When this setting
+; is On you will not log errors with repeated messages from different files or
+; source lines.
+; http://php.net/ignore-repeated-source
+ignore_repeated_source = Off
+
+; If this parameter is set to Off, then memory leaks will not be shown (on
+; stdout or in the log). This has only effect in a debug compile, and if
+; error reporting includes E_WARNING in the allowed list
+; http://php.net/report-memleaks
+report_memleaks = On
+
+; This setting is on by default.
+;report_zend_debug = 0
+
+; Store the last error/warning message in $php_errormsg (boolean).
+; This directive is DEPRECATED.
+; Default Value: Off
+; Development Value: Off
+; Production Value: Off
+; http://php.net/track-errors
+;track_errors = Off
+
+; Turn off normal error reporting and emit XML-RPC error XML
+; http://php.net/xmlrpc-errors
+;xmlrpc_errors = 0
+
+; An XML-RPC faultCode
+;xmlrpc_error_number = 0
+
+; When PHP displays or logs an error, it has the capability of formatting the
+; error message as HTML for easier reading. This directive controls whether
+; the error message is formatted as HTML or not.
+; Note: This directive is hardcoded to Off for the CLI SAPI
+; Default Value: On
+; Development Value: On
+; Production value: On
+; http://php.net/html-errors
+html_errors = On
+
+; If html_errors is set to On *and* docref_root is not empty, then PHP
+; produces clickable error messages that direct to a page describing the error
+; or function causing the error in detail.
+; You can download a copy of the PHP manual from http://php.net/docs
+; and change docref_root to the base URL of your local copy including the
+; leading '/'. You must also specify the file extension being used including
+; the dot. PHP's default behavior is to leave these settings empty, in which
+; case no links to documentation are generated.
+; Note: Never use this feature for production boxes.
+; http://php.net/docref-root
+; Examples
+;docref_root = "/phpmanual/"
+
+; http://php.net/docref-ext
+;docref_ext = .html
+
+; String to output before an error message. PHP's default behavior is to leave
+; this setting blank.
+; http://php.net/error-prepend-string
+; Example:
+;error_prepend_string = "<span style='color: #ff0000'>"
+
+; String to output after an error message. PHP's default behavior is to leave
+; this setting blank.
+; http://php.net/error-append-string
+; Example:
+;error_append_string = "</span>"
+
+; Log errors to specified file. PHP's default behavior is to leave this value
+; empty.
+; http://php.net/error-log
+; Example:
+;error_log = php_errors.log
+; Log errors to syslog (Event Log on Windows).
+;error_log = syslog
+
+; The syslog ident is a string which is prepended to every message logged
+; to syslog. Only used when error_log is set to syslog.
+;syslog.ident = php
+
+; The syslog facility is used to specify what type of program is logging
+; the message. Only used when error_log is set to syslog.
+;syslog.facility = user
+
+; Set this to disable filtering control characters (the default).
+; Some loggers only accept NVT-ASCII, others accept anything that's not
+; control characters. If your logger accepts everything, then no filtering
+; is needed at all.
+; Allowed values are:
+;   ascii (all printable ASCII characters and NL)
+;   no-ctrl (all characters except control characters)
+;   all (all characters)
+;   raw (like "all", but messages are not split at newlines)
+; http://php.net/syslog.filter
+;syslog.filter = ascii
+
+;windows.show_crt_warning
+; Default value: 0
+; Development value: 0
+; Production value: 0
+
+;;;;;;;;;;;;;;;;;
+; Data Handling ;
+;;;;;;;;;;;;;;;;;
+
+; The separator used in PHP generated URLs to separate arguments.
+; PHP's default setting is "&".
+; http://php.net/arg-separator.output
+; Example:
+;arg_separator.output = "&amp;"
+
+; List of separator(s) used by PHP to parse input URLs into variables.
+; PHP's default setting is "&".
+; NOTE: Every character in this directive is considered as separator!
+; http://php.net/arg-separator.input
+; Example:
+;arg_separator.input = ";&"
+
+; This directive determines which super global arrays are registered when PHP
+; starts up. G,P,C,E & S are abbreviations for the following respective super
+; globals: GET, POST, COOKIE, ENV and SERVER. There is a performance penalty
+; paid for the registration of these arrays and because ENV is not as commonly
+; used as the others, ENV is not recommended on productions servers. You
+; can still get access to the environment variables through getenv() should you
+; need to.
+; Default Value: "EGPCS"
+; Development Value: "GPCS"
+; Production Value: "GPCS";
+; http://php.net/variables-order
+variables_order = "GPCS"
+
+; This directive determines which super global data (G,P & C) should be
+; registered into the super global array REQUEST. If so, it also determines
+; the order in which that data is registered. The values for this directive
+; are specified in the same manner as the variables_order directive,
+; EXCEPT one. Leaving this value empty will cause PHP to use the value set
+; in the variables_order directive. It does not mean it will leave the super
+; globals array REQUEST empty.
+; Default Value: None
+; Development Value: "GP"
+; Production Value: "GP"
+; http://php.net/request-order
+request_order = "GP"
+
+; This directive determines whether PHP registers $argv & $argc each time it
+; runs. $argv contains an array of all the arguments passed to PHP when a script
+; is invoked. $argc contains an integer representing the number of arguments
+; that were passed when the script was invoked. These arrays are extremely
+; useful when running scripts from the command line. When this directive is
+; enabled, registering these variables consumes CPU cycles and memory each time
+; a script is executed. For performance reasons, this feature should be disabled
+; on production servers.
+; Note: This directive is hardcoded to On for the CLI SAPI
+; Default Value: On
+; Development Value: Off
+; Production Value: Off
+; http://php.net/register-argc-argv
+register_argc_argv = Off
+
+; When enabled, the ENV, REQUEST and SERVER variables are created when they're
+; first used (Just In Time) instead of when the script starts. If these
+; variables are not used within a script, having this directive on will result
+; in a performance gain. The PHP directive register_argc_argv must be disabled
+; for this directive to have any affect.
+; http://php.net/auto-globals-jit
+auto_globals_jit = On
+
+; Whether PHP will read the POST data.
+; This option is enabled by default.
+; Most likely, you won't want to disable this option globally. It causes $_POST
+; and $_FILES to always be empty; the only way you will be able to read the
+; POST data will be through the php://input stream wrapper. This can be useful
+; to proxy requests or to process the POST data in a memory efficient fashion.
+; http://php.net/enable-post-data-reading
+;enable_post_data_reading = Off
+
+; Maximum size of POST data that PHP will accept.
+; Its value may be 0 to disable the limit. It is ignored if POST data reading
+; is disabled through enable_post_data_reading.
+; http://php.net/post-max-size
+post_max_size = 8M
+
+; Automatically add files before PHP document.
+; http://php.net/auto-prepend-file
+auto_prepend_file =
+
+; Automatically add files after PHP document.
+; http://php.net/auto-append-file
+auto_append_file =
+
+; By default, PHP will output a media type using the Content-Type header. To
+; disable this, simply set it to be empty.
+;
+; PHP's built-in default media type is set to text/html.
+; http://php.net/default-mimetype
+default_mimetype = "text/html"
+
+; PHP's default character set is set to UTF-8.
+; http://php.net/default-charset
+default_charset = "UTF-8"
+
+; PHP internal character encoding is set to empty.
+; If empty, default_charset is used.
+; http://php.net/internal-encoding
+;internal_encoding =
+
+; PHP input character encoding is set to empty.
+; If empty, default_charset is used.
+; http://php.net/input-encoding
+;input_encoding =
+
+; PHP output character encoding is set to empty.
+; If empty, default_charset is used.
+; See also output_buffer.
+; http://php.net/output-encoding
+;output_encoding =
+
+;;;;;;;;;;;;;;;;;;;;;;;;;
+; Paths and Directories ;
+;;;;;;;;;;;;;;;;;;;;;;;;;
+
+; UNIX: "/path1:/path2"
+;include_path = ".:/php/includes"
+;
+; Windows: "\path1;\path2"
+;include_path = ".;c:\php\includes"
+;
+; PHP's default setting for include_path is ".;/path/to/php/pear"
+; http://php.net/include-path
+
+; The root of the PHP pages, used only if nonempty.
+; if PHP was not compiled with FORCE_REDIRECT, you SHOULD set doc_root
+; if you are running php as a CGI under any web server (other than IIS)
+; see documentation for security issues.  The alternate is to use the
+; cgi.force_redirect configuration below
+; http://php.net/doc-root
+doc_root =
+
+; The directory under which PHP opens the script using /~username used only
+; if nonempty.
+; http://php.net/user-dir
+user_dir =
+
+; Directory in which the loadable extensions (modules) reside.
+; http://php.net/extension-dir
+;extension_dir = "./"
+; On windows:
+;extension_dir = "ext"
+
+; Directory where the temporary files should be placed.
+; Defaults to the system default (see sys_get_temp_dir)
+;sys_temp_dir = "/tmp"
+
+; Whether or not to enable the dl() function.  The dl() function does NOT work
+; properly in multithreaded servers, such as IIS or Zeus, and is automatically
+; disabled on them.
+; http://php.net/enable-dl
+enable_dl = Off
+
+; cgi.force_redirect is necessary to provide security running PHP as a CGI under
+; most web servers.  Left undefined, PHP turns this on by default.  You can
+; turn it off here AT YOUR OWN RISK
+; **You CAN safely turn this off for IIS, in fact, you MUST.**
+; http://php.net/cgi.force-redirect
+;cgi.force_redirect = 1
+
+; if cgi.nph is enabled it will force cgi to always sent Status: 200 with
+; every request. PHP's default behavior is to disable this feature.
+;cgi.nph = 1
+
+; if cgi.force_redirect is turned on, and you are not running under Apache or Netscape
+; (iPlanet) web servers, you MAY need to set an environment variable name that PHP
+; will look for to know it is OK to continue execution.  Setting this variable MAY
+; cause security issues, KNOW WHAT YOU ARE DOING FIRST.
+; http://php.net/cgi.redirect-status-env
+;cgi.redirect_status_env =
+
+; cgi.fix_pathinfo provides *real* PATH_INFO/PATH_TRANSLATED support for CGI.  PHP's
+; previous behaviour was to set PATH_TRANSLATED to SCRIPT_FILENAME, and to not grok
+; what PATH_INFO is.  For more information on PATH_INFO, see the cgi specs.  Setting
+; this to 1 will cause PHP CGI to fix its paths to conform to the spec.  A setting
+; of zero causes PHP to behave as before.  Default is 1.  You should fix your scripts
+; to use SCRIPT_FILENAME rather than PATH_TRANSLATED.
+; http://php.net/cgi.fix-pathinfo
+;cgi.fix_pathinfo=1
+
+; if cgi.discard_path is enabled, the PHP CGI binary can safely be placed outside
+; of the web tree and people will not be able to circumvent .htaccess security.
+;cgi.discard_path=1
+
+; FastCGI under IIS supports the ability to impersonate
+; security tokens of the calling client.  This allows IIS to define the
+; security context that the request runs under.  mod_fastcgi under Apache
+; does not currently support this feature (03/17/2002)
+; Set to 1 if running under IIS.  Default is zero.
+; http://php.net/fastcgi.impersonate
+;fastcgi.impersonate = 1
+
+; Disable logging through FastCGI connection. PHP's default behavior is to enable
+; this feature.
+;fastcgi.logging = 0
+
+; cgi.rfc2616_headers configuration option tells PHP what type of headers to
+; use when sending HTTP response code. If set to 0, PHP sends Status: header that
+; is supported by Apache. When this option is set to 1, PHP will send
+; RFC2616 compliant header.
+; Default is zero.
+; http://php.net/cgi.rfc2616-headers
+;cgi.rfc2616_headers = 0
+
+; cgi.check_shebang_line controls whether CGI PHP checks for line starting with #!
+; (shebang) at the top of the running script. This line might be needed if the
+; script support running both as stand-alone script and via PHP CGI<. PHP in CGI
+; mode skips this line and ignores its content if this directive is turned on.
+; http://php.net/cgi.check-shebang-line
+;cgi.check_shebang_line=1
+
+;;;;;;;;;;;;;;;;
+; File Uploads ;
+;;;;;;;;;;;;;;;;
+
+; Whether to allow HTTP file uploads.
+; http://php.net/file-uploads
+file_uploads = On
+
+; Temporary directory for HTTP uploaded files (will use system default if not
+; specified).
+; http://php.net/upload-tmp-dir
+;upload_tmp_dir =
+
+; Maximum allowed size for uploaded files.
+; http://php.net/upload-max-filesize
+upload_max_filesize = 2M
+
+; Maximum number of files that can be uploaded via a single request
+max_file_uploads = 20
+
+;;;;;;;;;;;;;;;;;;
+; Fopen wrappers ;
+;;;;;;;;;;;;;;;;;;
+
+; Whether to allow the treatment of URLs (like http:// or ftp://) as files.
+; http://php.net/allow-url-fopen
+allow_url_fopen = On
+
+; Whether to allow include/require to open URLs (like http:// or ftp://) as files.
+; http://php.net/allow-url-include
+allow_url_include = Off
+
+; Define the anonymous ftp password (your email address). PHP's default setting
+; for this is empty.
+; http://php.net/from
+;from="john@doe.com"
+
+; Define the User-Agent string. PHP's default setting for this is empty.
+; http://php.net/user-agent
+;user_agent="PHP"
+
+; Default timeout for socket based streams (seconds)
+; http://php.net/default-socket-timeout
+default_socket_timeout = 60
+
+; If your scripts have to deal with files from Macintosh systems,
+; or you are running on a Mac and need to deal with files from
+; unix or win32 systems, setting this flag will cause PHP to
+; automatically detect the EOL character in those files so that
+; fgets() and file() will work regardless of the source of the file.
+; http://php.net/auto-detect-line-endings
+;auto_detect_line_endings = Off
+
+;;;;;;;;;;;;;;;;;;;;;;
+; Dynamic Extensions ;
+;;;;;;;;;;;;;;;;;;;;;;
+
+; If you wish to have an extension loaded automatically, use the following
+; syntax:
+;
+;   extension=modulename
+;
+; For example:
+;
+;   extension=mysqli
+;
+; When the extension library to load is not located in the default extension
+; directory, You may specify an absolute path to the library file:
+;
+;   extension=/path/to/extension/mysqli.so
+;
+; Note : The syntax used in previous PHP versions ('extension=<ext>.so' and
+; 'extension='php_<ext>.dll') is supported for legacy reasons and may be
+; deprecated in a future PHP major version. So, when it is possible, please
+; move to the new ('extension=<ext>) syntax.
+;
+; Notes for Windows environments :
+;
+; - Many DLL files are located in the extensions/ (PHP 4) or ext/ (PHP 5+)
+;   extension folders as well as the separate PECL DLL download (PHP 5+).
+;   Be sure to appropriately set the extension_dir directive.
+;
+;extension=bz2
+;extension=curl
+;extension=fileinfo
+;extension=gd2
+;extension=gettext
+;extension=gmp
+;extension=intl
+;extension=imap
+;extension=interbase
+;extension=ldap
+;extension=mbstring
+;extension=exif      ; Must be after mbstring as it depends on it
+;extension=mysqli
+;extension=oci8_12c  ; Use with Oracle Database 12c Instant Client
+;extension=odbc
+;extension=openssl
+;extension=pdo_firebird
+;extension=pdo_mysql
+;extension=pdo_oci
+;extension=pdo_odbc
+;extension=pdo_pgsql
+;extension=pdo_sqlite
+;extension=pgsql
+;extension=shmop
+
+; The MIBS data available in the PHP distribution must be installed.
+; See http://www.php.net/manual/en/snmp.installation.php
+;extension=snmp
+
+;extension=soap
+;extension=sockets
+;extension=sodium
+;extension=sqlite3
+;extension=tidy
+;extension=xmlrpc
+;extension=xsl
+
+;;;;;;;;;;;;;;;;;;;
+; Module Settings ;
+;;;;;;;;;;;;;;;;;;;
+
+[CLI Server]
+; Whether the CLI web server uses ANSI color coding in its terminal output.
+cli_server.color = On
+
+[Date]
+; Defines the default timezone used by the date functions
+; http://php.net/date.timezone
+;date.timezone =
+
+; http://php.net/date.default-latitude
+;date.default_latitude = 31.7667
+
+; http://php.net/date.default-longitude
+;date.default_longitude = 35.2333
+
+; http://php.net/date.sunrise-zenith
+;date.sunrise_zenith = 90.583333
+
+; http://php.net/date.sunset-zenith
+;date.sunset_zenith = 90.583333
+
+[filter]
+; http://php.net/filter.default
+;filter.default = unsafe_raw
+
+; http://php.net/filter.default-flags
+;filter.default_flags =
+
+[iconv]
+; Use of this INI entry is deprecated, use global input_encoding instead.
+; If empty, default_charset or input_encoding or iconv.input_encoding is used.
+; The precedence is: default_charset < input_encoding < iconv.input_encoding
+;iconv.input_encoding =
+
+; Use of this INI entry is deprecated, use global internal_encoding instead.
+; If empty, default_charset or internal_encoding or iconv.internal_encoding is used.
+; The precedence is: default_charset < internal_encoding < iconv.internal_encoding
+;iconv.internal_encoding =
+
+; Use of this INI entry is deprecated, use global output_encoding instead.
+; If empty, default_charset or output_encoding or iconv.output_encoding is used.
+; The precedence is: default_charset < output_encoding < iconv.output_encoding
+; To use an output encoding conversion, iconv's output handler must be set
+; otherwise output encoding conversion cannot be performed.
+;iconv.output_encoding =
+
+[imap]
+; rsh/ssh logins are disabled by default. Use this INI entry if you want to
+; enable them. Note that the IMAP library does not filter mailbox names before
+; passing them to rsh/ssh command, thus passing untrusted data to this function
+; with rsh/ssh enabled is insecure.
+;imap.enable_insecure_rsh=0
+
+[intl]
+;intl.default_locale =
+; This directive allows you to produce PHP errors when some error
+; happens within intl functions. The value is the level of the error produced.
+; Default is 0, which does not produce any errors.
+;intl.error_level = E_WARNING
+;intl.use_exceptions = 0
+
+[sqlite3]
+; Directory pointing to SQLite3 extensions
+; http://php.net/sqlite3.extension-dir
+;sqlite3.extension_dir =
+
+; SQLite defensive mode flag (only available from SQLite 3.26+)
+; When the defensive flag is enabled, language features that allow ordinary
+; SQL to deliberately corrupt the database file are disabled. This forbids
+; writing directly to the schema, shadow tables (eg. FTS data tables), or
+; the sqlite_dbpage virtual table.
+; https://www.sqlite.org/c3ref/c_dbconfig_defensive.html
+; (for older SQLite versions, this flag has no use)
+;sqlite3.defensive = 1
+
+[Pcre]
+; PCRE library backtracking limit.
+; http://php.net/pcre.backtrack-limit
+;pcre.backtrack_limit=100000
+
+; PCRE library recursion limit.
+; Please note that if you set this value to a high number you may consume all
+; the available process stack and eventually crash PHP (due to reaching the
+; stack size limit imposed by the Operating System).
+; http://php.net/pcre.recursion-limit
+;pcre.recursion_limit=100000
+
+; Enables or disables JIT compilation of patterns. This requires the PCRE
+; library to be compiled with JIT support.
+;pcre.jit=1
+
+[Pdo]
+; Whether to pool ODBC connections. Can be one of "strict", "relaxed" or "off"
+; http://php.net/pdo-odbc.connection-pooling
+;pdo_odbc.connection_pooling=strict
+
+;pdo_odbc.db2_instance_name
+
+[Pdo_mysql]
+; Default socket name for local MySQL connects.  If empty, uses the built-in
+; MySQL defaults.
+pdo_mysql.default_socket=
+
+[Phar]
+; http://php.net/phar.readonly
+;phar.readonly = On
+
+; http://php.net/phar.require-hash
+;phar.require_hash = On
+
+;phar.cache_list =
+
+[mail function]
+; For Win32 only.
+; http://php.net/smtp
+SMTP = localhost
+; http://php.net/smtp-port
+smtp_port = 25
+
+; For Win32 only.
+; http://php.net/sendmail-from
+;sendmail_from = me@example.com
+
+; For Unix only.  You may supply arguments as well (default: "sendmail -t -i").
+; http://php.net/sendmail-path
+;sendmail_path =
+
+; Force the addition of the specified parameters to be passed as extra parameters
+; to the sendmail binary. These parameters will always replace the value of
+; the 5th parameter to mail().
+;mail.force_extra_parameters =
+
+; Add X-PHP-Originating-Script: that will include uid of the script followed by the filename
+mail.add_x_header = Off
+
+; The path to a log file that will log all mail() calls. Log entries include
+; the full path of the script, line number, To address and headers.
+;mail.log =
+; Log mail to syslog (Event Log on Windows).
+;mail.log = syslog
+
+[ODBC]
+; http://php.net/odbc.default-db
+;odbc.default_db    =  Not yet implemented
+
+; http://php.net/odbc.default-user
+;odbc.default_user  =  Not yet implemented
+
+; http://php.net/odbc.default-pw
+;odbc.default_pw    =  Not yet implemented
+
+; Controls the ODBC cursor model.
+; Default: SQL_CURSOR_STATIC (default).
+;odbc.default_cursortype
+
+; Allow or prevent persistent links.
+; http://php.net/odbc.allow-persistent
+odbc.allow_persistent = On
+
+; Check that a connection is still valid before reuse.
+; http://php.net/odbc.check-persistent
+odbc.check_persistent = On
+
+; Maximum number of persistent links.  -1 means no limit.
+; http://php.net/odbc.max-persistent
+odbc.max_persistent = -1
+
+; Maximum number of links (persistent + non-persistent).  -1 means no limit.
+; http://php.net/odbc.max-links
+odbc.max_links = -1
+
+; Handling of LONG fields.  Returns number of bytes to variables.  0 means
+; passthru.
+; http://php.net/odbc.defaultlrl
+odbc.defaultlrl = 4096
+
+; Handling of binary data.  0 means passthru, 1 return as is, 2 convert to char.
+; See the documentation on odbc_binmode and odbc_longreadlen for an explanation
+; of odbc.defaultlrl and odbc.defaultbinmode
+; http://php.net/odbc.defaultbinmode
+odbc.defaultbinmode = 1
+
+[Interbase]
+; Allow or prevent persistent links.
+ibase.allow_persistent = 1
+
+; Maximum number of persistent links.  -1 means no limit.
+ibase.max_persistent = -1
+
+; Maximum number of links (persistent + non-persistent).  -1 means no limit.
+ibase.max_links = -1
+
+; Default database name for ibase_connect().
+;ibase.default_db =
+
+; Default username for ibase_connect().
+;ibase.default_user =
+
+; Default password for ibase_connect().
+;ibase.default_password =
+
+; Default charset for ibase_connect().
+;ibase.default_charset =
+
+; Default timestamp format.
+ibase.timestampformat = "%Y-%m-%d %H:%M:%S"
+
+; Default date format.
+ibase.dateformat = "%Y-%m-%d"
+
+; Default time format.
+ibase.timeformat = "%H:%M:%S"
+
+[MySQLi]
+
+; Maximum number of persistent links.  -1 means no limit.
+; http://php.net/mysqli.max-persistent
+mysqli.max_persistent = -1
+
+; Allow accessing, from PHP's perspective, local files with LOAD DATA statements
+; http://php.net/mysqli.allow_local_infile
+;mysqli.allow_local_infile = On
+
+; Allow or prevent persistent links.
+; http://php.net/mysqli.allow-persistent
+mysqli.allow_persistent = On
+
+; Maximum number of links.  -1 means no limit.
+; http://php.net/mysqli.max-links
+mysqli.max_links = -1
+
+; Default port number for mysqli_connect().  If unset, mysqli_connect() will use
+; the $MYSQL_TCP_PORT or the mysql-tcp entry in /etc/services or the
+; compile-time value defined MYSQL_PORT (in that order).  Win32 will only look
+; at MYSQL_PORT.
+; http://php.net/mysqli.default-port
+mysqli.default_port = 3306
+
+; Default socket name for local MySQL connects.  If empty, uses the built-in
+; MySQL defaults.
+; http://php.net/mysqli.default-socket
+mysqli.default_socket =
+
+; Default host for mysql_connect() (doesn't apply in safe mode).
+; http://php.net/mysqli.default-host
+mysqli.default_host =
+
+; Default user for mysql_connect() (doesn't apply in safe mode).
+; http://php.net/mysqli.default-user
+mysqli.default_user =
+
+; Default password for mysqli_connect() (doesn't apply in safe mode).
+; Note that this is generally a *bad* idea to store passwords in this file.
+; *Any* user with PHP access can run 'echo get_cfg_var("mysqli.default_pw")
+; and reveal this password!  And of course, any users with read access to this
+; file will be able to reveal the password as well.
+; http://php.net/mysqli.default-pw
+mysqli.default_pw =
+
+; Allow or prevent reconnect
+mysqli.reconnect = Off
+
+[mysqlnd]
+; Enable / Disable collection of general statistics by mysqlnd which can be
+; used to tune and monitor MySQL operations.
+mysqlnd.collect_statistics = On
+
+; Enable / Disable collection of memory usage statistics by mysqlnd which can be
+; used to tune and monitor MySQL operations.
+mysqlnd.collect_memory_statistics = On
+
+; Records communication from all extensions using mysqlnd to the specified log
+; file.
+; http://php.net/mysqlnd.debug
+;mysqlnd.debug =
+
+; Defines which queries will be logged.
+;mysqlnd.log_mask = 0
+
+; Default size of the mysqlnd memory pool, which is used by result sets.
+;mysqlnd.mempool_default_size = 16000
+
+; Size of a pre-allocated buffer used when sending commands to MySQL in bytes.
+;mysqlnd.net_cmd_buffer_size = 2048
+
+; Size of a pre-allocated buffer used for reading data sent by the server in
+; bytes.
+;mysqlnd.net_read_buffer_size = 32768
+
+; Timeout for network requests in seconds.
+;mysqlnd.net_read_timeout = 31536000
+
+; SHA-256 Authentication Plugin related. File with the MySQL server public RSA
+; key.
+;mysqlnd.sha256_server_public_key =
+
+[OCI8]
+
+; Connection: Enables privileged connections using external
+; credentials (OCI_SYSOPER, OCI_SYSDBA)
+; http://php.net/oci8.privileged-connect
+;oci8.privileged_connect = Off
+
+; Connection: The maximum number of persistent OCI8 connections per
+; process. Using -1 means no limit.
+; http://php.net/oci8.max-persistent
+;oci8.max_persistent = -1
+
+; Connection: The maximum number of seconds a process is allowed to
+; maintain an idle persistent connection. Using -1 means idle
+; persistent connections will be maintained forever.
+; http://php.net/oci8.persistent-timeout
+;oci8.persistent_timeout = -1
+
+; Connection: The number of seconds that must pass before issuing a
+; ping during oci_pconnect() to check the connection validity. When
+; set to 0, each oci_pconnect() will cause a ping. Using -1 disables
+; pings completely.
+; http://php.net/oci8.ping-interval
+;oci8.ping_interval = 60
+
+; Connection: Set this to a user chosen connection class to be used
+; for all pooled server requests with Oracle 11g Database Resident
+; Connection Pooling (DRCP).  To use DRCP, this value should be set to
+; the same string for all web servers running the same application,
+; the database pool must be configured, and the connection string must
+; specify to use a pooled server.
+;oci8.connection_class =
+
+; High Availability: Using On lets PHP receive Fast Application
+; Notification (FAN) events generated when a database node fails. The
+; database must also be configured to post FAN events.
+;oci8.events = Off
+
+; Tuning: This option enables statement caching, and specifies how
+; many statements to cache. Using 0 disables statement caching.
+; http://php.net/oci8.statement-cache-size
+;oci8.statement_cache_size = 20
+
+; Tuning: Enables statement prefetching and sets the default number of
+; rows that will be fetched automatically after statement execution.
+; http://php.net/oci8.default-prefetch
+;oci8.default_prefetch = 100
+
+; Compatibility. Using On means oci_close() will not close
+; oci_connect() and oci_new_connect() connections.
+; http://php.net/oci8.old-oci-close-semantics
+;oci8.old_oci_close_semantics = Off
+
+[PostgreSQL]
+; Allow or prevent persistent links.
+; http://php.net/pgsql.allow-persistent
+pgsql.allow_persistent = On
+
+; Detect broken persistent links always with pg_pconnect().
+; Auto reset feature requires a little overheads.
+; http://php.net/pgsql.auto-reset-persistent
+pgsql.auto_reset_persistent = Off
+
+; Maximum number of persistent links.  -1 means no limit.
+; http://php.net/pgsql.max-persistent
+pgsql.max_persistent = -1
+
+; Maximum number of links (persistent+non persistent).  -1 means no limit.
+; http://php.net/pgsql.max-links
+pgsql.max_links = -1
+
+; Ignore PostgreSQL backends Notice message or not.
+; Notice message logging require a little overheads.
+; http://php.net/pgsql.ignore-notice
+pgsql.ignore_notice = 0
+
+; Log PostgreSQL backends Notice message or not.
+; Unless pgsql.ignore_notice=0, module cannot log notice message.
+; http://php.net/pgsql.log-notice
+pgsql.log_notice = 0
+
+[bcmath]
+; Number of decimal digits for all bcmath functions.
+; http://php.net/bcmath.scale
+bcmath.scale = 0
+
+[browscap]
+; http://php.net/browscap
+;browscap = extra/browscap.ini
+
+[Session]
+; Handler used to store/retrieve data.
+; http://php.net/session.save-handler
+session.save_handler = files
+
+; Argument passed to save_handler.  In the case of files, this is the path
+; where data files are stored. Note: Windows users have to change this
+; variable in order to use PHP's session functions.
+;
+; The path can be defined as:
+;
+;     session.save_path = "N;/path"
+;
+; where N is an integer.  Instead of storing all the session files in
+; /path, what this will do is use subdirectories N-levels deep, and
+; store the session data in those directories.  This is useful if
+; your OS has problems with many files in one directory, and is
+; a more efficient layout for servers that handle many sessions.
+;
+; NOTE 1: PHP will not create this directory structure automatically.
+;         You can use the script in the ext/session dir for that purpose.
+; NOTE 2: See the section on garbage collection below if you choose to
+;         use subdirectories for session storage
+;
+; The file storage module creates files using mode 600 by default.
+; You can change that by using
+;
+;     session.save_path = "N;MODE;/path"
+;
+; where MODE is the octal representation of the mode. Note that this
+; does not overwrite the process's umask.
+; http://php.net/session.save-path
+;session.save_path = "/tmp"
+
+; Whether to use strict session mode.
+; Strict session mode does not accept an uninitialized session ID, and
+; regenerates the session ID if the browser sends an uninitialized session ID.
+; Strict mode protects applications from session fixation via a session adoption
+; vulnerability. It is disabled by default for maximum compatibility, but
+; enabling it is encouraged.
+; https://wiki.php.net/rfc/strict_sessions
+session.use_strict_mode = 0
+
+; Whether to use cookies.
+; http://php.net/session.use-cookies
+session.use_cookies = 1
+
+; http://php.net/session.cookie-secure
+;session.cookie_secure =
+
+; This option forces PHP to fetch and use a cookie for storing and maintaining
+; the session id. We encourage this operation as it's very helpful in combating
+; session hijacking when not specifying and managing your own session id. It is
+; not the be-all and end-all of session hijacking defense, but it's a good start.
+; http://php.net/session.use-only-cookies
+session.use_only_cookies = 1
+
+; Name of the session (used as cookie name).
+; http://php.net/session.name
+session.name = PHPSESSID
+
+; Initialize session on request startup.
+; http://php.net/session.auto-start
+session.auto_start = 0
+
+; Lifetime in seconds of cookie or, if 0, until browser is restarted.
+; http://php.net/session.cookie-lifetime
+session.cookie_lifetime = 0
+
+; The path for which the cookie is valid.
+; http://php.net/session.cookie-path
+session.cookie_path = /
+
+; The domain for which the cookie is valid.
+; http://php.net/session.cookie-domain
+session.cookie_domain =
+
+; Whether or not to add the httpOnly flag to the cookie, which makes it
+; inaccessible to browser scripting languages such as JavaScript.
+; http://php.net/session.cookie-httponly
+session.cookie_httponly =
+
+; Add SameSite attribute to cookie to help mitigate Cross-Site Request Forgery (CSRF/XSRF)
+; Current valid values are "Strict", "Lax" or "None". When using "None",
+; make sure to include the quotes, as `none` is interpreted like `false` in ini files.
+; https://tools.ietf.org/html/draft-west-first-party-cookies-07
+session.cookie_samesite =
+
+; Handler used to serialize data. php is the standard serializer of PHP.
+; http://php.net/session.serialize-handler
+session.serialize_handler = php
+
+; Defines the probability that the 'garbage collection' process is started on every
+; session initialization. The probability is calculated by using gc_probability/gc_divisor,
+; e.g. 1/100 means there is a 1% chance that the GC process starts on each request.
+; Default Value: 1
+; Development Value: 1
+; Production Value: 1
+; http://php.net/session.gc-probability
+session.gc_probability = 1
+
+; Defines the probability that the 'garbage collection' process is started on every
+; session initialization. The probability is calculated by using gc_probability/gc_divisor,
+; e.g. 1/100 means there is a 1% chance that the GC process starts on each request.
+; For high volume production servers, using a value of 1000 is a more efficient approach.
+; Default Value: 100
+; Development Value: 1000
+; Production Value: 1000
+; http://php.net/session.gc-divisor
+session.gc_divisor = 1000
+
+; After this number of seconds, stored data will be seen as 'garbage' and
+; cleaned up by the garbage collection process.
+; http://php.net/session.gc-maxlifetime
+session.gc_maxlifetime = 1440
+
+; NOTE: If you are using the subdirectory option for storing session files
+;       (see session.save_path above), then garbage collection does *not*
+;       happen automatically.  You will need to do your own garbage
+;       collection through a shell script, cron entry, or some other method.
+;       For example, the following script is the equivalent of setting
+;       session.gc_maxlifetime to 1440 (1440 seconds = 24 minutes):
+;          find /path/to/sessions -cmin +24 -type f | xargs rm
+
+; Check HTTP Referer to invalidate externally stored URLs containing ids.
+; HTTP_REFERER has to contain this substring for the session to be
+; considered as valid.
+; http://php.net/session.referer-check
+session.referer_check =
+
+; Set to {nocache,private,public,} to determine HTTP caching aspects
+; or leave this empty to avoid sending anti-caching headers.
+; http://php.net/session.cache-limiter
+session.cache_limiter = nocache
+
+; Document expires after n minutes.
+; http://php.net/session.cache-expire
+session.cache_expire = 180
+
+; trans sid support is disabled by default.
+; Use of trans sid may risk your users' security.
+; Use this option with caution.
+; - User may send URL contains active session ID
+;   to other person via. email/irc/etc.
+; - URL that contains active session ID may be stored
+;   in publicly accessible computer.
+; - User may access your site with the same session ID
+;   always using URL stored in browser's history or bookmarks.
+; http://php.net/session.use-trans-sid
+session.use_trans_sid = 0
+
+; Set session ID character length. This value could be between 22 to 256.
+; Shorter length than default is supported only for compatibility reason.
+; Users should use 32 or more chars.
+; http://php.net/session.sid-length
+; Default Value: 32
+; Development Value: 26
+; Production Value: 26
+session.sid_length = 26
+
+; The URL rewriter will look for URLs in a defined set of HTML tags.
+; <form> is special; if you include them here, the rewriter will
+; add a hidden <input> field with the info which is otherwise appended
+; to URLs. <form> tag's action attribute URL will not be modified
+; unless it is specified.
+; Note that all valid entries require a "=", even if no value follows.
+; Default Value: "a=href,area=href,frame=src,form="
+; Development Value: "a=href,area=href,frame=src,form="
+; Production Value: "a=href,area=href,frame=src,form="
+; http://php.net/url-rewriter.tags
+session.trans_sid_tags = "a=href,area=href,frame=src,form="
+
+; URL rewriter does not rewrite absolute URLs by default.
+; To enable rewrites for absolute paths, target hosts must be specified
+; at RUNTIME. i.e. use ini_set()
+; <form> tags is special. PHP will check action attribute's URL regardless
+; of session.trans_sid_tags setting.
+; If no host is defined, HTTP_HOST will be used for allowed host.
+; Example value: php.net,www.php.net,wiki.php.net
+; Use "," for multiple hosts. No spaces are allowed.
+; Default Value: ""
+; Development Value: ""
+; Production Value: ""
+;session.trans_sid_hosts=""
+
+; Define how many bits are stored in each character when converting
+; the binary hash data to something readable.
+; Possible values:
+;   4  (4 bits: 0-9, a-f)
+;   5  (5 bits: 0-9, a-v)
+;   6  (6 bits: 0-9, a-z, A-Z, "-", ",")
+; Default Value: 4
+; Development Value: 5
+; Production Value: 5
+; http://php.net/session.hash-bits-per-character
+session.sid_bits_per_character = 5
+
+; Enable upload progress tracking in $_SESSION
+; Default Value: On
+; Development Value: On
+; Production Value: On
+; http://php.net/session.upload-progress.enabled
+;session.upload_progress.enabled = On
+
+; Cleanup the progress information as soon as all POST data has been read
+; (i.e. upload completed).
+; Default Value: On
+; Development Value: On
+; Production Value: On
+; http://php.net/session.upload-progress.cleanup
+;session.upload_progress.cleanup = On
+
+; A prefix used for the upload progress key in $_SESSION
+; Default Value: "upload_progress_"
+; Development Value: "upload_progress_"
+; Production Value: "upload_progress_"
+; http://php.net/session.upload-progress.prefix
+;session.upload_progress.prefix = "upload_progress_"
+
+; The index name (concatenated with the prefix) in $_SESSION
+; containing the upload progress information
+; Default Value: "PHP_SESSION_UPLOAD_PROGRESS"
+; Development Value: "PHP_SESSION_UPLOAD_PROGRESS"
+; Production Value: "PHP_SESSION_UPLOAD_PROGRESS"
+; http://php.net/session.upload-progress.name
+;session.upload_progress.name = "PHP_SESSION_UPLOAD_PROGRESS"
+
+; How frequently the upload progress should be updated.
+; Given either in percentages (per-file), or in bytes
+; Default Value: "1%"
+; Development Value: "1%"
+; Production Value: "1%"
+; http://php.net/session.upload-progress.freq
+;session.upload_progress.freq =  "1%"
+
+; The minimum delay between updates, in seconds
+; Default Value: 1
+; Development Value: 1
+; Production Value: 1
+; http://php.net/session.upload-progress.min-freq
+;session.upload_progress.min_freq = "1"
+
+; Only write session data when session data is changed. Enabled by default.
+; http://php.net/session.lazy-write
+;session.lazy_write = On
+
+[Assertion]
+; Switch whether to compile assertions at all (to have no overhead at run-time)
+; -1: Do not compile at all
+;  0: Jump over assertion at run-time
+;  1: Execute assertions
+; Changing from or to a negative value is only possible in php.ini! (For turning assertions on and off at run-time, see assert.active, when zend.assertions = 1)
+; Default Value: 1
+; Development Value: 1
+; Production Value: -1
+; http://php.net/zend.assertions
+zend.assertions = 1
+
+; Assert(expr); active by default.
+; http://php.net/assert.active
+;assert.active = On
+
+; Throw an AssertionError on failed assertions
+; http://php.net/assert.exception
+;assert.exception = On
+
+; Issue a PHP warning for each failed assertion. (Overridden by assert.exception if active)
+; http://php.net/assert.warning
+;assert.warning = On
+
+; Don't bail out by default.
+; http://php.net/assert.bail
+;assert.bail = Off
+
+; User-function to be called if an assertion fails.
+; http://php.net/assert.callback
+;assert.callback = 0
+
+; Eval the expression with current error_reporting().  Set to true if you want
+; error_reporting(0) around the eval().
+; http://php.net/assert.quiet-eval
+;assert.quiet_eval = 0
+
+[COM]
+; path to a file containing GUIDs, IIDs or filenames of files with TypeLibs
+; http://php.net/com.typelib-file
+;com.typelib_file =
+
+; allow Distributed-COM calls
+; http://php.net/com.allow-dcom
+;com.allow_dcom = true
+
+; autoregister constants of a component's typlib on com_load()
+; http://php.net/com.autoregister-typelib
+;com.autoregister_typelib = true
+
+; register constants casesensitive
+; http://php.net/com.autoregister-casesensitive
+;com.autoregister_casesensitive = false
+
+; show warnings on duplicate constant registrations
+; http://php.net/com.autoregister-verbose
+;com.autoregister_verbose = true
+
+; The default character set code-page to use when passing strings to and from COM objects.
+; Default: system ANSI code page
+;com.code_page=
+
+[mbstring]
+; language for internal character representation.
+; This affects mb_send_mail() and mbstring.detect_order.
+; http://php.net/mbstring.language
+;mbstring.language = Japanese
+
+; Use of this INI entry is deprecated, use global internal_encoding instead.
+; internal/script encoding.
+; Some encoding cannot work as internal encoding. (e.g. SJIS, BIG5, ISO-2022-*)
+; If empty, default_charset or internal_encoding or iconv.internal_encoding is used.
+; The precedence is: default_charset < internal_encoding < iconv.internal_encoding
+;mbstring.internal_encoding =
+
+; Use of this INI entry is deprecated, use global input_encoding instead.
+; http input encoding.
+; mbstring.encoding_translation = On is needed to use this setting.
+; If empty, default_charset or input_encoding or mbstring.input is used.
+; The precedence is: default_charset < input_encoding < mbsting.http_input
+; http://php.net/mbstring.http-input
+;mbstring.http_input =
+
+; Use of this INI entry is deprecated, use global output_encoding instead.
+; http output encoding.
+; mb_output_handler must be registered as output buffer to function.
+; If empty, default_charset or output_encoding or mbstring.http_output is used.
+; The precedence is: default_charset < output_encoding < mbstring.http_output
+; To use an output encoding conversion, mbstring's output handler must be set
+; otherwise output encoding conversion cannot be performed.
+; http://php.net/mbstring.http-output
+;mbstring.http_output =
+
+; enable automatic encoding translation according to
+; mbstring.internal_encoding setting. Input chars are
+; converted to internal encoding by setting this to On.
+; Note: Do _not_ use automatic encoding translation for
+;       portable libs/applications.
+; http://php.net/mbstring.encoding-translation
+;mbstring.encoding_translation = Off
+
+; automatic encoding detection order.
+; "auto" detect order is changed according to mbstring.language
+; http://php.net/mbstring.detect-order
+;mbstring.detect_order = auto
+
+; substitute_character used when character cannot be converted
+; one from another
+; http://php.net/mbstring.substitute-character
+;mbstring.substitute_character = none
+
+; overload(replace) single byte functions by mbstring functions.
+; mail(), ereg(), etc are overloaded by mb_send_mail(), mb_ereg(),
+; etc. Possible values are 0,1,2,4 or combination of them.
+; For example, 7 for overload everything.
+; 0: No overload
+; 1: Overload mail() function
+; 2: Overload str*() functions
+; 4: Overload ereg*() functions
+; http://php.net/mbstring.func-overload
+;mbstring.func_overload = 0
+
+; enable strict encoding detection.
+; Default: Off
+;mbstring.strict_detection = On
+
+; This directive specifies the regex pattern of content types for which mb_output_handler()
+; is activated.
+; Default: mbstring.http_output_conv_mimetype=^(text/|application/xhtml\+xml)
+;mbstring.http_output_conv_mimetype=
+
+; This directive specifies maximum stack depth for mbstring regular expressions. It is similar
+; to the pcre.recursion_limit for PCRE. 
+; Default: 100000
+;mbstring.regex_stack_limit=100000
+
+[gd]
+; Tell the jpeg decode to ignore warnings and try to create
+; a gd image. The warning will then be displayed as notices
+; disabled by default
+; http://php.net/gd.jpeg-ignore-warning
+;gd.jpeg_ignore_warning = 1
+
+[exif]
+; Exif UNICODE user comments are handled as UCS-2BE/UCS-2LE and JIS as JIS.
+; With mbstring support this will automatically be converted into the encoding
+; given by corresponding encode setting. When empty mbstring.internal_encoding
+; is used. For the decode settings you can distinguish between motorola and
+; intel byte order. A decode setting cannot be empty.
+; http://php.net/exif.encode-unicode
+;exif.encode_unicode = ISO-8859-15
+
+; http://php.net/exif.decode-unicode-motorola
+;exif.decode_unicode_motorola = UCS-2BE
+
+; http://php.net/exif.decode-unicode-intel
+;exif.decode_unicode_intel    = UCS-2LE
+
+; http://php.net/exif.encode-jis
+;exif.encode_jis =
+
+; http://php.net/exif.decode-jis-motorola
+;exif.decode_jis_motorola = JIS
+
+; http://php.net/exif.decode-jis-intel
+;exif.decode_jis_intel    = JIS
+
+[Tidy]
+; The path to a default tidy configuration file to use when using tidy
+; http://php.net/tidy.default-config
+;tidy.default_config = /usr/local/lib/php/default.tcfg
+
+; Should tidy clean and repair output automatically?
+; WARNING: Do not use this option if you are generating non-html content
+; such as dynamic images
+; http://php.net/tidy.clean-output
+tidy.clean_output = Off
+
+[soap]
+; Enables or disables WSDL caching feature.
+; http://php.net/soap.wsdl-cache-enabled
+soap.wsdl_cache_enabled=1
+
+; Sets the directory name where SOAP extension will put cache files.
+; http://php.net/soap.wsdl-cache-dir
+soap.wsdl_cache_dir="/tmp"
+
+; (time to live) Sets the number of second while cached file will be used
+; instead of original one.
+; http://php.net/soap.wsdl-cache-ttl
+soap.wsdl_cache_ttl=86400
+
+; Sets the size of the cache limit. (Max. number of WSDL files to cache)
+soap.wsdl_cache_limit = 5
+
+[sysvshm]
+; A default size of the shared memory segment
+;sysvshm.init_mem = 10000
+
+[ldap]
+; Sets the maximum number of open links or -1 for unlimited.
+ldap.max_links = -1
+
+[dba]
+;dba.default_handler=
+
+[opcache]
+; Determines if Zend OPCache is enabled
+;opcache.enable=1
+
+; Determines if Zend OPCache is enabled for the CLI version of PHP
+;opcache.enable_cli=0
+
+; The OPcache shared memory storage size.
+;opcache.memory_consumption=128
+
+; The amount of memory for interned strings in Mbytes.
+;opcache.interned_strings_buffer=8
+
+; The maximum number of keys (scripts) in the OPcache hash table.
+; Only numbers between 200 and 1000000 are allowed.
+;opcache.max_accelerated_files=10000
+
+; The maximum percentage of "wasted" memory until a restart is scheduled.
+;opcache.max_wasted_percentage=5
+
+; When this directive is enabled, the OPcache appends the current working
+; directory to the script key, thus eliminating possible collisions between
+; files with the same name (basename). Disabling the directive improves
+; performance, but may break existing applications.
+;opcache.use_cwd=1
+
+; When disabled, you must reset the OPcache manually or restart the
+; webserver for changes to the filesystem to take effect.
+;opcache.validate_timestamps=1
+
+; How often (in seconds) to check file timestamps for changes to the shared
+; memory storage allocation. ("1" means validate once per second, but only
+; once per request. "0" means always validate)
+;opcache.revalidate_freq=2
+
+; Enables or disables file search in include_path optimization
+;opcache.revalidate_path=0
+
+; If disabled, all PHPDoc comments are dropped from the code to reduce the
+; size of the optimized code.
+;opcache.save_comments=1
+
+; Allow file existence override (file_exists, etc.) performance feature.
+;opcache.enable_file_override=0
+
+; A bitmask, where each bit enables or disables the appropriate OPcache
+; passes
+;opcache.optimization_level=0x7FFFBFFF
+
+;opcache.dups_fix=0
+
+; The location of the OPcache blacklist file (wildcards allowed).
+; Each OPcache blacklist file is a text file that holds the names of files
+; that should not be accelerated. The file format is to add each filename
+; to a new line. The filename may be a full path or just a file prefix
+; (i.e., /var/www/x  blacklists all the files and directories in /var/www
+; that start with 'x'). Line starting with a ; are ignored (comments).
+;opcache.blacklist_filename=
+
+; Allows exclusion of large files from being cached. By default all files
+; are cached.
+;opcache.max_file_size=0
+
+; Check the cache checksum each N requests.
+; The default value of "0" means that the checks are disabled.
+;opcache.consistency_checks=0
+
+; How long to wait (in seconds) for a scheduled restart to begin if the cache
+; is not being accessed.
+;opcache.force_restart_timeout=180
+
+; OPcache error_log file name. Empty string assumes "stderr".
+;opcache.error_log=
+
+; All OPcache errors go to the Web server log.
+; By default, only fatal errors (level 0) or errors (level 1) are logged.
+; You can also enable warnings (level 2), info messages (level 3) or
+; debug messages (level 4).
+;opcache.log_verbosity_level=1
+
+; Preferred Shared Memory back-end. Leave empty and let the system decide.
+;opcache.preferred_memory_model=
+
+; Protect the shared memory from unexpected writing during script execution.
+; Useful for internal debugging only.
+;opcache.protect_memory=0
+
+; Allows calling OPcache API functions only from PHP scripts which path is
+; started from specified string. The default "" means no restriction
+;opcache.restrict_api=
+
+; Mapping base of shared memory segments (for Windows only). All the PHP
+; processes have to map shared memory into the same address space. This
+; directive allows to manually fix the "Unable to reattach to base address"
+; errors.
+;opcache.mmap_base=
+
+; Enables and sets the second level cache directory.
+; It should improve performance when SHM memory is full, at server restart or
+; SHM reset. The default "" disables file based caching.
+;opcache.file_cache=
+
+; Enables or disables opcode caching in shared memory.
+;opcache.file_cache_only=0
+
+; Enables or disables checksum validation when script loaded from file cache.
+;opcache.file_cache_consistency_checks=1
+
+; Implies opcache.file_cache_only=1 for a certain process that failed to
+; reattach to the shared memory (for Windows only). Explicitly enabled file
+; cache is required.
+;opcache.file_cache_fallback=1
+
+; Enables or disables copying of PHP code (text segment) into HUGE PAGES.
+; This should improve performance, but requires appropriate OS configuration.
+;opcache.huge_code_pages=0
+
+; Validate cached file permissions.
+;opcache.validate_permission=0
+
+; Prevent name collisions in chroot'ed environment.
+;opcache.validate_root=0
+
+; If specified, it produces opcode dumps for debugging different stages of
+; optimizations.
+;opcache.opt_debug_level=0
+
+[curl]
+; A default value for the CURLOPT_CAINFO option. This is required to be an
+; absolute path.
+;curl.cainfo =
+
+[openssl]
+; The location of a Certificate Authority (CA) file on the local filesystem
+; to use when verifying the identity of SSL/TLS peers. Most users should
+; not specify a value for this directive as PHP will attempt to use the
+; OS-managed cert stores in its absence. If specified, this value may still
+; be overridden on a per-stream basis via the "cafile" SSL stream context
+; option.
+;openssl.cafile=
+
+; If openssl.cafile is not specified or if the CA file is not found, the
+; directory pointed to by openssl.capath is searched for a suitable
+; certificate. This value must be a correctly hashed certificate directory.
+; Most users should not specify a value for this directive as PHP will
+; attempt to use the OS-managed cert stores in its absence. If specified,
+; this value may still be overridden on a per-stream basis via the "capath"
+; SSL stream context option.
+;openssl.capath=
+
+; Local Variables:
+; tab-width: 4
+; End:
diff --git a/src/php7.3/resources/php/php.ini-production b/src/php7.3/resources/php/php.ini-production
new file mode 100644
index 0000000..ee1ff07
--- /dev/null
+++ b/src/php7.3/resources/php/php.ini-production
@@ -0,0 +1,1939 @@
+[PHP]
+
+;;;;;;;;;;;;;;;;;;;
+; About php.ini   ;
+;;;;;;;;;;;;;;;;;;;
+; PHP's initialization file, generally called php.ini, is responsible for
+; configuring many of the aspects of PHP's behavior.
+
+; PHP attempts to find and load this configuration from a number of locations.
+; The following is a summary of its search order:
+; 1. SAPI module specific location.
+; 2. The PHPRC environment variable. (As of PHP 5.2.0)
+; 3. A number of predefined registry keys on Windows (As of PHP 5.2.0)
+; 4. Current working directory (except CLI)
+; 5. The web server's directory (for SAPI modules), or directory of PHP
+; (otherwise in Windows)
+; 6. The directory from the --with-config-file-path compile time option, or the
+; Windows directory (usually C:\windows)
+; See the PHP docs for more specific information.
+; http://php.net/configuration.file
+
+; The syntax of the file is extremely simple.  Whitespace and lines
+; beginning with a semicolon are silently ignored (as you probably guessed).
+; Section headers (e.g. [Foo]) are also silently ignored, even though
+; they might mean something in the future.
+
+; Directives following the section heading [PATH=/www/mysite] only
+; apply to PHP files in the /www/mysite directory.  Directives
+; following the section heading [HOST=www.example.com] only apply to
+; PHP files served from www.example.com.  Directives set in these
+; special sections cannot be overridden by user-defined INI files or
+; at runtime. Currently, [PATH=] and [HOST=] sections only work under
+; CGI/FastCGI.
+; http://php.net/ini.sections
+
+; Directives are specified using the following syntax:
+; directive = value
+; Directive names are *case sensitive* - foo=bar is different from FOO=bar.
+; Directives are variables used to configure PHP or PHP extensions.
+; There is no name validation.  If PHP can't find an expected
+; directive because it is not set or is mistyped, a default value will be used.
+
+; The value can be a string, a number, a PHP constant (e.g. E_ALL or M_PI), one
+; of the INI constants (On, Off, True, False, Yes, No and None) or an expression
+; (e.g. E_ALL & ~E_NOTICE), a quoted string ("bar"), or a reference to a
+; previously set variable or directive (e.g. ${foo})
+
+; Expressions in the INI file are limited to bitwise operators and parentheses:
+; |  bitwise OR
+; ^  bitwise XOR
+; &  bitwise AND
+; ~  bitwise NOT
+; !  boolean NOT
+
+; Boolean flags can be turned on using the values 1, On, True or Yes.
+; They can be turned off using the values 0, Off, False or No.
+
+; An empty string can be denoted by simply not writing anything after the equal
+; sign, or by using the None keyword:
+
+; foo =         ; sets foo to an empty string
+; foo = None    ; sets foo to an empty string
+; foo = "None"  ; sets foo to the string 'None'
+
+; If you use constants in your value, and these constants belong to a
+; dynamically loaded extension (either a PHP extension or a Zend extension),
+; you may only use these constants *after* the line that loads the extension.
+
+;;;;;;;;;;;;;;;;;;;
+; About this file ;
+;;;;;;;;;;;;;;;;;;;
+; PHP comes packaged with two INI files. One that is recommended to be used
+; in production environments and one that is recommended to be used in
+; development environments.
+
+; php.ini-production contains settings which hold security, performance and
+; best practices at its core. But please be aware, these settings may break
+; compatibility with older or less security conscience applications. We
+; recommending using the production ini in production and testing environments.
+
+; php.ini-development is very similar to its production variant, except it is
+; much more verbose when it comes to errors. We recommend using the
+; development version only in development environments, as errors shown to
+; application users can inadvertently leak otherwise secure information.
+
+; This is the php.ini-production INI file.
+
+;;;;;;;;;;;;;;;;;;;
+; Quick Reference ;
+;;;;;;;;;;;;;;;;;;;
+; The following are all the settings which are different in either the production
+; or development versions of the INIs with respect to PHP's default behavior.
+; Please see the actual settings later in the document for more details as to why
+; we recommend these changes in PHP's behavior.
+
+; display_errors
+;   Default Value: On
+;   Development Value: On
+;   Production Value: Off
+
+; display_startup_errors
+;   Default Value: Off
+;   Development Value: On
+;   Production Value: Off
+
+; error_reporting
+;   Default Value: E_ALL & ~E_NOTICE & ~E_STRICT & ~E_DEPRECATED
+;   Development Value: E_ALL
+;   Production Value: E_ALL & ~E_DEPRECATED & ~E_STRICT
+
+; html_errors
+;   Default Value: On
+;   Development Value: On
+;   Production value: On
+
+; log_errors
+;   Default Value: Off
+;   Development Value: On
+;   Production Value: On
+
+; max_input_time
+;   Default Value: -1 (Unlimited)
+;   Development Value: 60 (60 seconds)
+;   Production Value: 60 (60 seconds)
+
+; output_buffering
+;   Default Value: Off
+;   Development Value: 4096
+;   Production Value: 4096
+
+; register_argc_argv
+;   Default Value: On
+;   Development Value: Off
+;   Production Value: Off
+
+; request_order
+;   Default Value: None
+;   Development Value: "GP"
+;   Production Value: "GP"
+
+; session.gc_divisor
+;   Default Value: 100
+;   Development Value: 1000
+;   Production Value: 1000
+
+; session.sid_bits_per_character
+;   Default Value: 4
+;   Development Value: 5
+;   Production Value: 5
+
+; short_open_tag
+;   Default Value: On
+;   Development Value: Off
+;   Production Value: Off
+
+; variables_order
+;   Default Value: "EGPCS"
+;   Development Value: "GPCS"
+;   Production Value: "GPCS"
+
+;;;;;;;;;;;;;;;;;;;;
+; php.ini Options  ;
+;;;;;;;;;;;;;;;;;;;;
+; Name for user-defined php.ini (.htaccess) files. Default is ".user.ini"
+;user_ini.filename = ".user.ini"
+
+; To disable this feature set this option to an empty value
+;user_ini.filename =
+
+; TTL for user-defined php.ini files (time-to-live) in seconds. Default is 300 seconds (5 minutes)
+;user_ini.cache_ttl = 300
+
+;;;;;;;;;;;;;;;;;;;;
+; Language Options ;
+;;;;;;;;;;;;;;;;;;;;
+
+; Enable the PHP scripting language engine under Apache.
+; http://php.net/engine
+engine = On
+
+; This directive determines whether or not PHP will recognize code between
+; <? and ?> tags as PHP source which should be processed as such. It is
+; generally recommended that <?php and ?> should be used and that this feature
+; should be disabled, as enabling it may result in issues when generating XML
+; documents, however this remains supported for backward compatibility reasons.
+; Note that this directive does not control the <?= shorthand tag, which can be
+; used regardless of this directive.
+; Default Value: On
+; Development Value: Off
+; Production Value: Off
+; http://php.net/short-open-tag
+short_open_tag = Off
+
+; The number of significant digits displayed in floating point numbers.
+; http://php.net/precision
+precision = 14
+
+; Output buffering is a mechanism for controlling how much output data
+; (excluding headers and cookies) PHP should keep internally before pushing that
+; data to the client. If your application's output exceeds this setting, PHP
+; will send that data in chunks of roughly the size you specify.
+; Turning on this setting and managing its maximum buffer size can yield some
+; interesting side-effects depending on your application and web server.
+; You may be able to send headers and cookies after you've already sent output
+; through print or echo. You also may see performance benefits if your server is
+; emitting less packets due to buffered output versus PHP streaming the output
+; as it gets it. On production servers, 4096 bytes is a good setting for performance
+; reasons.
+; Note: Output buffering can also be controlled via Output Buffering Control
+;   functions.
+; Possible Values:
+;   On = Enabled and buffer is unlimited. (Use with caution)
+;   Off = Disabled
+;   Integer = Enables the buffer and sets its maximum size in bytes.
+; Note: This directive is hardcoded to Off for the CLI SAPI
+; Default Value: Off
+; Development Value: 4096
+; Production Value: 4096
+; http://php.net/output-buffering
+output_buffering = 4096
+
+; You can redirect all of the output of your scripts to a function.  For
+; example, if you set output_handler to "mb_output_handler", character
+; encoding will be transparently converted to the specified encoding.
+; Setting any output handler automatically turns on output buffering.
+; Note: People who wrote portable scripts should not depend on this ini
+;   directive. Instead, explicitly set the output handler using ob_start().
+;   Using this ini directive may cause problems unless you know what script
+;   is doing.
+; Note: You cannot use both "mb_output_handler" with "ob_iconv_handler"
+;   and you cannot use both "ob_gzhandler" and "zlib.output_compression".
+; Note: output_handler must be empty if this is set 'On' !!!!
+;   Instead you must use zlib.output_handler.
+; http://php.net/output-handler
+;output_handler =
+
+; URL rewriter function rewrites URL on the fly by using
+; output buffer. You can set target tags by this configuration.
+; "form" tag is special tag. It will add hidden input tag to pass values.
+; Refer to session.trans_sid_tags for usage.
+; Default Value: "form="
+; Development Value: "form="
+; Production Value: "form="
+;url_rewriter.tags
+
+; URL rewriter will not rewrite absolute URL nor form by default. To enable
+; absolute URL rewrite, allowed hosts must be defined at RUNTIME.
+; Refer to session.trans_sid_hosts for more details.
+; Default Value: ""
+; Development Value: ""
+; Production Value: ""
+;url_rewriter.hosts
+
+; Transparent output compression using the zlib library
+; Valid values for this option are 'off', 'on', or a specific buffer size
+; to be used for compression (default is 4KB)
+; Note: Resulting chunk size may vary due to nature of compression. PHP
+;   outputs chunks that are few hundreds bytes each as a result of
+;   compression. If you prefer a larger chunk size for better
+;   performance, enable output_buffering in addition.
+; Note: You need to use zlib.output_handler instead of the standard
+;   output_handler, or otherwise the output will be corrupted.
+; http://php.net/zlib.output-compression
+zlib.output_compression = Off
+
+; http://php.net/zlib.output-compression-level
+;zlib.output_compression_level = -1
+
+; You cannot specify additional output handlers if zlib.output_compression
+; is activated here. This setting does the same as output_handler but in
+; a different order.
+; http://php.net/zlib.output-handler
+;zlib.output_handler =
+
+; Implicit flush tells PHP to tell the output layer to flush itself
+; automatically after every output block.  This is equivalent to calling the
+; PHP function flush() after each and every call to print() or echo() and each
+; and every HTML block.  Turning this option on has serious performance
+; implications and is generally recommended for debugging purposes only.
+; http://php.net/implicit-flush
+; Note: This directive is hardcoded to On for the CLI SAPI
+implicit_flush = Off
+
+; The unserialize callback function will be called (with the undefined class'
+; name as parameter), if the unserializer finds an undefined class
+; which should be instantiated. A warning appears if the specified function is
+; not defined, or if the function doesn't include/implement the missing class.
+; So only set this entry, if you really want to implement such a
+; callback-function.
+unserialize_callback_func =
+
+; When floats & doubles are serialized, store serialize_precision significant
+; digits after the floating point. The default value ensures that when floats
+; are decoded with unserialize, the data will remain the same.
+; The value is also used for json_encode when encoding double values.
+; If -1 is used, then dtoa mode 0 is used which automatically select the best
+; precision.
+serialize_precision = -1
+
+; open_basedir, if set, limits all file operations to the defined directory
+; and below.  This directive makes most sense if used in a per-directory
+; or per-virtualhost web server configuration file.
+; Note: disables the realpath cache
+; http://php.net/open-basedir
+;open_basedir =
+
+; This directive allows you to disable certain functions for security reasons.
+; It receives a comma-delimited list of function names.
+; http://php.net/disable-functions
+disable_functions =
+
+; This directive allows you to disable certain classes for security reasons.
+; It receives a comma-delimited list of class names.
+; http://php.net/disable-classes
+disable_classes =
+
+; Colors for Syntax Highlighting mode.  Anything that's acceptable in
+; <span style="color: ???????"> would work.
+; http://php.net/syntax-highlighting
+;highlight.string  = #DD0000
+;highlight.comment = #FF9900
+;highlight.keyword = #007700
+;highlight.default = #0000BB
+;highlight.html    = #000000
+
+; If enabled, the request will be allowed to complete even if the user aborts
+; the request. Consider enabling it if executing long requests, which may end up
+; being interrupted by the user or a browser timing out. PHP's default behavior
+; is to disable this feature.
+; http://php.net/ignore-user-abort
+;ignore_user_abort = On
+
+; Determines the size of the realpath cache to be used by PHP. This value should
+; be increased on systems where PHP opens many files to reflect the quantity of
+; the file operations performed.
+; Note: if open_basedir is set, the cache is disabled
+; http://php.net/realpath-cache-size
+;realpath_cache_size = 4096k
+
+; Duration of time, in seconds for which to cache realpath information for a given
+; file or directory. For systems with rarely changing files, consider increasing this
+; value.
+; http://php.net/realpath-cache-ttl
+;realpath_cache_ttl = 120
+
+; Enables or disables the circular reference collector.
+; http://php.net/zend.enable-gc
+zend.enable_gc = On
+
+; If enabled, scripts may be written in encodings that are incompatible with
+; the scanner.  CP936, Big5, CP949 and Shift_JIS are the examples of such
+; encodings.  To use this feature, mbstring extension must be enabled.
+; Default: Off
+;zend.multibyte = Off
+
+; Allows to set the default encoding for the scripts.  This value will be used
+; unless "declare(encoding=...)" directive appears at the top of the script.
+; Only affects if zend.multibyte is set.
+; Default: ""
+;zend.script_encoding =
+
+;;;;;;;;;;;;;;;;;
+; Miscellaneous ;
+;;;;;;;;;;;;;;;;;
+
+; Decides whether PHP may expose the fact that it is installed on the server
+; (e.g. by adding its signature to the Web server header).  It is no security
+; threat in any way, but it makes it possible to determine whether you use PHP
+; on your server or not.
+; http://php.net/expose-php
+expose_php = On
+
+;;;;;;;;;;;;;;;;;;;
+; Resource Limits ;
+;;;;;;;;;;;;;;;;;;;
+
+; Maximum execution time of each script, in seconds
+; http://php.net/max-execution-time
+; Note: This directive is hardcoded to 0 for the CLI SAPI
+max_execution_time = 30
+
+; Maximum amount of time each script may spend parsing request data. It's a good
+; idea to limit this time on productions servers in order to eliminate unexpectedly
+; long running scripts.
+; Note: This directive is hardcoded to -1 for the CLI SAPI
+; Default Value: -1 (Unlimited)
+; Development Value: 60 (60 seconds)
+; Production Value: 60 (60 seconds)
+; http://php.net/max-input-time
+max_input_time = 60
+
+; Maximum input variable nesting level
+; http://php.net/max-input-nesting-level
+;max_input_nesting_level = 64
+
+; How many GET/POST/COOKIE input variables may be accepted
+;max_input_vars = 1000
+
+; Maximum amount of memory a script may consume (128MB)
+; http://php.net/memory-limit
+memory_limit = 128M
+
+;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
+; Error handling and logging ;
+;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
+
+; This directive informs PHP of which errors, warnings and notices you would like
+; it to take action for. The recommended way of setting values for this
+; directive is through the use of the error level constants and bitwise
+; operators. The error level constants are below here for convenience as well as
+; some common settings and their meanings.
+; By default, PHP is set to take action on all errors, notices and warnings EXCEPT
+; those related to E_NOTICE and E_STRICT, which together cover best practices and
+; recommended coding standards in PHP. For performance reasons, this is the
+; recommend error reporting setting. Your production server shouldn't be wasting
+; resources complaining about best practices and coding standards. That's what
+; development servers and development settings are for.
+; Note: The php.ini-development file has this setting as E_ALL. This
+; means it pretty much reports everything which is exactly what you want during
+; development and early testing.
+;
+; Error Level Constants:
+; E_ALL             - All errors and warnings (includes E_STRICT as of PHP 5.4.0)
+; E_ERROR           - fatal run-time errors
+; E_RECOVERABLE_ERROR  - almost fatal run-time errors
+; E_WARNING         - run-time warnings (non-fatal errors)
+; E_PARSE           - compile-time parse errors
+; E_NOTICE          - run-time notices (these are warnings which often result
+;                     from a bug in your code, but it's possible that it was
+;                     intentional (e.g., using an uninitialized variable and
+;                     relying on the fact it is automatically initialized to an
+;                     empty string)
+; E_STRICT          - run-time notices, enable to have PHP suggest changes
+;                     to your code which will ensure the best interoperability
+;                     and forward compatibility of your code
+; E_CORE_ERROR      - fatal errors that occur during PHP's initial startup
+; E_CORE_WARNING    - warnings (non-fatal errors) that occur during PHP's
+;                     initial startup
+; E_COMPILE_ERROR   - fatal compile-time errors
+; E_COMPILE_WARNING - compile-time warnings (non-fatal errors)
+; E_USER_ERROR      - user-generated error message
+; E_USER_WARNING    - user-generated warning message
+; E_USER_NOTICE     - user-generated notice message
+; E_DEPRECATED      - warn about code that will not work in future versions
+;                     of PHP
+; E_USER_DEPRECATED - user-generated deprecation warnings
+;
+; Common Values:
+;   E_ALL (Show all errors, warnings and notices including coding standards.)
+;   E_ALL & ~E_NOTICE  (Show all errors, except for notices)
+;   E_ALL & ~E_NOTICE & ~E_STRICT  (Show all errors, except for notices and coding standards warnings.)
+;   E_COMPILE_ERROR|E_RECOVERABLE_ERROR|E_ERROR|E_CORE_ERROR  (Show only errors)
+; Default Value: E_ALL & ~E_NOTICE & ~E_STRICT & ~E_DEPRECATED
+; Development Value: E_ALL
+; Production Value: E_ALL & ~E_DEPRECATED & ~E_STRICT
+; http://php.net/error-reporting
+error_reporting = E_ALL & ~E_DEPRECATED & ~E_STRICT
+
+; This directive controls whether or not and where PHP will output errors,
+; notices and warnings too. Error output is very useful during development, but
+; it could be very dangerous in production environments. Depending on the code
+; which is triggering the error, sensitive information could potentially leak
+; out of your application such as database usernames and passwords or worse.
+; For production environments, we recommend logging errors rather than
+; sending them to STDOUT.
+; Possible Values:
+;   Off = Do not display any errors
+;   stderr = Display errors to STDERR (affects only CGI/CLI binaries!)
+;   On or stdout = Display errors to STDOUT
+; Default Value: On
+; Development Value: On
+; Production Value: Off
+; http://php.net/display-errors
+display_errors = Off
+
+; The display of errors which occur during PHP's startup sequence are handled
+; separately from display_errors. PHP's default behavior is to suppress those
+; errors from clients. Turning the display of startup errors on can be useful in
+; debugging configuration problems. We strongly recommend you
+; set this to 'off' for production servers.
+; Default Value: Off
+; Development Value: On
+; Production Value: Off
+; http://php.net/display-startup-errors
+display_startup_errors = Off
+
+; Besides displaying errors, PHP can also log errors to locations such as a
+; server-specific log, STDERR, or a location specified by the error_log
+; directive found below. While errors should not be displayed on productions
+; servers they should still be monitored and logging is a great way to do that.
+; Default Value: Off
+; Development Value: On
+; Production Value: On
+; http://php.net/log-errors
+log_errors = On
+
+; Set maximum length of log_errors. In error_log information about the source is
+; added. The default is 1024 and 0 allows to not apply any maximum length at all.
+; http://php.net/log-errors-max-len
+log_errors_max_len = 1024
+
+; Do not log repeated messages. Repeated errors must occur in same file on same
+; line unless ignore_repeated_source is set true.
+; http://php.net/ignore-repeated-errors
+ignore_repeated_errors = Off
+
+; Ignore source of message when ignoring repeated messages. When this setting
+; is On you will not log errors with repeated messages from different files or
+; source lines.
+; http://php.net/ignore-repeated-source
+ignore_repeated_source = Off
+
+; If this parameter is set to Off, then memory leaks will not be shown (on
+; stdout or in the log). This has only effect in a debug compile, and if
+; error reporting includes E_WARNING in the allowed list
+; http://php.net/report-memleaks
+report_memleaks = On
+
+; This setting is on by default.
+;report_zend_debug = 0
+
+; Store the last error/warning message in $php_errormsg (boolean). Setting this value
+; to On can assist in debugging and is appropriate for development servers. It should
+; however be disabled on production servers.
+; This directive is DEPRECATED.
+; Default Value: Off
+; Development Value: Off
+; Production Value: Off
+; http://php.net/track-errors
+;track_errors = Off
+
+; Turn off normal error reporting and emit XML-RPC error XML
+; http://php.net/xmlrpc-errors
+;xmlrpc_errors = 0
+
+; An XML-RPC faultCode
+;xmlrpc_error_number = 0
+
+; When PHP displays or logs an error, it has the capability of formatting the
+; error message as HTML for easier reading. This directive controls whether
+; the error message is formatted as HTML or not.
+; Note: This directive is hardcoded to Off for the CLI SAPI
+; Default Value: On
+; Development Value: On
+; Production value: On
+; http://php.net/html-errors
+html_errors = On
+
+; If html_errors is set to On *and* docref_root is not empty, then PHP
+; produces clickable error messages that direct to a page describing the error
+; or function causing the error in detail.
+; You can download a copy of the PHP manual from http://php.net/docs
+; and change docref_root to the base URL of your local copy including the
+; leading '/'. You must also specify the file extension being used including
+; the dot. PHP's default behavior is to leave these settings empty, in which
+; case no links to documentation are generated.
+; Note: Never use this feature for production boxes.
+; http://php.net/docref-root
+; Examples
+;docref_root = "/phpmanual/"
+
+; http://php.net/docref-ext
+;docref_ext = .html
+
+; String to output before an error message. PHP's default behavior is to leave
+; this setting blank.
+; http://php.net/error-prepend-string
+; Example:
+;error_prepend_string = "<span style='color: #ff0000'>"
+
+; String to output after an error message. PHP's default behavior is to leave
+; this setting blank.
+; http://php.net/error-append-string
+; Example:
+;error_append_string = "</span>"
+
+; Log errors to specified file. PHP's default behavior is to leave this value
+; empty.
+; http://php.net/error-log
+; Example:
+;error_log = php_errors.log
+; Log errors to syslog (Event Log on Windows).
+;error_log = syslog
+
+; The syslog ident is a string which is prepended to every message logged
+; to syslog. Only used when error_log is set to syslog.
+;syslog.ident = php
+
+; The syslog facility is used to specify what type of program is logging
+; the message. Only used when error_log is set to syslog.
+;syslog.facility = user
+
+; Set this to disable filtering control characters (the default).
+; Some loggers only accept NVT-ASCII, others accept anything that's not
+; control characters. If your logger accepts everything, then no filtering
+; is needed at all.
+; Allowed values are:
+;   ascii (all printable ASCII characters and NL)
+;   no-ctrl (all characters except control characters)
+;   all (all characters)
+;   raw (like "all", but messages are not split at newlines)
+; http://php.net/syslog.filter
+;syslog.filter = ascii
+
+;windows.show_crt_warning
+; Default value: 0
+; Development value: 0
+; Production value: 0
+
+;;;;;;;;;;;;;;;;;
+; Data Handling ;
+;;;;;;;;;;;;;;;;;
+
+; The separator used in PHP generated URLs to separate arguments.
+; PHP's default setting is "&".
+; http://php.net/arg-separator.output
+; Example:
+;arg_separator.output = "&amp;"
+
+; List of separator(s) used by PHP to parse input URLs into variables.
+; PHP's default setting is "&".
+; NOTE: Every character in this directive is considered as separator!
+; http://php.net/arg-separator.input
+; Example:
+;arg_separator.input = ";&"
+
+; This directive determines which super global arrays are registered when PHP
+; starts up. G,P,C,E & S are abbreviations for the following respective super
+; globals: GET, POST, COOKIE, ENV and SERVER. There is a performance penalty
+; paid for the registration of these arrays and because ENV is not as commonly
+; used as the others, ENV is not recommended on productions servers. You
+; can still get access to the environment variables through getenv() should you
+; need to.
+; Default Value: "EGPCS"
+; Development Value: "GPCS"
+; Production Value: "GPCS";
+; http://php.net/variables-order
+variables_order = "GPCS"
+
+; This directive determines which super global data (G,P & C) should be
+; registered into the super global array REQUEST. If so, it also determines
+; the order in which that data is registered. The values for this directive
+; are specified in the same manner as the variables_order directive,
+; EXCEPT one. Leaving this value empty will cause PHP to use the value set
+; in the variables_order directive. It does not mean it will leave the super
+; globals array REQUEST empty.
+; Default Value: None
+; Development Value: "GP"
+; Production Value: "GP"
+; http://php.net/request-order
+request_order = "GP"
+
+; This directive determines whether PHP registers $argv & $argc each time it
+; runs. $argv contains an array of all the arguments passed to PHP when a script
+; is invoked. $argc contains an integer representing the number of arguments
+; that were passed when the script was invoked. These arrays are extremely
+; useful when running scripts from the command line. When this directive is
+; enabled, registering these variables consumes CPU cycles and memory each time
+; a script is executed. For performance reasons, this feature should be disabled
+; on production servers.
+; Note: This directive is hardcoded to On for the CLI SAPI
+; Default Value: On
+; Development Value: Off
+; Production Value: Off
+; http://php.net/register-argc-argv
+register_argc_argv = Off
+
+; When enabled, the ENV, REQUEST and SERVER variables are created when they're
+; first used (Just In Time) instead of when the script starts. If these
+; variables are not used within a script, having this directive on will result
+; in a performance gain. The PHP directive register_argc_argv must be disabled
+; for this directive to have any affect.
+; http://php.net/auto-globals-jit
+auto_globals_jit = On
+
+; Whether PHP will read the POST data.
+; This option is enabled by default.
+; Most likely, you won't want to disable this option globally. It causes $_POST
+; and $_FILES to always be empty; the only way you will be able to read the
+; POST data will be through the php://input stream wrapper. This can be useful
+; to proxy requests or to process the POST data in a memory efficient fashion.
+; http://php.net/enable-post-data-reading
+;enable_post_data_reading = Off
+
+; Maximum size of POST data that PHP will accept.
+; Its value may be 0 to disable the limit. It is ignored if POST data reading
+; is disabled through enable_post_data_reading.
+; http://php.net/post-max-size
+post_max_size = 8M
+
+; Automatically add files before PHP document.
+; http://php.net/auto-prepend-file
+auto_prepend_file =
+
+; Automatically add files after PHP document.
+; http://php.net/auto-append-file
+auto_append_file =
+
+; By default, PHP will output a media type using the Content-Type header. To
+; disable this, simply set it to be empty.
+;
+; PHP's built-in default media type is set to text/html.
+; http://php.net/default-mimetype
+default_mimetype = "text/html"
+
+; PHP's default character set is set to UTF-8.
+; http://php.net/default-charset
+default_charset = "UTF-8"
+
+; PHP internal character encoding is set to empty.
+; If empty, default_charset is used.
+; http://php.net/internal-encoding
+;internal_encoding =
+
+; PHP input character encoding is set to empty.
+; If empty, default_charset is used.
+; http://php.net/input-encoding
+;input_encoding =
+
+; PHP output character encoding is set to empty.
+; If empty, default_charset is used.
+; See also output_buffer.
+; http://php.net/output-encoding
+;output_encoding =
+
+;;;;;;;;;;;;;;;;;;;;;;;;;
+; Paths and Directories ;
+;;;;;;;;;;;;;;;;;;;;;;;;;
+
+; UNIX: "/path1:/path2"
+;include_path = ".:/php/includes"
+;
+; Windows: "\path1;\path2"
+;include_path = ".;c:\php\includes"
+;
+; PHP's default setting for include_path is ".;/path/to/php/pear"
+; http://php.net/include-path
+
+; The root of the PHP pages, used only if nonempty.
+; if PHP was not compiled with FORCE_REDIRECT, you SHOULD set doc_root
+; if you are running php as a CGI under any web server (other than IIS)
+; see documentation for security issues.  The alternate is to use the
+; cgi.force_redirect configuration below
+; http://php.net/doc-root
+doc_root =
+
+; The directory under which PHP opens the script using /~username used only
+; if nonempty.
+; http://php.net/user-dir
+user_dir =
+
+; Directory in which the loadable extensions (modules) reside.
+; http://php.net/extension-dir
+;extension_dir = "./"
+; On windows:
+;extension_dir = "ext"
+
+; Directory where the temporary files should be placed.
+; Defaults to the system default (see sys_get_temp_dir)
+;sys_temp_dir = "/tmp"
+
+; Whether or not to enable the dl() function.  The dl() function does NOT work
+; properly in multithreaded servers, such as IIS or Zeus, and is automatically
+; disabled on them.
+; http://php.net/enable-dl
+enable_dl = Off
+
+; cgi.force_redirect is necessary to provide security running PHP as a CGI under
+; most web servers.  Left undefined, PHP turns this on by default.  You can
+; turn it off here AT YOUR OWN RISK
+; **You CAN safely turn this off for IIS, in fact, you MUST.**
+; http://php.net/cgi.force-redirect
+;cgi.force_redirect = 1
+
+; if cgi.nph is enabled it will force cgi to always sent Status: 200 with
+; every request. PHP's default behavior is to disable this feature.
+;cgi.nph = 1
+
+; if cgi.force_redirect is turned on, and you are not running under Apache or Netscape
+; (iPlanet) web servers, you MAY need to set an environment variable name that PHP
+; will look for to know it is OK to continue execution.  Setting this variable MAY
+; cause security issues, KNOW WHAT YOU ARE DOING FIRST.
+; http://php.net/cgi.redirect-status-env
+;cgi.redirect_status_env =
+
+; cgi.fix_pathinfo provides *real* PATH_INFO/PATH_TRANSLATED support for CGI.  PHP's
+; previous behaviour was to set PATH_TRANSLATED to SCRIPT_FILENAME, and to not grok
+; what PATH_INFO is.  For more information on PATH_INFO, see the cgi specs.  Setting
+; this to 1 will cause PHP CGI to fix its paths to conform to the spec.  A setting
+; of zero causes PHP to behave as before.  Default is 1.  You should fix your scripts
+; to use SCRIPT_FILENAME rather than PATH_TRANSLATED.
+; http://php.net/cgi.fix-pathinfo
+;cgi.fix_pathinfo=1
+
+; if cgi.discard_path is enabled, the PHP CGI binary can safely be placed outside
+; of the web tree and people will not be able to circumvent .htaccess security.
+;cgi.discard_path=1
+
+; FastCGI under IIS supports the ability to impersonate
+; security tokens of the calling client.  This allows IIS to define the
+; security context that the request runs under.  mod_fastcgi under Apache
+; does not currently support this feature (03/17/2002)
+; Set to 1 if running under IIS.  Default is zero.
+; http://php.net/fastcgi.impersonate
+;fastcgi.impersonate = 1
+
+; Disable logging through FastCGI connection. PHP's default behavior is to enable
+; this feature.
+;fastcgi.logging = 0
+
+; cgi.rfc2616_headers configuration option tells PHP what type of headers to
+; use when sending HTTP response code. If set to 0, PHP sends Status: header that
+; is supported by Apache. When this option is set to 1, PHP will send
+; RFC2616 compliant header.
+; Default is zero.
+; http://php.net/cgi.rfc2616-headers
+;cgi.rfc2616_headers = 0
+
+; cgi.check_shebang_line controls whether CGI PHP checks for line starting with #!
+; (shebang) at the top of the running script. This line might be needed if the
+; script support running both as stand-alone script and via PHP CGI<. PHP in CGI
+; mode skips this line and ignores its content if this directive is turned on.
+; http://php.net/cgi.check-shebang-line
+;cgi.check_shebang_line=1
+
+;;;;;;;;;;;;;;;;
+; File Uploads ;
+;;;;;;;;;;;;;;;;
+
+; Whether to allow HTTP file uploads.
+; http://php.net/file-uploads
+file_uploads = On
+
+; Temporary directory for HTTP uploaded files (will use system default if not
+; specified).
+; http://php.net/upload-tmp-dir
+;upload_tmp_dir =
+
+; Maximum allowed size for uploaded files.
+; http://php.net/upload-max-filesize
+upload_max_filesize = 2M
+
+; Maximum number of files that can be uploaded via a single request
+max_file_uploads = 20
+
+;;;;;;;;;;;;;;;;;;
+; Fopen wrappers ;
+;;;;;;;;;;;;;;;;;;
+
+; Whether to allow the treatment of URLs (like http:// or ftp://) as files.
+; http://php.net/allow-url-fopen
+allow_url_fopen = On
+
+; Whether to allow include/require to open URLs (like http:// or ftp://) as files.
+; http://php.net/allow-url-include
+allow_url_include = Off
+
+; Define the anonymous ftp password (your email address). PHP's default setting
+; for this is empty.
+; http://php.net/from
+;from="john@doe.com"
+
+; Define the User-Agent string. PHP's default setting for this is empty.
+; http://php.net/user-agent
+;user_agent="PHP"
+
+; Default timeout for socket based streams (seconds)
+; http://php.net/default-socket-timeout
+default_socket_timeout = 60
+
+; If your scripts have to deal with files from Macintosh systems,
+; or you are running on a Mac and need to deal with files from
+; unix or win32 systems, setting this flag will cause PHP to
+; automatically detect the EOL character in those files so that
+; fgets() and file() will work regardless of the source of the file.
+; http://php.net/auto-detect-line-endings
+;auto_detect_line_endings = Off
+
+;;;;;;;;;;;;;;;;;;;;;;
+; Dynamic Extensions ;
+;;;;;;;;;;;;;;;;;;;;;;
+
+; If you wish to have an extension loaded automatically, use the following
+; syntax:
+;
+;   extension=modulename
+;
+; For example:
+;
+;   extension=mysqli
+;
+; When the extension library to load is not located in the default extension
+; directory, You may specify an absolute path to the library file:
+;
+;   extension=/path/to/extension/mysqli.so
+;
+; Note : The syntax used in previous PHP versions ('extension=<ext>.so' and
+; 'extension='php_<ext>.dll') is supported for legacy reasons and may be
+; deprecated in a future PHP major version. So, when it is possible, please
+; move to the new ('extension=<ext>) syntax.
+;
+; Notes for Windows environments :
+;
+; - Many DLL files are located in the extensions/ (PHP 4) or ext/ (PHP 5+)
+;   extension folders as well as the separate PECL DLL download (PHP 5+).
+;   Be sure to appropriately set the extension_dir directive.
+;
+;extension=bz2
+;extension=curl
+;extension=fileinfo
+;extension=gd2
+;extension=gettext
+;extension=gmp
+;extension=intl
+;extension=imap
+;extension=interbase
+;extension=ldap
+;extension=mbstring
+;extension=exif      ; Must be after mbstring as it depends on it
+;extension=mysqli
+;extension=oci8_12c  ; Use with Oracle Database 12c Instant Client
+;extension=odbc
+;extension=openssl
+;extension=pdo_firebird
+;extension=pdo_mysql
+;extension=pdo_oci
+;extension=pdo_odbc
+;extension=pdo_pgsql
+;extension=pdo_sqlite
+;extension=pgsql
+;extension=shmop
+
+; The MIBS data available in the PHP distribution must be installed.
+; See http://www.php.net/manual/en/snmp.installation.php
+;extension=snmp
+
+;extension=soap
+;extension=sockets
+;extension=sodium
+;extension=sqlite3
+;extension=tidy
+;extension=xmlrpc
+;extension=xsl
+
+;;;;;;;;;;;;;;;;;;;
+; Module Settings ;
+;;;;;;;;;;;;;;;;;;;
+
+[CLI Server]
+; Whether the CLI web server uses ANSI color coding in its terminal output.
+cli_server.color = On
+
+[Date]
+; Defines the default timezone used by the date functions
+; http://php.net/date.timezone
+;date.timezone =
+
+; http://php.net/date.default-latitude
+;date.default_latitude = 31.7667
+
+; http://php.net/date.default-longitude
+;date.default_longitude = 35.2333
+
+; http://php.net/date.sunrise-zenith
+;date.sunrise_zenith = 90.583333
+
+; http://php.net/date.sunset-zenith
+;date.sunset_zenith = 90.583333
+
+[filter]
+; http://php.net/filter.default
+;filter.default = unsafe_raw
+
+; http://php.net/filter.default-flags
+;filter.default_flags =
+
+[iconv]
+; Use of this INI entry is deprecated, use global input_encoding instead.
+; If empty, default_charset or input_encoding or iconv.input_encoding is used.
+; The precedence is: default_charset < input_encoding < iconv.input_encoding
+;iconv.input_encoding =
+
+; Use of this INI entry is deprecated, use global internal_encoding instead.
+; If empty, default_charset or internal_encoding or iconv.internal_encoding is used.
+; The precedence is: default_charset < internal_encoding < iconv.internal_encoding
+;iconv.internal_encoding =
+
+; Use of this INI entry is deprecated, use global output_encoding instead.
+; If empty, default_charset or output_encoding or iconv.output_encoding is used.
+; The precedence is: default_charset < output_encoding < iconv.output_encoding
+; To use an output encoding conversion, iconv's output handler must be set
+; otherwise output encoding conversion cannot be performed.
+;iconv.output_encoding =
+
+[imap]
+; rsh/ssh logins are disabled by default. Use this INI entry if you want to
+; enable them. Note that the IMAP library does not filter mailbox names before
+; passing them to rsh/ssh command, thus passing untrusted data to this function
+; with rsh/ssh enabled is insecure.
+;imap.enable_insecure_rsh=0
+
+[intl]
+;intl.default_locale =
+; This directive allows you to produce PHP errors when some error
+; happens within intl functions. The value is the level of the error produced.
+; Default is 0, which does not produce any errors.
+;intl.error_level = E_WARNING
+;intl.use_exceptions = 0
+
+[sqlite3]
+; Directory pointing to SQLite3 extensions
+; http://php.net/sqlite3.extension-dir
+;sqlite3.extension_dir =
+
+; SQLite defensive mode flag (only available from SQLite 3.26+)
+; When the defensive flag is enabled, language features that allow ordinary
+; SQL to deliberately corrupt the database file are disabled. This forbids
+; writing directly to the schema, shadow tables (eg. FTS data tables), or
+; the sqlite_dbpage virtual table.
+; https://www.sqlite.org/c3ref/c_dbconfig_defensive.html
+; (for older SQLite versions, this flag has no use)
+;sqlite3.defensive = 1
+
+[Pcre]
+; PCRE library backtracking limit.
+; http://php.net/pcre.backtrack-limit
+;pcre.backtrack_limit=100000
+
+; PCRE library recursion limit.
+; Please note that if you set this value to a high number you may consume all
+; the available process stack and eventually crash PHP (due to reaching the
+; stack size limit imposed by the Operating System).
+; http://php.net/pcre.recursion-limit
+;pcre.recursion_limit=100000
+
+; Enables or disables JIT compilation of patterns. This requires the PCRE
+; library to be compiled with JIT support.
+;pcre.jit=1
+
+[Pdo]
+; Whether to pool ODBC connections. Can be one of "strict", "relaxed" or "off"
+; http://php.net/pdo-odbc.connection-pooling
+;pdo_odbc.connection_pooling=strict
+
+;pdo_odbc.db2_instance_name
+
+[Pdo_mysql]
+; Default socket name for local MySQL connects.  If empty, uses the built-in
+; MySQL defaults.
+pdo_mysql.default_socket=
+
+[Phar]
+; http://php.net/phar.readonly
+;phar.readonly = On
+
+; http://php.net/phar.require-hash
+;phar.require_hash = On
+
+;phar.cache_list =
+
+[mail function]
+; For Win32 only.
+; http://php.net/smtp
+SMTP = localhost
+; http://php.net/smtp-port
+smtp_port = 25
+
+; For Win32 only.
+; http://php.net/sendmail-from
+;sendmail_from = me@example.com
+
+; For Unix only.  You may supply arguments as well (default: "sendmail -t -i").
+; http://php.net/sendmail-path
+;sendmail_path =
+
+; Force the addition of the specified parameters to be passed as extra parameters
+; to the sendmail binary. These parameters will always replace the value of
+; the 5th parameter to mail().
+;mail.force_extra_parameters =
+
+; Add X-PHP-Originating-Script: that will include uid of the script followed by the filename
+mail.add_x_header = Off
+
+; The path to a log file that will log all mail() calls. Log entries include
+; the full path of the script, line number, To address and headers.
+;mail.log =
+; Log mail to syslog (Event Log on Windows).
+;mail.log = syslog
+
+[ODBC]
+; http://php.net/odbc.default-db
+;odbc.default_db    =  Not yet implemented
+
+; http://php.net/odbc.default-user
+;odbc.default_user  =  Not yet implemented
+
+; http://php.net/odbc.default-pw
+;odbc.default_pw    =  Not yet implemented
+
+; Controls the ODBC cursor model.
+; Default: SQL_CURSOR_STATIC (default).
+;odbc.default_cursortype
+
+; Allow or prevent persistent links.
+; http://php.net/odbc.allow-persistent
+odbc.allow_persistent = On
+
+; Check that a connection is still valid before reuse.
+; http://php.net/odbc.check-persistent
+odbc.check_persistent = On
+
+; Maximum number of persistent links.  -1 means no limit.
+; http://php.net/odbc.max-persistent
+odbc.max_persistent = -1
+
+; Maximum number of links (persistent + non-persistent).  -1 means no limit.
+; http://php.net/odbc.max-links
+odbc.max_links = -1
+
+; Handling of LONG fields.  Returns number of bytes to variables.  0 means
+; passthru.
+; http://php.net/odbc.defaultlrl
+odbc.defaultlrl = 4096
+
+; Handling of binary data.  0 means passthru, 1 return as is, 2 convert to char.
+; See the documentation on odbc_binmode and odbc_longreadlen for an explanation
+; of odbc.defaultlrl and odbc.defaultbinmode
+; http://php.net/odbc.defaultbinmode
+odbc.defaultbinmode = 1
+
+[Interbase]
+; Allow or prevent persistent links.
+ibase.allow_persistent = 1
+
+; Maximum number of persistent links.  -1 means no limit.
+ibase.max_persistent = -1
+
+; Maximum number of links (persistent + non-persistent).  -1 means no limit.
+ibase.max_links = -1
+
+; Default database name for ibase_connect().
+;ibase.default_db =
+
+; Default username for ibase_connect().
+;ibase.default_user =
+
+; Default password for ibase_connect().
+;ibase.default_password =
+
+; Default charset for ibase_connect().
+;ibase.default_charset =
+
+; Default timestamp format.
+ibase.timestampformat = "%Y-%m-%d %H:%M:%S"
+
+; Default date format.
+ibase.dateformat = "%Y-%m-%d"
+
+; Default time format.
+ibase.timeformat = "%H:%M:%S"
+
+[MySQLi]
+
+; Maximum number of persistent links.  -1 means no limit.
+; http://php.net/mysqli.max-persistent
+mysqli.max_persistent = -1
+
+; Allow accessing, from PHP's perspective, local files with LOAD DATA statements
+; http://php.net/mysqli.allow_local_infile
+;mysqli.allow_local_infile = On
+
+; Allow or prevent persistent links.
+; http://php.net/mysqli.allow-persistent
+mysqli.allow_persistent = On
+
+; Maximum number of links.  -1 means no limit.
+; http://php.net/mysqli.max-links
+mysqli.max_links = -1
+
+; Default port number for mysqli_connect().  If unset, mysqli_connect() will use
+; the $MYSQL_TCP_PORT or the mysql-tcp entry in /etc/services or the
+; compile-time value defined MYSQL_PORT (in that order).  Win32 will only look
+; at MYSQL_PORT.
+; http://php.net/mysqli.default-port
+mysqli.default_port = 3306
+
+; Default socket name for local MySQL connects.  If empty, uses the built-in
+; MySQL defaults.
+; http://php.net/mysqli.default-socket
+mysqli.default_socket =
+
+; Default host for mysql_connect() (doesn't apply in safe mode).
+; http://php.net/mysqli.default-host
+mysqli.default_host =
+
+; Default user for mysql_connect() (doesn't apply in safe mode).
+; http://php.net/mysqli.default-user
+mysqli.default_user =
+
+; Default password for mysqli_connect() (doesn't apply in safe mode).
+; Note that this is generally a *bad* idea to store passwords in this file.
+; *Any* user with PHP access can run 'echo get_cfg_var("mysqli.default_pw")
+; and reveal this password!  And of course, any users with read access to this
+; file will be able to reveal the password as well.
+; http://php.net/mysqli.default-pw
+mysqli.default_pw =
+
+; Allow or prevent reconnect
+mysqli.reconnect = Off
+
+[mysqlnd]
+; Enable / Disable collection of general statistics by mysqlnd which can be
+; used to tune and monitor MySQL operations.
+mysqlnd.collect_statistics = On
+
+; Enable / Disable collection of memory usage statistics by mysqlnd which can be
+; used to tune and monitor MySQL operations.
+mysqlnd.collect_memory_statistics = Off
+
+; Records communication from all extensions using mysqlnd to the specified log
+; file.
+; http://php.net/mysqlnd.debug
+;mysqlnd.debug =
+
+; Defines which queries will be logged.
+;mysqlnd.log_mask = 0
+
+; Default size of the mysqlnd memory pool, which is used by result sets.
+;mysqlnd.mempool_default_size = 16000
+
+; Size of a pre-allocated buffer used when sending commands to MySQL in bytes.
+;mysqlnd.net_cmd_buffer_size = 2048
+
+; Size of a pre-allocated buffer used for reading data sent by the server in
+; bytes.
+;mysqlnd.net_read_buffer_size = 32768
+
+; Timeout for network requests in seconds.
+;mysqlnd.net_read_timeout = 31536000
+
+; SHA-256 Authentication Plugin related. File with the MySQL server public RSA
+; key.
+;mysqlnd.sha256_server_public_key =
+
+[OCI8]
+
+; Connection: Enables privileged connections using external
+; credentials (OCI_SYSOPER, OCI_SYSDBA)
+; http://php.net/oci8.privileged-connect
+;oci8.privileged_connect = Off
+
+; Connection: The maximum number of persistent OCI8 connections per
+; process. Using -1 means no limit.
+; http://php.net/oci8.max-persistent
+;oci8.max_persistent = -1
+
+; Connection: The maximum number of seconds a process is allowed to
+; maintain an idle persistent connection. Using -1 means idle
+; persistent connections will be maintained forever.
+; http://php.net/oci8.persistent-timeout
+;oci8.persistent_timeout = -1
+
+; Connection: The number of seconds that must pass before issuing a
+; ping during oci_pconnect() to check the connection validity. When
+; set to 0, each oci_pconnect() will cause a ping. Using -1 disables
+; pings completely.
+; http://php.net/oci8.ping-interval
+;oci8.ping_interval = 60
+
+; Connection: Set this to a user chosen connection class to be used
+; for all pooled server requests with Oracle 11g Database Resident
+; Connection Pooling (DRCP).  To use DRCP, this value should be set to
+; the same string for all web servers running the same application,
+; the database pool must be configured, and the connection string must
+; specify to use a pooled server.
+;oci8.connection_class =
+
+; High Availability: Using On lets PHP receive Fast Application
+; Notification (FAN) events generated when a database node fails. The
+; database must also be configured to post FAN events.
+;oci8.events = Off
+
+; Tuning: This option enables statement caching, and specifies how
+; many statements to cache. Using 0 disables statement caching.
+; http://php.net/oci8.statement-cache-size
+;oci8.statement_cache_size = 20
+
+; Tuning: Enables statement prefetching and sets the default number of
+; rows that will be fetched automatically after statement execution.
+; http://php.net/oci8.default-prefetch
+;oci8.default_prefetch = 100
+
+; Compatibility. Using On means oci_close() will not close
+; oci_connect() and oci_new_connect() connections.
+; http://php.net/oci8.old-oci-close-semantics
+;oci8.old_oci_close_semantics = Off
+
+[PostgreSQL]
+; Allow or prevent persistent links.
+; http://php.net/pgsql.allow-persistent
+pgsql.allow_persistent = On
+
+; Detect broken persistent links always with pg_pconnect().
+; Auto reset feature requires a little overheads.
+; http://php.net/pgsql.auto-reset-persistent
+pgsql.auto_reset_persistent = Off
+
+; Maximum number of persistent links.  -1 means no limit.
+; http://php.net/pgsql.max-persistent
+pgsql.max_persistent = -1
+
+; Maximum number of links (persistent+non persistent).  -1 means no limit.
+; http://php.net/pgsql.max-links
+pgsql.max_links = -1
+
+; Ignore PostgreSQL backends Notice message or not.
+; Notice message logging require a little overheads.
+; http://php.net/pgsql.ignore-notice
+pgsql.ignore_notice = 0
+
+; Log PostgreSQL backends Notice message or not.
+; Unless pgsql.ignore_notice=0, module cannot log notice message.
+; http://php.net/pgsql.log-notice
+pgsql.log_notice = 0
+
+[bcmath]
+; Number of decimal digits for all bcmath functions.
+; http://php.net/bcmath.scale
+bcmath.scale = 0
+
+[browscap]
+; http://php.net/browscap
+;browscap = extra/browscap.ini
+
+[Session]
+; Handler used to store/retrieve data.
+; http://php.net/session.save-handler
+session.save_handler = files
+
+; Argument passed to save_handler.  In the case of files, this is the path
+; where data files are stored. Note: Windows users have to change this
+; variable in order to use PHP's session functions.
+;
+; The path can be defined as:
+;
+;     session.save_path = "N;/path"
+;
+; where N is an integer.  Instead of storing all the session files in
+; /path, what this will do is use subdirectories N-levels deep, and
+; store the session data in those directories.  This is useful if
+; your OS has problems with many files in one directory, and is
+; a more efficient layout for servers that handle many sessions.
+;
+; NOTE 1: PHP will not create this directory structure automatically.
+;         You can use the script in the ext/session dir for that purpose.
+; NOTE 2: See the section on garbage collection below if you choose to
+;         use subdirectories for session storage
+;
+; The file storage module creates files using mode 600 by default.
+; You can change that by using
+;
+;     session.save_path = "N;MODE;/path"
+;
+; where MODE is the octal representation of the mode. Note that this
+; does not overwrite the process's umask.
+; http://php.net/session.save-path
+;session.save_path = "/tmp"
+
+; Whether to use strict session mode.
+; Strict session mode does not accept an uninitialized session ID, and
+; regenerates the session ID if the browser sends an uninitialized session ID.
+; Strict mode protects applications from session fixation via a session adoption
+; vulnerability. It is disabled by default for maximum compatibility, but
+; enabling it is encouraged.
+; https://wiki.php.net/rfc/strict_sessions
+session.use_strict_mode = 0
+
+; Whether to use cookies.
+; http://php.net/session.use-cookies
+session.use_cookies = 1
+
+; http://php.net/session.cookie-secure
+;session.cookie_secure =
+
+; This option forces PHP to fetch and use a cookie for storing and maintaining
+; the session id. We encourage this operation as it's very helpful in combating
+; session hijacking when not specifying and managing your own session id. It is
+; not the be-all and end-all of session hijacking defense, but it's a good start.
+; http://php.net/session.use-only-cookies
+session.use_only_cookies = 1
+
+; Name of the session (used as cookie name).
+; http://php.net/session.name
+session.name = PHPSESSID
+
+; Initialize session on request startup.
+; http://php.net/session.auto-start
+session.auto_start = 0
+
+; Lifetime in seconds of cookie or, if 0, until browser is restarted.
+; http://php.net/session.cookie-lifetime
+session.cookie_lifetime = 0
+
+; The path for which the cookie is valid.
+; http://php.net/session.cookie-path
+session.cookie_path = /
+
+; The domain for which the cookie is valid.
+; http://php.net/session.cookie-domain
+session.cookie_domain =
+
+; Whether or not to add the httpOnly flag to the cookie, which makes it
+; inaccessible to browser scripting languages such as JavaScript.
+; http://php.net/session.cookie-httponly
+session.cookie_httponly =
+
+; Add SameSite attribute to cookie to help mitigate Cross-Site Request Forgery (CSRF/XSRF)
+; Current valid values are "Strict", "Lax" or "None". When using "None",
+; make sure to include the quotes, as `none` is interpreted like `false` in ini files.
+; https://tools.ietf.org/html/draft-west-first-party-cookies-07
+session.cookie_samesite =
+
+; Handler used to serialize data. php is the standard serializer of PHP.
+; http://php.net/session.serialize-handler
+session.serialize_handler = php
+
+; Defines the probability that the 'garbage collection' process is started on every
+; session initialization. The probability is calculated by using gc_probability/gc_divisor,
+; e.g. 1/100 means there is a 1% chance that the GC process starts on each request.
+; Default Value: 1
+; Development Value: 1
+; Production Value: 1
+; http://php.net/session.gc-probability
+session.gc_probability = 1
+
+; Defines the probability that the 'garbage collection' process is started on every
+; session initialization. The probability is calculated by using gc_probability/gc_divisor,
+; e.g. 1/100 means there is a 1% chance that the GC process starts on each request.
+; For high volume production servers, using a value of 1000 is a more efficient approach.
+; Default Value: 100
+; Development Value: 1000
+; Production Value: 1000
+; http://php.net/session.gc-divisor
+session.gc_divisor = 1000
+
+; After this number of seconds, stored data will be seen as 'garbage' and
+; cleaned up by the garbage collection process.
+; http://php.net/session.gc-maxlifetime
+session.gc_maxlifetime = 1440
+
+; NOTE: If you are using the subdirectory option for storing session files
+;       (see session.save_path above), then garbage collection does *not*
+;       happen automatically.  You will need to do your own garbage
+;       collection through a shell script, cron entry, or some other method.
+;       For example, the following script is the equivalent of setting
+;       session.gc_maxlifetime to 1440 (1440 seconds = 24 minutes):
+;          find /path/to/sessions -cmin +24 -type f | xargs rm
+
+; Check HTTP Referer to invalidate externally stored URLs containing ids.
+; HTTP_REFERER has to contain this substring for the session to be
+; considered as valid.
+; http://php.net/session.referer-check
+session.referer_check =
+
+; Set to {nocache,private,public,} to determine HTTP caching aspects
+; or leave this empty to avoid sending anti-caching headers.
+; http://php.net/session.cache-limiter
+session.cache_limiter = nocache
+
+; Document expires after n minutes.
+; http://php.net/session.cache-expire
+session.cache_expire = 180
+
+; trans sid support is disabled by default.
+; Use of trans sid may risk your users' security.
+; Use this option with caution.
+; - User may send URL contains active session ID
+;   to other person via. email/irc/etc.
+; - URL that contains active session ID may be stored
+;   in publicly accessible computer.
+; - User may access your site with the same session ID
+;   always using URL stored in browser's history or bookmarks.
+; http://php.net/session.use-trans-sid
+session.use_trans_sid = 0
+
+; Set session ID character length. This value could be between 22 to 256.
+; Shorter length than default is supported only for compatibility reason.
+; Users should use 32 or more chars.
+; http://php.net/session.sid-length
+; Default Value: 32
+; Development Value: 26
+; Production Value: 26
+session.sid_length = 26
+
+; The URL rewriter will look for URLs in a defined set of HTML tags.
+; <form> is special; if you include them here, the rewriter will
+; add a hidden <input> field with the info which is otherwise appended
+; to URLs. <form> tag's action attribute URL will not be modified
+; unless it is specified.
+; Note that all valid entries require a "=", even if no value follows.
+; Default Value: "a=href,area=href,frame=src,form="
+; Development Value: "a=href,area=href,frame=src,form="
+; Production Value: "a=href,area=href,frame=src,form="
+; http://php.net/url-rewriter.tags
+session.trans_sid_tags = "a=href,area=href,frame=src,form="
+
+; URL rewriter does not rewrite absolute URLs by default.
+; To enable rewrites for absolute paths, target hosts must be specified
+; at RUNTIME. i.e. use ini_set()
+; <form> tags is special. PHP will check action attribute's URL regardless
+; of session.trans_sid_tags setting.
+; If no host is defined, HTTP_HOST will be used for allowed host.
+; Example value: php.net,www.php.net,wiki.php.net
+; Use "," for multiple hosts. No spaces are allowed.
+; Default Value: ""
+; Development Value: ""
+; Production Value: ""
+;session.trans_sid_hosts=""
+
+; Define how many bits are stored in each character when converting
+; the binary hash data to something readable.
+; Possible values:
+;   4  (4 bits: 0-9, a-f)
+;   5  (5 bits: 0-9, a-v)
+;   6  (6 bits: 0-9, a-z, A-Z, "-", ",")
+; Default Value: 4
+; Development Value: 5
+; Production Value: 5
+; http://php.net/session.hash-bits-per-character
+session.sid_bits_per_character = 5
+
+; Enable upload progress tracking in $_SESSION
+; Default Value: On
+; Development Value: On
+; Production Value: On
+; http://php.net/session.upload-progress.enabled
+;session.upload_progress.enabled = On
+
+; Cleanup the progress information as soon as all POST data has been read
+; (i.e. upload completed).
+; Default Value: On
+; Development Value: On
+; Production Value: On
+; http://php.net/session.upload-progress.cleanup
+;session.upload_progress.cleanup = On
+
+; A prefix used for the upload progress key in $_SESSION
+; Default Value: "upload_progress_"
+; Development Value: "upload_progress_"
+; Production Value: "upload_progress_"
+; http://php.net/session.upload-progress.prefix
+;session.upload_progress.prefix = "upload_progress_"
+
+; The index name (concatenated with the prefix) in $_SESSION
+; containing the upload progress information
+; Default Value: "PHP_SESSION_UPLOAD_PROGRESS"
+; Development Value: "PHP_SESSION_UPLOAD_PROGRESS"
+; Production Value: "PHP_SESSION_UPLOAD_PROGRESS"
+; http://php.net/session.upload-progress.name
+;session.upload_progress.name = "PHP_SESSION_UPLOAD_PROGRESS"
+
+; How frequently the upload progress should be updated.
+; Given either in percentages (per-file), or in bytes
+; Default Value: "1%"
+; Development Value: "1%"
+; Production Value: "1%"
+; http://php.net/session.upload-progress.freq
+;session.upload_progress.freq =  "1%"
+
+; The minimum delay between updates, in seconds
+; Default Value: 1
+; Development Value: 1
+; Production Value: 1
+; http://php.net/session.upload-progress.min-freq
+;session.upload_progress.min_freq = "1"
+
+; Only write session data when session data is changed. Enabled by default.
+; http://php.net/session.lazy-write
+;session.lazy_write = On
+
+[Assertion]
+; Switch whether to compile assertions at all (to have no overhead at run-time)
+; -1: Do not compile at all
+;  0: Jump over assertion at run-time
+;  1: Execute assertions
+; Changing from or to a negative value is only possible in php.ini! (For turning assertions on and off at run-time, see assert.active, when zend.assertions = 1)
+; Default Value: 1
+; Development Value: 1
+; Production Value: -1
+; http://php.net/zend.assertions
+zend.assertions = -1
+
+; Assert(expr); active by default.
+; http://php.net/assert.active
+;assert.active = On
+
+; Throw an AssertionError on failed assertions
+; http://php.net/assert.exception
+;assert.exception = On
+
+; Issue a PHP warning for each failed assertion. (Overridden by assert.exception if active)
+; http://php.net/assert.warning
+;assert.warning = On
+
+; Don't bail out by default.
+; http://php.net/assert.bail
+;assert.bail = Off
+
+; User-function to be called if an assertion fails.
+; http://php.net/assert.callback
+;assert.callback = 0
+
+; Eval the expression with current error_reporting().  Set to true if you want
+; error_reporting(0) around the eval().
+; http://php.net/assert.quiet-eval
+;assert.quiet_eval = 0
+
+[COM]
+; path to a file containing GUIDs, IIDs or filenames of files with TypeLibs
+; http://php.net/com.typelib-file
+;com.typelib_file =
+
+; allow Distributed-COM calls
+; http://php.net/com.allow-dcom
+;com.allow_dcom = true
+
+; autoregister constants of a component's typlib on com_load()
+; http://php.net/com.autoregister-typelib
+;com.autoregister_typelib = true
+
+; register constants casesensitive
+; http://php.net/com.autoregister-casesensitive
+;com.autoregister_casesensitive = false
+
+; show warnings on duplicate constant registrations
+; http://php.net/com.autoregister-verbose
+;com.autoregister_verbose = true
+
+; The default character set code-page to use when passing strings to and from COM objects.
+; Default: system ANSI code page
+;com.code_page=
+
+[mbstring]
+; language for internal character representation.
+; This affects mb_send_mail() and mbstring.detect_order.
+; http://php.net/mbstring.language
+;mbstring.language = Japanese
+
+; Use of this INI entry is deprecated, use global internal_encoding instead.
+; internal/script encoding.
+; Some encoding cannot work as internal encoding. (e.g. SJIS, BIG5, ISO-2022-*)
+; If empty, default_charset or internal_encoding or iconv.internal_encoding is used.
+; The precedence is: default_charset < internal_encoding < iconv.internal_encoding
+;mbstring.internal_encoding =
+
+; Use of this INI entry is deprecated, use global input_encoding instead.
+; http input encoding.
+; mbstring.encoding_translation = On is needed to use this setting.
+; If empty, default_charset or input_encoding or mbstring.input is used.
+; The precedence is: default_charset < input_encoding < mbsting.http_input
+; http://php.net/mbstring.http-input
+;mbstring.http_input =
+
+; Use of this INI entry is deprecated, use global output_encoding instead.
+; http output encoding.
+; mb_output_handler must be registered as output buffer to function.
+; If empty, default_charset or output_encoding or mbstring.http_output is used.
+; The precedence is: default_charset < output_encoding < mbstring.http_output
+; To use an output encoding conversion, mbstring's output handler must be set
+; otherwise output encoding conversion cannot be performed.
+; http://php.net/mbstring.http-output
+;mbstring.http_output =
+
+; enable automatic encoding translation according to
+; mbstring.internal_encoding setting. Input chars are
+; converted to internal encoding by setting this to On.
+; Note: Do _not_ use automatic encoding translation for
+;       portable libs/applications.
+; http://php.net/mbstring.encoding-translation
+;mbstring.encoding_translation = Off
+
+; automatic encoding detection order.
+; "auto" detect order is changed according to mbstring.language
+; http://php.net/mbstring.detect-order
+;mbstring.detect_order = auto
+
+; substitute_character used when character cannot be converted
+; one from another
+; http://php.net/mbstring.substitute-character
+;mbstring.substitute_character = none
+
+; overload(replace) single byte functions by mbstring functions.
+; mail(), ereg(), etc are overloaded by mb_send_mail(), mb_ereg(),
+; etc. Possible values are 0,1,2,4 or combination of them.
+; For example, 7 for overload everything.
+; 0: No overload
+; 1: Overload mail() function
+; 2: Overload str*() functions
+; 4: Overload ereg*() functions
+; http://php.net/mbstring.func-overload
+;mbstring.func_overload = 0
+
+; enable strict encoding detection.
+; Default: Off
+;mbstring.strict_detection = On
+
+; This directive specifies the regex pattern of content types for which mb_output_handler()
+; is activated.
+; Default: mbstring.http_output_conv_mimetype=^(text/|application/xhtml\+xml)
+;mbstring.http_output_conv_mimetype=
+
+; This directive specifies maximum stack depth for mbstring regular expressions. It is similar
+; to the pcre.recursion_limit for PCRE. 
+; Default: 100000
+;mbstring.regex_stack_limit=100000
+
+[gd]
+; Tell the jpeg decode to ignore warnings and try to create
+; a gd image. The warning will then be displayed as notices
+; disabled by default
+; http://php.net/gd.jpeg-ignore-warning
+;gd.jpeg_ignore_warning = 1
+
+[exif]
+; Exif UNICODE user comments are handled as UCS-2BE/UCS-2LE and JIS as JIS.
+; With mbstring support this will automatically be converted into the encoding
+; given by corresponding encode setting. When empty mbstring.internal_encoding
+; is used. For the decode settings you can distinguish between motorola and
+; intel byte order. A decode setting cannot be empty.
+; http://php.net/exif.encode-unicode
+;exif.encode_unicode = ISO-8859-15
+
+; http://php.net/exif.decode-unicode-motorola
+;exif.decode_unicode_motorola = UCS-2BE
+
+; http://php.net/exif.decode-unicode-intel
+;exif.decode_unicode_intel    = UCS-2LE
+
+; http://php.net/exif.encode-jis
+;exif.encode_jis =
+
+; http://php.net/exif.decode-jis-motorola
+;exif.decode_jis_motorola = JIS
+
+; http://php.net/exif.decode-jis-intel
+;exif.decode_jis_intel    = JIS
+
+[Tidy]
+; The path to a default tidy configuration file to use when using tidy
+; http://php.net/tidy.default-config
+;tidy.default_config = /usr/local/lib/php/default.tcfg
+
+; Should tidy clean and repair output automatically?
+; WARNING: Do not use this option if you are generating non-html content
+; such as dynamic images
+; http://php.net/tidy.clean-output
+tidy.clean_output = Off
+
+[soap]
+; Enables or disables WSDL caching feature.
+; http://php.net/soap.wsdl-cache-enabled
+soap.wsdl_cache_enabled=1
+
+; Sets the directory name where SOAP extension will put cache files.
+; http://php.net/soap.wsdl-cache-dir
+soap.wsdl_cache_dir="/tmp"
+
+; (time to live) Sets the number of second while cached file will be used
+; instead of original one.
+; http://php.net/soap.wsdl-cache-ttl
+soap.wsdl_cache_ttl=86400
+
+; Sets the size of the cache limit. (Max. number of WSDL files to cache)
+soap.wsdl_cache_limit = 5
+
+[sysvshm]
+; A default size of the shared memory segment
+;sysvshm.init_mem = 10000
+
+[ldap]
+; Sets the maximum number of open links or -1 for unlimited.
+ldap.max_links = -1
+
+[dba]
+;dba.default_handler=
+
+[opcache]
+; Determines if Zend OPCache is enabled
+;opcache.enable=1
+
+; Determines if Zend OPCache is enabled for the CLI version of PHP
+;opcache.enable_cli=0
+
+; The OPcache shared memory storage size.
+;opcache.memory_consumption=128
+
+; The amount of memory for interned strings in Mbytes.
+;opcache.interned_strings_buffer=8
+
+; The maximum number of keys (scripts) in the OPcache hash table.
+; Only numbers between 200 and 1000000 are allowed.
+;opcache.max_accelerated_files=10000
+
+; The maximum percentage of "wasted" memory until a restart is scheduled.
+;opcache.max_wasted_percentage=5
+
+; When this directive is enabled, the OPcache appends the current working
+; directory to the script key, thus eliminating possible collisions between
+; files with the same name (basename). Disabling the directive improves
+; performance, but may break existing applications.
+;opcache.use_cwd=1
+
+; When disabled, you must reset the OPcache manually or restart the
+; webserver for changes to the filesystem to take effect.
+;opcache.validate_timestamps=1
+
+; How often (in seconds) to check file timestamps for changes to the shared
+; memory storage allocation. ("1" means validate once per second, but only
+; once per request. "0" means always validate)
+;opcache.revalidate_freq=2
+
+; Enables or disables file search in include_path optimization
+;opcache.revalidate_path=0
+
+; If disabled, all PHPDoc comments are dropped from the code to reduce the
+; size of the optimized code.
+;opcache.save_comments=1
+
+; Allow file existence override (file_exists, etc.) performance feature.
+;opcache.enable_file_override=0
+
+; A bitmask, where each bit enables or disables the appropriate OPcache
+; passes
+;opcache.optimization_level=0x7FFFBFFF
+
+;opcache.dups_fix=0
+
+; The location of the OPcache blacklist file (wildcards allowed).
+; Each OPcache blacklist file is a text file that holds the names of files
+; that should not be accelerated. The file format is to add each filename
+; to a new line. The filename may be a full path or just a file prefix
+; (i.e., /var/www/x  blacklists all the files and directories in /var/www
+; that start with 'x'). Line starting with a ; are ignored (comments).
+;opcache.blacklist_filename=
+
+; Allows exclusion of large files from being cached. By default all files
+; are cached.
+;opcache.max_file_size=0
+
+; Check the cache checksum each N requests.
+; The default value of "0" means that the checks are disabled.
+;opcache.consistency_checks=0
+
+; How long to wait (in seconds) for a scheduled restart to begin if the cache
+; is not being accessed.
+;opcache.force_restart_timeout=180
+
+; OPcache error_log file name. Empty string assumes "stderr".
+;opcache.error_log=
+
+; All OPcache errors go to the Web server log.
+; By default, only fatal errors (level 0) or errors (level 1) are logged.
+; You can also enable warnings (level 2), info messages (level 3) or
+; debug messages (level 4).
+;opcache.log_verbosity_level=1
+
+; Preferred Shared Memory back-end. Leave empty and let the system decide.
+;opcache.preferred_memory_model=
+
+; Protect the shared memory from unexpected writing during script execution.
+; Useful for internal debugging only.
+;opcache.protect_memory=0
+
+; Allows calling OPcache API functions only from PHP scripts which path is
+; started from specified string. The default "" means no restriction
+;opcache.restrict_api=
+
+; Mapping base of shared memory segments (for Windows only). All the PHP
+; processes have to map shared memory into the same address space. This
+; directive allows to manually fix the "Unable to reattach to base address"
+; errors.
+;opcache.mmap_base=
+
+; Enables and sets the second level cache directory.
+; It should improve performance when SHM memory is full, at server restart or
+; SHM reset. The default "" disables file based caching.
+;opcache.file_cache=
+
+; Enables or disables opcode caching in shared memory.
+;opcache.file_cache_only=0
+
+; Enables or disables checksum validation when script loaded from file cache.
+;opcache.file_cache_consistency_checks=1
+
+; Implies opcache.file_cache_only=1 for a certain process that failed to
+; reattach to the shared memory (for Windows only). Explicitly enabled file
+; cache is required.
+;opcache.file_cache_fallback=1
+
+; Enables or disables copying of PHP code (text segment) into HUGE PAGES.
+; This should improve performance, but requires appropriate OS configuration.
+;opcache.huge_code_pages=1
+
+; Validate cached file permissions.
+;opcache.validate_permission=0
+
+; Prevent name collisions in chroot'ed environment.
+;opcache.validate_root=0
+
+; If specified, it produces opcode dumps for debugging different stages of
+; optimizations.
+;opcache.opt_debug_level=0
+
+[curl]
+; A default value for the CURLOPT_CAINFO option. This is required to be an
+; absolute path.
+;curl.cainfo =
+
+[openssl]
+; The location of a Certificate Authority (CA) file on the local filesystem
+; to use when verifying the identity of SSL/TLS peers. Most users should
+; not specify a value for this directive as PHP will attempt to use the
+; OS-managed cert stores in its absence. If specified, this value may still
+; be overridden on a per-stream basis via the "cafile" SSL stream context
+; option.
+;openssl.cafile=
+
+; If openssl.cafile is not specified or if the CA file is not found, the
+; directory pointed to by openssl.capath is searched for a suitable
+; certificate. This value must be a correctly hashed certificate directory.
+; Most users should not specify a value for this directive as PHP will
+; attempt to use the OS-managed cert stores in its absence. If specified,
+; this value may still be overridden on a per-stream basis via the "capath"
+; SSL stream context option.
+;openssl.capath=
+
+; Local Variables:
+; tab-width: 4
+; End:
diff --git a/src/php7.4/Dockerfile b/src/php7.4/Dockerfile
index 664336e..f434c20 100644
--- a/src/php7.4/Dockerfile
+++ b/src/php7.4/Dockerfile
@@ -32,15 +32,7 @@ RUN apk update && \
     rm -rf /var/cache/apk/*
 
 ## Install dependencies
-RUN apk add --no-cache --virtual build-dependencies \
-    gcc \
-    g++ \
-    make \
-    autoconf \
-    pkgconf \
-    imagemagick \
-    imagemagick-libs \
-    imagemagick-dev && \
+RUN apk add --no-cache --virtual build-dependencies gcc g++ make autoconf libffi-dev libc-dev libressl-dev curl-dev bzip2-dev libzip-dev libsodium libsodium-dev postgresql-dev libjpeg-turbo freetype freetype-dev libpng libpng-dev icu icu-dev oniguruma-dev gettext-dev libxml2-dev libedit-dev libxslt-dev imap-dev krb5-dev tidyhtml-dev libmemcached-libs imagemagick imagemagick-libs imagemagick-dev libjpeg-turbo-dev && \
     rm -rf /var/cache/apk/*
 
 # Setting app user, timezone and permissions
@@ -55,7 +47,11 @@ COPY resources/.bashrc ${SINDRIA_USER_HOME}
 WORKDIR /var/www/app
 
 # Install php extensions
-RUN apk add \
+RUN docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/include/ || docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ && \
+    docker-php-ext-configure imap --with-kerberos --with-imap-ssl && \
+    docker-php-ext-install calendar ctype curl exif fileinfo ftp gd gettext iconv intl json mbstring mysqli pdo phar posix readline shmop sockets sysvmsg sysvshm xml zip xsl bcmath imap soap pgsql pdo_pgsql pdo_mysql pcntl tidy sodium && \
+    docker-php-ext-enable imagick redis opcache imap zip && \
+    apk add \
     php7-calendar \
     php7-ctype \
     php7-curl \
diff --git a/src/php7.4/resources/php/00_openssl.ini b/src/php7.4/resources/php/conf.d/00_openssl.ini
similarity index 100%
rename from src/php7.4/resources/php/00_openssl.ini
rename to src/php7.4/resources/php/conf.d/00_openssl.ini
diff --git a/src/php7.4/resources/php/00_session.ini b/src/php7.4/resources/php/conf.d/00_session.ini
similarity index 100%
rename from src/php7.4/resources/php/00_session.ini
rename to src/php7.4/resources/php/conf.d/00_session.ini
diff --git a/src/php7.4/resources/php/00_tokenizer.ini b/src/php7.4/resources/php/conf.d/00_tokenizer.ini
similarity index 100%
rename from src/php7.4/resources/php/00_tokenizer.ini
rename to src/php7.4/resources/php/conf.d/00_tokenizer.ini
diff --git a/src/php8/Dockerfile b/src/php8/Dockerfile
index 6330bd8..68f416f 100644
--- a/src/php8/Dockerfile
+++ b/src/php8/Dockerfile
@@ -32,15 +32,7 @@ RUN apk update && \
     rm -rf /var/cache/apk/*
 
 ## Install dependencies
-RUN apk add --no-cache --virtual build-dependencies \
-    gcc \
-    g++ \
-    make \
-    autoconf \
-    pkgconf \
-    imagemagick \
-    imagemagick-libs \
-    imagemagick-dev && \
+RUN apk add --no-cache --virtual build-dependencies gcc g++ make autoconf libffi-dev libc-dev libressl-dev curl-dev bzip2-dev libzip-dev libsodium libsodium-dev postgresql-dev libjpeg-turbo freetype freetype-dev libpng libpng-dev icu icu-dev oniguruma-dev gettext-dev libxml2-dev libedit-dev libxslt-dev imap-dev krb5-dev tidyhtml-dev libmemcached-libs imagemagick imagemagick-libs imagemagick-dev libjpeg-turbo-dev && \
     rm -rf /var/cache/apk/*
 
 # Setting app user, timezone and permissions
@@ -55,7 +47,11 @@ COPY resources/.bashrc ${SINDRIA_USER_HOME}
 WORKDIR /var/www/app
 
 # Install php extensions
-RUN apk add \
+RUN docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/include/ || docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ && \
+    docker-php-ext-configure imap --with-kerberos --with-imap-ssl && \
+    docker-php-ext-install calendar ctype curl exif fileinfo ftp gd gettext iconv intl json mbstring mysqli pdo phar posix readline shmop sockets sysvmsg sysvshm xml zip xsl bcmath imap soap pgsql pdo_pgsql pdo_mysql pcntl tidy sodium && \
+    docker-php-ext-enable imagick redis opcache imap zip && \
+    apk add \
     php${PHP_VERSION}-calendar \
     php${PHP_VERSION}-ctype \
     php${PHP_VERSION}-curl \
diff --git a/src/php8/resources/php/00_openssl.ini b/src/php8/resources/php/conf.d/00_openssl.ini
similarity index 100%
rename from src/php8/resources/php/00_openssl.ini
rename to src/php8/resources/php/conf.d/00_openssl.ini
diff --git a/src/php8/resources/php/00_session.ini b/src/php8/resources/php/conf.d/00_session.ini
similarity index 100%
rename from src/php8/resources/php/00_session.ini
rename to src/php8/resources/php/conf.d/00_session.ini
diff --git a/src/php8/resources/php/00_tokenizer.ini b/src/php8/resources/php/conf.d/00_tokenizer.ini
similarity index 100%
rename from src/php8/resources/php/00_tokenizer.ini
rename to src/php8/resources/php/conf.d/00_tokenizer.ini

commit 8f8970f031529cae2133d42f059ecaca7a7a8616
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Fri Sep 10 14:47:58 2021 +0200

    Fix 7.1 7.2

diff --git a/src/php7.1/Dockerfile b/src/php7.1/Dockerfile
index 78f4ff4..9af1f73 100644
--- a/src/php7.1/Dockerfile
+++ b/src/php7.1/Dockerfile
@@ -1,4 +1,4 @@
-FROM php:7.1-alpine
+FROM php:7.1-alpine3.7
 
 ARG TAG_SUFFIX
 ARG TAG_VERSION
diff --git a/src/php7.2/Dockerfile b/src/php7.2/Dockerfile
index c2d88d1..86bbb17 100644
--- a/src/php7.2/Dockerfile
+++ b/src/php7.2/Dockerfile
@@ -1,4 +1,4 @@
-FROM php:7.2-alpine3.7
+FROM php:7.2-alpine3.9
 
 ARG TAG_SUFFIX
 ARG TAG_VERSION

commit 53fd479a1049bfa4fc79a70c549a6630757eba6a
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Fri Sep 10 14:41:27 2021 +0200

    Fix 7.2

diff --git a/src/php7.2/Dockerfile b/src/php7.2/Dockerfile
index eeb9d1e..c2d88d1 100644
--- a/src/php7.2/Dockerfile
+++ b/src/php7.2/Dockerfile
@@ -1,4 +1,4 @@
-FROM php:7.2-alpine3.11
+FROM php:7.2-alpine3.7
 
 ARG TAG_SUFFIX
 ARG TAG_VERSION

commit fb468ca1a8d18e2829be7bcc8eedb9426f8a4f35
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Fri Sep 10 14:21:27 2021 +0200

    Fix 7.2

diff --git a/src/php7.2/Dockerfile b/src/php7.2/Dockerfile
index c685095..eeb9d1e 100644
--- a/src/php7.2/Dockerfile
+++ b/src/php7.2/Dockerfile
@@ -1,4 +1,4 @@
-FROM php:7.2-alpine
+FROM php:7.2-alpine3.11
 
 ARG TAG_SUFFIX
 ARG TAG_VERSION

commit fd3319b54ed365c66cff5cbabb7bce2434c9ef90
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Fri Sep 10 13:50:45 2021 +0200

    Fix 7.3

diff --git a/src/php7.3/Dockerfile b/src/php7.3/Dockerfile
index e9b2df0..1c75478 100644
--- a/src/php7.3/Dockerfile
+++ b/src/php7.3/Dockerfile
@@ -1,4 +1,4 @@
-FROM php:7.3-alpine
+FROM php:7.3-alpine3.12
 
 ARG TAG_SUFFIX
 ARG TAG_VERSION

commit fb88dd395f91840b45ae08149ecc2d1fa3cf94ad
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Fri Sep 10 13:17:02 2021 +0200

    Fix

diff --git a/build_all.sh b/build_all.sh
index ef0df7b..b47acab 100644
--- a/build_all.sh
+++ b/build_all.sh
@@ -13,7 +13,7 @@ fi
 IMAGE_NAME=$1
 TAG_VERSION=$2
 
-for PHP_VERSION in 7.0 7.1 7.2 7.4 8
+for PHP_VERSION in 7.0 7.1 7.2 7.3 7.4 8
 do
 	bash build.sh ${IMAGE_NAME} ${TAG_VERSION} ${PHP_VERSION}
   docker push ${IMAGE_NAME}:${TAG_VERSION}-${PHP_VERSION}

commit dc6868f6d8d5fb07fe5e4e5047f6d371a4beaa8a
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Fri Sep 10 13:13:05 2021 +0200

    Fix

diff --git a/src/Dockerfile b/src/Dockerfile
index 5b82266..55ec5d3 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -1,7 +1,8 @@
 ARG TAG_SUFFIX
-FROM sindriainc/php:1.0.0-${TAG_SUFFIX}
+FROM sindriainc/php:1.0.1-${TAG_SUFFIX}
 
 ARG TAG_VERSION
+ARG TAG_SUFFIX
 ARG HOST_USER_UID
 ARG TIMEZONE
 
@@ -54,4 +55,4 @@ RUN curl -sS https://getcomposer.org/installer -o /tmp/composer-setup.php && \
     chmod +x /usr/local/bin/phpcs && \
     chmod +x /usr/local/bin/phpcbf
 
-#USER ${SINDRIA_USER}
+#USER ${SINDRIA_USER}
\ No newline at end of file

commit 560a828945783e8282a9e47ccef9d41bf0e674e4
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Fri Sep 10 13:09:46 2021 +0200

    Removed swoole from 7.0 and 7.1

diff --git a/src/php7.0/Dockerfile b/src/php7.0/Dockerfile
index 5d49fd3..3a60892 100644
--- a/src/php7.0/Dockerfile
+++ b/src/php7.0/Dockerfile
@@ -92,8 +92,6 @@ RUN apk add \
     php7-tidy && \
     #pecl install pdo_dblib && \
     pecl install imagick redis && \
-    pecl install swoole && \
-    docker-php-ext-enable swoole && \
     docker-php-ext-enable \
     imagick \
     redis && \
diff --git a/src/php7.1/Dockerfile b/src/php7.1/Dockerfile
index 61e8615..78f4ff4 100644
--- a/src/php7.1/Dockerfile
+++ b/src/php7.1/Dockerfile
@@ -92,8 +92,6 @@ RUN apk add \
     php7-tidy && \
     #pecl install pdo_dblib && \
     pecl install imagick redis && \
-    pecl install swoole && \
-    docker-php-ext-enable swoole && \
     docker-php-ext-enable \
     imagick \
     redis && \

commit d3830c8fbbd1849e9a119ad596318ebb752218f2
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Fri Sep 10 13:03:40 2021 +0200

    Added php 7.2 7.1 7.0

diff --git a/src/php7.0/Dockerfile b/src/php7.0/Dockerfile
new file mode 100644
index 0000000..5d49fd3
--- /dev/null
+++ b/src/php7.0/Dockerfile
@@ -0,0 +1,109 @@
+FROM php:7.0-alpine
+
+ARG TAG_SUFFIX
+ARG TAG_VERSION
+ARG HOST_USER_UID
+ARG TIMEZONE
+
+LABEL \
+	name="php" \
+	image="sindriainc/php" \
+	tag="${TAG_VERSION}-${TAG_SUFFIX}" \
+	vendor="sindria"
+
+ENV PATH "/root/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/home/sindria/.local/bin"
+ENV TZ=${TIMEZONE}
+ENV SINDRIA_USER="sindria"
+ENV SINDRIA_USER_HOME="/home/sindria"
+ENV PHP_VERSION=${TAG_SUFFIX}
+
+# Update and install packages
+RUN apk update && \
+    apk add \
+    shadow \
+    bash \
+    curl \
+    wget \
+    git \
+    rsync \
+    openssl \
+    ca-certificates \
+    tzdata && \
+    rm -rf /var/cache/apk/*
+
+## Install dependencies
+RUN apk add --no-cache --virtual build-dependencies \
+    gcc \
+    g++ \
+    make \
+    autoconf \
+    pkgconf \
+    imagemagick \
+    imagemagick-libs \
+    imagemagick-dev && \
+    rm -rf /var/cache/apk/*
+
+# Setting app user, timezone and permissions
+RUN addgroup -S ${SINDRIA_USER} -g ${HOST_USER_UID} && adduser -s /bin/bash -S ${SINDRIA_USER} -u ${HOST_USER_UID} -G ${SINDRIA_USER} -h ${SINDRIA_USER_HOME} && \
+    mkdir -p /var/www && \
+    mkdir -p /var/www/app && \
+    ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone && \
+    chmod -R 770 /var/www/app && \
+    chown -R ${SINDRIA_USER}:${SINDRIA_USER} /var/www/app
+COPY resources/.bashrc ${SINDRIA_USER_HOME}
+
+WORKDIR /var/www/app
+
+# Install php extensions
+RUN apk add \
+    php7-calendar \
+    php7-ctype \
+    php7-curl \
+    php7-exif \
+    php7-fileinfo \
+    php7-ftp \
+    php7-gd \
+    php7-gettext \
+    php7-iconv \
+    php7-intl \
+    php7-json \
+    php7-mbstring \
+    php7-mysqli \
+    php7-pdo \
+    php7-phar \
+    php7-posix \
+    #php7-readline \
+    php7-shmop \
+    php7-sockets \
+    php7-sysvmsg \
+    php7-tokenizer \
+    php7-session \
+    php7-openssl \
+    php7-xml \
+    php7-zip \
+    php7-xsl \
+    php7-bcmath \
+    php7-imap \
+    php7-pgsql \
+    php7-pdo_pgsql \
+    php7-pdo_mysql \
+    php7-pdo_dblib \
+    php7-pcntl \
+    php7-tidy && \
+    #pecl install pdo_dblib && \
+    pecl install imagick redis && \
+    pecl install swoole && \
+    docker-php-ext-enable swoole && \
+    docker-php-ext-enable \
+    imagick \
+    redis && \
+    apk del build-dependencies && \
+    rm -rf /var/cache/apk/*
+
+SHELL ["/bin/bash", "-c"]
+
+# Add and setup entrypoint
+COPY resources/bin/entrypoint.sh /usr/local/bin/entrypoint.sh
+ENTRYPOINT ["/bin/bash", "entrypoint.sh"]
+
+#USER ${SINDRIA_USER}
\ No newline at end of file
diff --git a/src/php7.0/resources/.bashrc b/src/php7.0/resources/.bashrc
new file mode 100644
index 0000000..25c901f
--- /dev/null
+++ b/src/php7.0/resources/.bashrc
@@ -0,0 +1,2 @@
+
+export PATH=/root/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/home/sindria/.local/bin
\ No newline at end of file
diff --git a/src/php7.0/resources/bin/entrypoint.sh b/src/php7.0/resources/bin/entrypoint.sh
new file mode 100644
index 0000000..7cadc1b
--- /dev/null
+++ b/src/php7.0/resources/bin/entrypoint.sh
@@ -0,0 +1,22 @@
+#!/usr/bin/env bash
+
+CONTAINER_GATEWAY=`/sbin/ip route|awk '/default/ { print $3 }'`
+
+# Adding host machine hostname
+echo -e "\n# Hostname for gateway" >> /etc/hosts
+echo -e "${CONTAINER_GATEWAY}\tdocker.host.internal\n" >> /etc/hosts
+
+# Override xdebug ide key
+if [ "${PHP_XDEBUG_IDE_KEY}" != "PHPSTORM" ]; then
+    sed -i -E "s|PHPSTORM|${PHP_XDEBUG_IDE_KEY}|g" /usr/local/etc/php/conf.d/xdebug.ini
+fi
+
+# Override timezone by env
+if [ "$TZ" != "" ] || [ "$TZ" != "Europe/Rome" ]; then
+    ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
+fi
+
+# Override host user uid by env
+if [ "$HOST_USER_UID" != "1000" ]; then
+    usermod -u $HOST_USER_UID sindria && groupmod sindria -g $HOST_USER_UID
+fi
\ No newline at end of file
diff --git a/src/php7.0/resources/php/00_openssl.ini b/src/php7.0/resources/php/00_openssl.ini
new file mode 100644
index 0000000..cb58b9c
--- /dev/null
+++ b/src/php7.0/resources/php/00_openssl.ini
@@ -0,0 +1 @@
+extension=openssl.so
\ No newline at end of file
diff --git a/src/php7.0/resources/php/00_session.ini b/src/php7.0/resources/php/00_session.ini
new file mode 100644
index 0000000..4627f6a
--- /dev/null
+++ b/src/php7.0/resources/php/00_session.ini
@@ -0,0 +1 @@
+extension=session.so
\ No newline at end of file
diff --git a/src/php7.0/resources/php/00_tokenizer.ini b/src/php7.0/resources/php/00_tokenizer.ini
new file mode 100644
index 0000000..877127e
--- /dev/null
+++ b/src/php7.0/resources/php/00_tokenizer.ini
@@ -0,0 +1 @@
+extension=tokenizer.so
\ No newline at end of file
diff --git a/src/php7.1/Dockerfile b/src/php7.1/Dockerfile
new file mode 100644
index 0000000..61e8615
--- /dev/null
+++ b/src/php7.1/Dockerfile
@@ -0,0 +1,109 @@
+FROM php:7.1-alpine
+
+ARG TAG_SUFFIX
+ARG TAG_VERSION
+ARG HOST_USER_UID
+ARG TIMEZONE
+
+LABEL \
+	name="php" \
+	image="sindriainc/php" \
+	tag="${TAG_VERSION}-${TAG_SUFFIX}" \
+	vendor="sindria"
+
+ENV PATH "/root/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/home/sindria/.local/bin"
+ENV TZ=${TIMEZONE}
+ENV SINDRIA_USER="sindria"
+ENV SINDRIA_USER_HOME="/home/sindria"
+ENV PHP_VERSION=${TAG_SUFFIX}
+
+# Update and install packages
+RUN apk update && \
+    apk add \
+    shadow \
+    bash \
+    curl \
+    wget \
+    git \
+    rsync \
+    openssl \
+    ca-certificates \
+    tzdata && \
+    rm -rf /var/cache/apk/*
+
+## Install dependencies
+RUN apk add --no-cache --virtual build-dependencies \
+    gcc \
+    g++ \
+    make \
+    autoconf \
+    pkgconf \
+    imagemagick \
+    imagemagick-libs \
+    imagemagick-dev && \
+    rm -rf /var/cache/apk/*
+
+# Setting app user, timezone and permissions
+RUN addgroup -S ${SINDRIA_USER} -g ${HOST_USER_UID} && adduser -s /bin/bash -S ${SINDRIA_USER} -u ${HOST_USER_UID} -G ${SINDRIA_USER} -h ${SINDRIA_USER_HOME} && \
+    mkdir -p /var/www && \
+    mkdir -p /var/www/app && \
+    ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone && \
+    chmod -R 770 /var/www/app && \
+    chown -R ${SINDRIA_USER}:${SINDRIA_USER} /var/www/app
+COPY resources/.bashrc ${SINDRIA_USER_HOME}
+
+WORKDIR /var/www/app
+
+# Install php extensions
+RUN apk add \
+    php7-calendar \
+    php7-ctype \
+    php7-curl \
+    php7-exif \
+    php7-fileinfo \
+    php7-ftp \
+    php7-gd \
+    php7-gettext \
+    php7-iconv \
+    php7-intl \
+    php7-json \
+    php7-mbstring \
+    php7-mysqli \
+    php7-pdo \
+    php7-phar \
+    php7-posix \
+    #php7-readline \
+    php7-shmop \
+    php7-sockets \
+    php7-sysvmsg \
+    php7-tokenizer \
+    php7-session \
+    php7-openssl \
+    php7-xml \
+    php7-zip \
+    php7-xsl \
+    php7-bcmath \
+    php7-imap \
+    php7-pgsql \
+    php7-pdo_pgsql \
+    php7-pdo_mysql \
+    php7-pdo_dblib \
+    php7-pcntl \
+    php7-tidy && \
+    #pecl install pdo_dblib && \
+    pecl install imagick redis && \
+    pecl install swoole && \
+    docker-php-ext-enable swoole && \
+    docker-php-ext-enable \
+    imagick \
+    redis && \
+    apk del build-dependencies && \
+    rm -rf /var/cache/apk/*
+
+SHELL ["/bin/bash", "-c"]
+
+# Add and setup entrypoint
+COPY resources/bin/entrypoint.sh /usr/local/bin/entrypoint.sh
+ENTRYPOINT ["/bin/bash", "entrypoint.sh"]
+
+#USER ${SINDRIA_USER}
\ No newline at end of file
diff --git a/src/php7.1/resources/.bashrc b/src/php7.1/resources/.bashrc
new file mode 100644
index 0000000..25c901f
--- /dev/null
+++ b/src/php7.1/resources/.bashrc
@@ -0,0 +1,2 @@
+
+export PATH=/root/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/home/sindria/.local/bin
\ No newline at end of file
diff --git a/src/php7.1/resources/bin/entrypoint.sh b/src/php7.1/resources/bin/entrypoint.sh
new file mode 100644
index 0000000..7cadc1b
--- /dev/null
+++ b/src/php7.1/resources/bin/entrypoint.sh
@@ -0,0 +1,22 @@
+#!/usr/bin/env bash
+
+CONTAINER_GATEWAY=`/sbin/ip route|awk '/default/ { print $3 }'`
+
+# Adding host machine hostname
+echo -e "\n# Hostname for gateway" >> /etc/hosts
+echo -e "${CONTAINER_GATEWAY}\tdocker.host.internal\n" >> /etc/hosts
+
+# Override xdebug ide key
+if [ "${PHP_XDEBUG_IDE_KEY}" != "PHPSTORM" ]; then
+    sed -i -E "s|PHPSTORM|${PHP_XDEBUG_IDE_KEY}|g" /usr/local/etc/php/conf.d/xdebug.ini
+fi
+
+# Override timezone by env
+if [ "$TZ" != "" ] || [ "$TZ" != "Europe/Rome" ]; then
+    ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
+fi
+
+# Override host user uid by env
+if [ "$HOST_USER_UID" != "1000" ]; then
+    usermod -u $HOST_USER_UID sindria && groupmod sindria -g $HOST_USER_UID
+fi
\ No newline at end of file
diff --git a/src/php7.1/resources/php/00_openssl.ini b/src/php7.1/resources/php/00_openssl.ini
new file mode 100644
index 0000000..cb58b9c
--- /dev/null
+++ b/src/php7.1/resources/php/00_openssl.ini
@@ -0,0 +1 @@
+extension=openssl.so
\ No newline at end of file
diff --git a/src/php7.1/resources/php/00_session.ini b/src/php7.1/resources/php/00_session.ini
new file mode 100644
index 0000000..4627f6a
--- /dev/null
+++ b/src/php7.1/resources/php/00_session.ini
@@ -0,0 +1 @@
+extension=session.so
\ No newline at end of file
diff --git a/src/php7.1/resources/php/00_tokenizer.ini b/src/php7.1/resources/php/00_tokenizer.ini
new file mode 100644
index 0000000..877127e
--- /dev/null
+++ b/src/php7.1/resources/php/00_tokenizer.ini
@@ -0,0 +1 @@
+extension=tokenizer.so
\ No newline at end of file
diff --git a/src/php7.2/Dockerfile b/src/php7.2/Dockerfile
new file mode 100644
index 0000000..c685095
--- /dev/null
+++ b/src/php7.2/Dockerfile
@@ -0,0 +1,109 @@
+FROM php:7.2-alpine
+
+ARG TAG_SUFFIX
+ARG TAG_VERSION
+ARG HOST_USER_UID
+ARG TIMEZONE
+
+LABEL \
+	name="php" \
+	image="sindriainc/php" \
+	tag="${TAG_VERSION}-${TAG_SUFFIX}" \
+	vendor="sindria"
+
+ENV PATH "/root/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/home/sindria/.local/bin"
+ENV TZ=${TIMEZONE}
+ENV SINDRIA_USER="sindria"
+ENV SINDRIA_USER_HOME="/home/sindria"
+ENV PHP_VERSION=${TAG_SUFFIX}
+
+# Update and install packages
+RUN apk update && \
+    apk add \
+    shadow \
+    bash \
+    curl \
+    wget \
+    git \
+    rsync \
+    openssl \
+    ca-certificates \
+    tzdata && \
+    rm -rf /var/cache/apk/*
+
+## Install dependencies
+RUN apk add --no-cache --virtual build-dependencies \
+    gcc \
+    g++ \
+    make \
+    autoconf \
+    pkgconf \
+    imagemagick \
+    imagemagick-libs \
+    imagemagick-dev && \
+    rm -rf /var/cache/apk/*
+
+# Setting app user, timezone and permissions
+RUN addgroup -S ${SINDRIA_USER} -g ${HOST_USER_UID} && adduser -s /bin/bash -S ${SINDRIA_USER} -u ${HOST_USER_UID} -G ${SINDRIA_USER} -h ${SINDRIA_USER_HOME} && \
+    mkdir -p /var/www && \
+    mkdir -p /var/www/app && \
+    ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone && \
+    chmod -R 770 /var/www/app && \
+    chown -R ${SINDRIA_USER}:${SINDRIA_USER} /var/www/app
+COPY resources/.bashrc ${SINDRIA_USER_HOME}
+
+WORKDIR /var/www/app
+
+# Install php extensions
+RUN apk add \
+    php7-calendar \
+    php7-ctype \
+    php7-curl \
+    php7-exif \
+    php7-fileinfo \
+    php7-ftp \
+    php7-gd \
+    php7-gettext \
+    php7-iconv \
+    php7-intl \
+    php7-json \
+    php7-mbstring \
+    php7-mysqli \
+    php7-pdo \
+    php7-phar \
+    php7-posix \
+    #php7-readline \
+    php7-shmop \
+    php7-sockets \
+    php7-sysvmsg \
+    php7-tokenizer \
+    php7-session \
+    php7-openssl \
+    php7-xml \
+    php7-zip \
+    php7-xsl \
+    php7-bcmath \
+    php7-imap \
+    php7-pgsql \
+    php7-pdo_pgsql \
+    php7-pdo_mysql \
+    php7-pdo_dblib \
+    php7-pcntl \
+    php7-tidy && \
+    #pecl install pdo_dblib && \
+    pecl install imagick redis && \
+    pecl install swoole && \
+    docker-php-ext-enable swoole && \
+    docker-php-ext-enable \
+    imagick \
+    redis && \
+    apk del build-dependencies && \
+    rm -rf /var/cache/apk/*
+
+SHELL ["/bin/bash", "-c"]
+
+# Add and setup entrypoint
+COPY resources/bin/entrypoint.sh /usr/local/bin/entrypoint.sh
+ENTRYPOINT ["/bin/bash", "entrypoint.sh"]
+
+#USER ${SINDRIA_USER}
\ No newline at end of file
diff --git a/src/php7.2/resources/.bashrc b/src/php7.2/resources/.bashrc
new file mode 100644
index 0000000..25c901f
--- /dev/null
+++ b/src/php7.2/resources/.bashrc
@@ -0,0 +1,2 @@
+
+export PATH=/root/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/home/sindria/.local/bin
\ No newline at end of file
diff --git a/src/php7.2/resources/bin/entrypoint.sh b/src/php7.2/resources/bin/entrypoint.sh
new file mode 100644
index 0000000..7cadc1b
--- /dev/null
+++ b/src/php7.2/resources/bin/entrypoint.sh
@@ -0,0 +1,22 @@
+#!/usr/bin/env bash
+
+CONTAINER_GATEWAY=`/sbin/ip route|awk '/default/ { print $3 }'`
+
+# Adding host machine hostname
+echo -e "\n# Hostname for gateway" >> /etc/hosts
+echo -e "${CONTAINER_GATEWAY}\tdocker.host.internal\n" >> /etc/hosts
+
+# Override xdebug ide key
+if [ "${PHP_XDEBUG_IDE_KEY}" != "PHPSTORM" ]; then
+    sed -i -E "s|PHPSTORM|${PHP_XDEBUG_IDE_KEY}|g" /usr/local/etc/php/conf.d/xdebug.ini
+fi
+
+# Override timezone by env
+if [ "$TZ" != "" ] || [ "$TZ" != "Europe/Rome" ]; then
+    ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
+fi
+
+# Override host user uid by env
+if [ "$HOST_USER_UID" != "1000" ]; then
+    usermod -u $HOST_USER_UID sindria && groupmod sindria -g $HOST_USER_UID
+fi
\ No newline at end of file
diff --git a/src/php7.2/resources/php/00_openssl.ini b/src/php7.2/resources/php/00_openssl.ini
new file mode 100644
index 0000000..cb58b9c
--- /dev/null
+++ b/src/php7.2/resources/php/00_openssl.ini
@@ -0,0 +1 @@
+extension=openssl.so
\ No newline at end of file
diff --git a/src/php7.2/resources/php/00_session.ini b/src/php7.2/resources/php/00_session.ini
new file mode 100644
index 0000000..4627f6a
--- /dev/null
+++ b/src/php7.2/resources/php/00_session.ini
@@ -0,0 +1 @@
+extension=session.so
\ No newline at end of file
diff --git a/src/php7.2/resources/php/00_tokenizer.ini b/src/php7.2/resources/php/00_tokenizer.ini
new file mode 100644
index 0000000..877127e
--- /dev/null
+++ b/src/php7.2/resources/php/00_tokenizer.ini
@@ -0,0 +1 @@
+extension=tokenizer.so
\ No newline at end of file

commit 4c54b54953f1a46ee4d3268b8e23d149a5c65e62
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Fri Sep 10 13:01:04 2021 +0200

    Added php3

diff --git a/src/php7.3/Dockerfile b/src/php7.3/Dockerfile
new file mode 100644
index 0000000..e9b2df0
--- /dev/null
+++ b/src/php7.3/Dockerfile
@@ -0,0 +1,109 @@
+FROM php:7.3-alpine
+
+ARG TAG_SUFFIX
+ARG TAG_VERSION
+ARG HOST_USER_UID
+ARG TIMEZONE
+
+LABEL \
+	name="php" \
+	image="sindriainc/php" \
+	tag="${TAG_VERSION}-${TAG_SUFFIX}" \
+	vendor="sindria"
+
+ENV PATH "/root/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/home/sindria/.local/bin"
+ENV TZ=${TIMEZONE}
+ENV SINDRIA_USER="sindria"
+ENV SINDRIA_USER_HOME="/home/sindria"
+ENV PHP_VERSION=${TAG_SUFFIX}
+
+# Update and install packages
+RUN apk update && \
+    apk add \
+    shadow \
+    bash \
+    curl \
+    wget \
+    git \
+    rsync \
+    openssl \
+    ca-certificates \
+    tzdata && \
+    rm -rf /var/cache/apk/*
+
+## Install dependencies
+RUN apk add --no-cache --virtual build-dependencies \
+    gcc \
+    g++ \
+    make \
+    autoconf \
+    pkgconf \
+    imagemagick \
+    imagemagick-libs \
+    imagemagick-dev && \
+    rm -rf /var/cache/apk/*
+
+# Setting app user, timezone and permissions
+RUN addgroup -S ${SINDRIA_USER} -g ${HOST_USER_UID} && adduser -s /bin/bash -S ${SINDRIA_USER} -u ${HOST_USER_UID} -G ${SINDRIA_USER} -h ${SINDRIA_USER_HOME} && \
+    mkdir -p /var/www && \
+    mkdir -p /var/www/app && \
+    ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone && \
+    chmod -R 770 /var/www/app && \
+    chown -R ${SINDRIA_USER}:${SINDRIA_USER} /var/www/app
+COPY resources/.bashrc ${SINDRIA_USER_HOME}
+
+WORKDIR /var/www/app
+
+# Install php extensions
+RUN apk add \
+    php7-calendar \
+    php7-ctype \
+    php7-curl \
+    php7-exif \
+    php7-fileinfo \
+    php7-ftp \
+    php7-gd \
+    php7-gettext \
+    php7-iconv \
+    php7-intl \
+    php7-json \
+    php7-mbstring \
+    php7-mysqli \
+    php7-pdo \
+    php7-phar \
+    php7-posix \
+    #php7-readline \
+    php7-shmop \
+    php7-sockets \
+    php7-sysvmsg \
+    php7-tokenizer \
+    php7-session \
+    php7-openssl \
+    php7-xml \
+    php7-zip \
+    php7-xsl \
+    php7-bcmath \
+    php7-imap \
+    php7-pgsql \
+    php7-pdo_pgsql \
+    php7-pdo_mysql \
+    php7-pdo_dblib \
+    php7-pcntl \
+    php7-tidy && \
+    #pecl install pdo_dblib && \
+    pecl install imagick redis && \
+    pecl install swoole && \
+    docker-php-ext-enable swoole && \
+    docker-php-ext-enable \
+    imagick \
+    redis && \
+    apk del build-dependencies && \
+    rm -rf /var/cache/apk/*
+
+SHELL ["/bin/bash", "-c"]
+
+# Add and setup entrypoint
+COPY resources/bin/entrypoint.sh /usr/local/bin/entrypoint.sh
+ENTRYPOINT ["/bin/bash", "entrypoint.sh"]
+
+#USER ${SINDRIA_USER}
\ No newline at end of file
diff --git a/src/php7.3/resources/.bashrc b/src/php7.3/resources/.bashrc
new file mode 100644
index 0000000..25c901f
--- /dev/null
+++ b/src/php7.3/resources/.bashrc
@@ -0,0 +1,2 @@
+
+export PATH=/root/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/home/sindria/.local/bin
\ No newline at end of file
diff --git a/src/php7.3/resources/bin/entrypoint.sh b/src/php7.3/resources/bin/entrypoint.sh
new file mode 100644
index 0000000..7cadc1b
--- /dev/null
+++ b/src/php7.3/resources/bin/entrypoint.sh
@@ -0,0 +1,22 @@
+#!/usr/bin/env bash
+
+CONTAINER_GATEWAY=`/sbin/ip route|awk '/default/ { print $3 }'`
+
+# Adding host machine hostname
+echo -e "\n# Hostname for gateway" >> /etc/hosts
+echo -e "${CONTAINER_GATEWAY}\tdocker.host.internal\n" >> /etc/hosts
+
+# Override xdebug ide key
+if [ "${PHP_XDEBUG_IDE_KEY}" != "PHPSTORM" ]; then
+    sed -i -E "s|PHPSTORM|${PHP_XDEBUG_IDE_KEY}|g" /usr/local/etc/php/conf.d/xdebug.ini
+fi
+
+# Override timezone by env
+if [ "$TZ" != "" ] || [ "$TZ" != "Europe/Rome" ]; then
+    ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
+fi
+
+# Override host user uid by env
+if [ "$HOST_USER_UID" != "1000" ]; then
+    usermod -u $HOST_USER_UID sindria && groupmod sindria -g $HOST_USER_UID
+fi
\ No newline at end of file
diff --git a/src/php7.3/resources/php/00_openssl.ini b/src/php7.3/resources/php/00_openssl.ini
new file mode 100644
index 0000000..cb58b9c
--- /dev/null
+++ b/src/php7.3/resources/php/00_openssl.ini
@@ -0,0 +1 @@
+extension=openssl.so
\ No newline at end of file
diff --git a/src/php7.3/resources/php/00_session.ini b/src/php7.3/resources/php/00_session.ini
new file mode 100644
index 0000000..4627f6a
--- /dev/null
+++ b/src/php7.3/resources/php/00_session.ini
@@ -0,0 +1 @@
+extension=session.so
\ No newline at end of file
diff --git a/src/php7.3/resources/php/00_tokenizer.ini b/src/php7.3/resources/php/00_tokenizer.ini
new file mode 100644
index 0000000..877127e
--- /dev/null
+++ b/src/php7.3/resources/php/00_tokenizer.ini
@@ -0,0 +1 @@
+extension=tokenizer.so
\ No newline at end of file

commit 9f164fe175b7b06315f74fe6f2b6397aa7f99fae
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Fri Sep 10 12:53:46 2021 +0200

    Added php 7.4

diff --git a/src/php7.4/Dockerfile b/src/php7.4/Dockerfile
new file mode 100644
index 0000000..664336e
--- /dev/null
+++ b/src/php7.4/Dockerfile
@@ -0,0 +1,109 @@
+FROM php:7.4-alpine
+
+ARG TAG_SUFFIX
+ARG TAG_VERSION
+ARG HOST_USER_UID
+ARG TIMEZONE
+
+LABEL \
+	name="php" \
+	image="sindriainc/php" \
+	tag="${TAG_VERSION}-${TAG_SUFFIX}" \
+	vendor="sindria"
+
+ENV PATH "/root/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/home/sindria/.local/bin"
+ENV TZ=${TIMEZONE}
+ENV SINDRIA_USER="sindria"
+ENV SINDRIA_USER_HOME="/home/sindria"
+ENV PHP_VERSION=${TAG_SUFFIX}
+
+# Update and install packages
+RUN apk update && \
+    apk add \
+    shadow \
+    bash \
+    curl \
+    wget \
+    git \
+    rsync \
+    openssl \
+    ca-certificates \
+    tzdata && \
+    rm -rf /var/cache/apk/*
+
+## Install dependencies
+RUN apk add --no-cache --virtual build-dependencies \
+    gcc \
+    g++ \
+    make \
+    autoconf \
+    pkgconf \
+    imagemagick \
+    imagemagick-libs \
+    imagemagick-dev && \
+    rm -rf /var/cache/apk/*
+
+# Setting app user, timezone and permissions
+RUN addgroup -S ${SINDRIA_USER} -g ${HOST_USER_UID} && adduser -s /bin/bash -S ${SINDRIA_USER} -u ${HOST_USER_UID} -G ${SINDRIA_USER} -h ${SINDRIA_USER_HOME} && \
+    mkdir -p /var/www && \
+    mkdir -p /var/www/app && \
+    ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone && \
+    chmod -R 770 /var/www/app && \
+    chown -R ${SINDRIA_USER}:${SINDRIA_USER} /var/www/app
+COPY resources/.bashrc ${SINDRIA_USER_HOME}
+
+WORKDIR /var/www/app
+
+# Install php extensions
+RUN apk add \
+    php7-calendar \
+    php7-ctype \
+    php7-curl \
+    php7-exif \
+    php7-fileinfo \
+    php7-ftp \
+    php7-gd \
+    php7-gettext \
+    php7-iconv \
+    php7-intl \
+    php7-json \
+    php7-mbstring \
+    php7-mysqli \
+    php7-pdo \
+    php7-phar \
+    php7-posix \
+    #php7-readline \
+    php7-shmop \
+    php7-sockets \
+    php7-sysvmsg \
+    php7-tokenizer \
+    php7-session \
+    php7-openssl \
+    php7-xml \
+    php7-zip \
+    php7-xsl \
+    php7-bcmath \
+    php7-imap \
+    php7-pgsql \
+    php7-pdo_pgsql \
+    php7-pdo_mysql \
+    php7-pdo_dblib \
+    php7-pcntl \
+    php7-tidy && \
+    #pecl install pdo_dblib && \
+    pecl install imagick redis && \
+    pecl install swoole && \
+    docker-php-ext-enable swoole && \
+    docker-php-ext-enable \
+    imagick \
+    redis && \
+    apk del build-dependencies && \
+    rm -rf /var/cache/apk/*
+
+SHELL ["/bin/bash", "-c"]
+
+# Add and setup entrypoint
+COPY resources/bin/entrypoint.sh /usr/local/bin/entrypoint.sh
+ENTRYPOINT ["/bin/bash", "entrypoint.sh"]
+
+#USER ${SINDRIA_USER}
\ No newline at end of file
diff --git a/src/php7.4/resources/.bashrc b/src/php7.4/resources/.bashrc
new file mode 100644
index 0000000..25c901f
--- /dev/null
+++ b/src/php7.4/resources/.bashrc
@@ -0,0 +1,2 @@
+
+export PATH=/root/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/home/sindria/.local/bin
\ No newline at end of file
diff --git a/src/php7.4/resources/bin/entrypoint.sh b/src/php7.4/resources/bin/entrypoint.sh
new file mode 100644
index 0000000..7cadc1b
--- /dev/null
+++ b/src/php7.4/resources/bin/entrypoint.sh
@@ -0,0 +1,22 @@
+#!/usr/bin/env bash
+
+CONTAINER_GATEWAY=`/sbin/ip route|awk '/default/ { print $3 }'`
+
+# Adding host machine hostname
+echo -e "\n# Hostname for gateway" >> /etc/hosts
+echo -e "${CONTAINER_GATEWAY}\tdocker.host.internal\n" >> /etc/hosts
+
+# Override xdebug ide key
+if [ "${PHP_XDEBUG_IDE_KEY}" != "PHPSTORM" ]; then
+    sed -i -E "s|PHPSTORM|${PHP_XDEBUG_IDE_KEY}|g" /usr/local/etc/php/conf.d/xdebug.ini
+fi
+
+# Override timezone by env
+if [ "$TZ" != "" ] || [ "$TZ" != "Europe/Rome" ]; then
+    ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
+fi
+
+# Override host user uid by env
+if [ "$HOST_USER_UID" != "1000" ]; then
+    usermod -u $HOST_USER_UID sindria && groupmod sindria -g $HOST_USER_UID
+fi
\ No newline at end of file
diff --git a/src/php7.4/resources/php/00_openssl.ini b/src/php7.4/resources/php/00_openssl.ini
new file mode 100644
index 0000000..cb58b9c
--- /dev/null
+++ b/src/php7.4/resources/php/00_openssl.ini
@@ -0,0 +1 @@
+extension=openssl.so
\ No newline at end of file
diff --git a/src/php7.4/resources/php/00_session.ini b/src/php7.4/resources/php/00_session.ini
new file mode 100644
index 0000000..4627f6a
--- /dev/null
+++ b/src/php7.4/resources/php/00_session.ini
@@ -0,0 +1 @@
+extension=session.so
\ No newline at end of file
diff --git a/src/php7.4/resources/php/00_tokenizer.ini b/src/php7.4/resources/php/00_tokenizer.ini
new file mode 100644
index 0000000..877127e
--- /dev/null
+++ b/src/php7.4/resources/php/00_tokenizer.ini
@@ -0,0 +1 @@
+extension=tokenizer.so
\ No newline at end of file
diff --git a/src/php8/Dockerfile b/src/php8/Dockerfile
index 2e648de..6330bd8 100644
--- a/src/php8/Dockerfile
+++ b/src/php8/Dockerfile
@@ -43,44 +43,6 @@ RUN apk add --no-cache --virtual build-dependencies \
     imagemagick-dev && \
     rm -rf /var/cache/apk/*
 
-## Install dependencies
-#RUN apk add --no-cache --virtual build-dependencies \
-#    gcc \
-#    g++ \
-#    make \
-#    autoconf \
-#    libffi-dev \
-#    libc-dev \
-#    libressl-dev \
-#    curl-dev \
-#    bzip2-dev \
-#    libzip-dev \
-#    libsodium \
-#    libsodium-dev \
-#    postgresql-dev \
-#    libjpeg-turbo \
-#    freetype \
-#    freetype-dev \
-#    libpng \
-#    libpng-dev \
-#    icu \
-#    icu-dev \
-#    oniguruma-dev \
-#    gettext-dev \
-#    libxml2-dev \
-#    libedit-dev \
-#    libxslt-dev \
-#    imap-dev \
-#    krb5-dev \
-#    tidyhtml-dev \
-#    libmemcached-libs \
-#    imagemagick \
-#    imagemagick-libs \
-#    imagemagick-dev \
-#    libjpeg-turbo-dev && \
-#    rm -rf /var/cache/apk/* && \
-#    ln -s /usr/include/tidybuffio.h /usr/include/buffio.h
-
 # Setting app user, timezone and permissions
 RUN addgroup -S ${SINDRIA_USER} -g ${HOST_USER_UID} && adduser -s /bin/bash -S ${SINDRIA_USER} -u ${HOST_USER_UID} -G ${SINDRIA_USER} -h ${SINDRIA_USER_HOME} && \
     mkdir -p /var/www && \
@@ -92,67 +54,6 @@ COPY resources/.bashrc ${SINDRIA_USER_HOME}
 
 WORKDIR /var/www/app
 
-## Install php extensions
-#RUN docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/include/ || docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ && \
-#    #docker-php-ext-configure pdo_dblib --with-libdir=/lib/x86_64-linux-gnu && \
-#    docker-php-ext-configure imap --with-kerberos --with-imap-ssl && \
-#    #docker-php-ext-configure tokenizer && \
-#    #docker-php-ext-configure session && \
-#    #docker-php-ext-configure openssl && \
-#    pecl install imagick redis && \
-#    docker-php-ext-install \
-#        calendar \
-#        ctype \
-#        curl \
-#        exif \
-#        fileinfo \
-#        ftp \
-#        gd \
-#        gettext \
-#        iconv \
-#        intl \
-#        json \
-#        mbstring \
-#        mysqli \
-#        pdo \
-#        phar \
-#        posix \
-#        readline \
-#        shmop \
-#        sockets \
-#        sysvmsg \
-#        sysvshm \
-#        tokenizer \
-#        session \
-#        openssl \
-#        xml \
-#        zip \
-#        xsl \
-#        bcmath \
-#        imap \
-#        soap \
-#        pgsql \
-#        pdo_pgsql \
-#        pdo_mysql \
-#        #pdo_dblib \
-#        pcntl \
-#        tidy && \
-#        docker-php-ext-enable \
-#        imagick \
-#        redis \
-#        #memcached \
-#        opcache \
-#        imap \
-#        #tokenizer \
-#        #session \
-#        #openssl \
-#        zip && \
-#        pecl install pdo_dblib || echo "Unsupported php version for pdo_dblib" && \
-#        pecl install swoole || echo "Swoole not supported" && \
-#        docker-php-ext-enable swoole || echo "Swoole missing" && \
-#        apk del build-dependencies && \
-#        rm -rf /var/cache/apk/*
-
 # Install php extensions
 RUN apk add \
     php${PHP_VERSION}-calendar \
@@ -199,8 +100,6 @@ RUN apk add \
     apk del build-dependencies && \
     rm -rf /var/cache/apk/*
 
-#COPY resources/php /etc/php${PHP_VERSION}/conf.d/
-
 SHELL ["/bin/bash", "-c"]
 
 # Add and setup entrypoint

commit dd5bba184029c7f2b1b35fea01ee7c1735fcb931
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Fri Sep 10 12:38:02 2021 +0200

    Re structure with separate Dockerfiles

diff --git a/build.sh b/build.sh
index 1a35463..b8b9f6d 100644
--- a/build.sh
+++ b/build.sh
@@ -23,11 +23,10 @@ TAG_SUFFIX=$3
 HOST_USER_UID=1000
 TIMEZONE=Europe/Rome
 
-docker build ./src \
+docker build ./src/php${TAG_SUFFIX} \
     --tag ${IMAGE_NAME}:${TAG_VERSION}-${TAG_SUFFIX} \
     --tag ${IMAGE_NAME}:latest \
     --build-arg TAG_VERSION=${TAG_VERSION} \
     --build-arg TAG_SUFFIX=${TAG_SUFFIX} \
     --build-arg HOST_USER_UID=${HOST_USER_UID} \
-    --build-arg TIMEZONE=${TIMEZONE}
-
+    --build-arg TIMEZONE=${TIMEZONE}
\ No newline at end of file
diff --git a/src/Dockerfile b/src/Dockerfile
deleted file mode 100644
index a45192e..0000000
--- a/src/Dockerfile
+++ /dev/null
@@ -1,159 +0,0 @@
-ARG TAG_SUFFIX
-FROM php:${TAG_SUFFIX}-alpine
-
-ARG TAG_SUFFIX
-ARG TAG_VERSION
-ARG HOST_USER_UID
-ARG TIMEZONE
-
-LABEL \
-	name="php" \
-	image="sindriainc/php" \
-	tag="${TAG_VERSION}-${TAG_SUFFIX}" \
-	vendor="sindria"
-
-ENV PATH "/root/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/home/sindria/.local/bin"
-ENV TZ=${TIMEZONE}
-ENV SINDRIA_USER="sindria"
-ENV SINDRIA_USER_HOME="/home/sindria"
-ENV PHP_VERSION=${TAG_SUFFIX}
-
-# Update and install packages
-RUN apk update && \
-    apk add \
-    shadow \
-    bash \
-    curl \
-    wget \
-    git \
-    rsync \
-    openssl \
-    ca-certificates \
-    tzdata && \
-    rm -rf /var/cache/apk/*
-
-# Install dependencies
-RUN apk add --no-cache --virtual build-dependencies \
-    gcc \
-    g++ \
-    make \
-    autoconf \
-    libffi-dev \
-    libc-dev \
-    libressl-dev \
-    curl-dev \
-    bzip2-dev \
-    libzip-dev \
-    libsodium \
-    libsodium-dev \
-    postgresql-dev \
-    libjpeg-turbo \
-    freetype \
-    freetype-dev \
-    libpng \
-    libpng-dev \
-    icu \
-    icu-dev \
-    oniguruma-dev \
-    gettext-dev \
-    libxml2-dev \
-    libedit-dev \
-    libxslt-dev \
-    imap-dev \
-    krb5-dev \
-    tidyhtml-dev \
-    libmemcached-libs \
-    imagemagick \
-    imagemagick-libs \
-    imagemagick-dev \
-    libjpeg-turbo-dev && \
-    rm -rf /var/cache/apk/* && \
-    ln -s /usr/include/tidybuffio.h /usr/include/buffio.h
-
-# Setting app user, timezone and permissions
-RUN addgroup -S ${SINDRIA_USER} -g ${HOST_USER_UID} && adduser -s /bin/bash -S ${SINDRIA_USER} -u ${HOST_USER_UID} -G ${SINDRIA_USER} -h ${SINDRIA_USER_HOME} && \
-    mkdir -p /var/www && \
-    mkdir -p /var/www/app && \
-    ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone && \
-    chmod -R 770 /var/www/app && \
-    chown -R ${SINDRIA_USER}:${SINDRIA_USER} /var/www/app
-COPY resources/.bashrc ${SINDRIA_USER_HOME}
-
-WORKDIR /var/www/app
-
-# Install php extensions
-RUN docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/include/ || docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ && \
-    #docker-php-ext-configure pdo_dblib --with-libdir=/lib/x86_64-linux-gnu && \
-    docker-php-ext-configure imap --with-kerberos --with-imap-ssl && \
-    #docker-php-ext-configure tokenizer && \
-    #docker-php-ext-configure session && \
-    #docker-php-ext-configure openssl && \
-    pecl install imagick redis && \
-    docker-php-ext-install \
-        calendar \
-        ctype \
-        curl \
-        exif \
-        fileinfo \
-        ftp \
-        gd \
-        gettext \
-        iconv \
-        intl \
-        json \
-        mbstring \
-        mysqli \
-        pdo \
-        phar \
-        posix \
-        readline \
-        shmop \
-        sockets \
-        sysvmsg \
-        sysvshm \
-        tokenizer \
-        session \
-        openssl \
-        xml \
-        zip \
-        xsl \
-        bcmath \
-        imap \
-        soap \
-        pgsql \
-        pdo_pgsql \
-        pdo_mysql \
-        #pdo_dblib \
-        pcntl \
-        tidy && \
-        docker-php-ext-enable \
-        imagick \
-        redis \
-        #memcached \
-        opcache \
-        imap \
-        #tokenizer \
-        #session \
-        #openssl \
-        zip && \
-        pecl install pdo_dblib || echo "Unsupported php version for pdo_dblib" && \
-        pecl install swoole || echo "Swoole not supported" && \
-        docker-php-ext-enable swoole || echo "Swoole missing" && \
-        apk del build-dependencies && \
-        rm -rf /var/cache/apk/*
-
-RUN apk add \
-    php${PHP_VERSION}-session \
-    php${PHP_VERSION}-openssl \
-    php${PHP_VERSION}-tokenizer && \
-    rm -rf /var/cache/apk/*
-
-#COPY resources/php /etc/php${PHP_VERSION}/conf.d/
-
-SHELL ["/bin/bash", "-c"]
-
-# Add and setup entrypoint
-COPY resources/bin/entrypoint.sh /usr/local/bin/entrypoint.sh
-ENTRYPOINT ["/bin/bash", "entrypoint.sh"]
-
-#USER ${SINDRIA_USER}
\ No newline at end of file
diff --git a/src/php8/Dockerfile b/src/php8/Dockerfile
new file mode 100644
index 0000000..2e648de
--- /dev/null
+++ b/src/php8/Dockerfile
@@ -0,0 +1,210 @@
+FROM php:8-alpine
+
+ARG TAG_SUFFIX
+ARG TAG_VERSION
+ARG HOST_USER_UID
+ARG TIMEZONE
+
+LABEL \
+	name="php" \
+	image="sindriainc/php" \
+	tag="${TAG_VERSION}-${TAG_SUFFIX}" \
+	vendor="sindria"
+
+ENV PATH "/root/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/home/sindria/.local/bin"
+ENV TZ=${TIMEZONE}
+ENV SINDRIA_USER="sindria"
+ENV SINDRIA_USER_HOME="/home/sindria"
+ENV PHP_VERSION=${TAG_SUFFIX}
+
+# Update and install packages
+RUN apk update && \
+    apk add \
+    shadow \
+    bash \
+    curl \
+    wget \
+    git \
+    rsync \
+    openssl \
+    ca-certificates \
+    tzdata && \
+    rm -rf /var/cache/apk/*
+
+## Install dependencies
+RUN apk add --no-cache --virtual build-dependencies \
+    gcc \
+    g++ \
+    make \
+    autoconf \
+    pkgconf \
+    imagemagick \
+    imagemagick-libs \
+    imagemagick-dev && \
+    rm -rf /var/cache/apk/*
+
+## Install dependencies
+#RUN apk add --no-cache --virtual build-dependencies \
+#    gcc \
+#    g++ \
+#    make \
+#    autoconf \
+#    libffi-dev \
+#    libc-dev \
+#    libressl-dev \
+#    curl-dev \
+#    bzip2-dev \
+#    libzip-dev \
+#    libsodium \
+#    libsodium-dev \
+#    postgresql-dev \
+#    libjpeg-turbo \
+#    freetype \
+#    freetype-dev \
+#    libpng \
+#    libpng-dev \
+#    icu \
+#    icu-dev \
+#    oniguruma-dev \
+#    gettext-dev \
+#    libxml2-dev \
+#    libedit-dev \
+#    libxslt-dev \
+#    imap-dev \
+#    krb5-dev \
+#    tidyhtml-dev \
+#    libmemcached-libs \
+#    imagemagick \
+#    imagemagick-libs \
+#    imagemagick-dev \
+#    libjpeg-turbo-dev && \
+#    rm -rf /var/cache/apk/* && \
+#    ln -s /usr/include/tidybuffio.h /usr/include/buffio.h
+
+# Setting app user, timezone and permissions
+RUN addgroup -S ${SINDRIA_USER} -g ${HOST_USER_UID} && adduser -s /bin/bash -S ${SINDRIA_USER} -u ${HOST_USER_UID} -G ${SINDRIA_USER} -h ${SINDRIA_USER_HOME} && \
+    mkdir -p /var/www && \
+    mkdir -p /var/www/app && \
+    ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone && \
+    chmod -R 770 /var/www/app && \
+    chown -R ${SINDRIA_USER}:${SINDRIA_USER} /var/www/app
+COPY resources/.bashrc ${SINDRIA_USER_HOME}
+
+WORKDIR /var/www/app
+
+## Install php extensions
+#RUN docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/include/ || docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ && \
+#    #docker-php-ext-configure pdo_dblib --with-libdir=/lib/x86_64-linux-gnu && \
+#    docker-php-ext-configure imap --with-kerberos --with-imap-ssl && \
+#    #docker-php-ext-configure tokenizer && \
+#    #docker-php-ext-configure session && \
+#    #docker-php-ext-configure openssl && \
+#    pecl install imagick redis && \
+#    docker-php-ext-install \
+#        calendar \
+#        ctype \
+#        curl \
+#        exif \
+#        fileinfo \
+#        ftp \
+#        gd \
+#        gettext \
+#        iconv \
+#        intl \
+#        json \
+#        mbstring \
+#        mysqli \
+#        pdo \
+#        phar \
+#        posix \
+#        readline \
+#        shmop \
+#        sockets \
+#        sysvmsg \
+#        sysvshm \
+#        tokenizer \
+#        session \
+#        openssl \
+#        xml \
+#        zip \
+#        xsl \
+#        bcmath \
+#        imap \
+#        soap \
+#        pgsql \
+#        pdo_pgsql \
+#        pdo_mysql \
+#        #pdo_dblib \
+#        pcntl \
+#        tidy && \
+#        docker-php-ext-enable \
+#        imagick \
+#        redis \
+#        #memcached \
+#        opcache \
+#        imap \
+#        #tokenizer \
+#        #session \
+#        #openssl \
+#        zip && \
+#        pecl install pdo_dblib || echo "Unsupported php version for pdo_dblib" && \
+#        pecl install swoole || echo "Swoole not supported" && \
+#        docker-php-ext-enable swoole || echo "Swoole missing" && \
+#        apk del build-dependencies && \
+#        rm -rf /var/cache/apk/*
+
+# Install php extensions
+RUN apk add \
+    php${PHP_VERSION}-calendar \
+    php${PHP_VERSION}-ctype \
+    php${PHP_VERSION}-curl \
+    php${PHP_VERSION}-exif \
+    php${PHP_VERSION}-fileinfo \
+    php${PHP_VERSION}-ftp \
+    php${PHP_VERSION}-gd \
+    php${PHP_VERSION}-gettext \
+    php${PHP_VERSION}-iconv \
+    php${PHP_VERSION}-intl \
+    php${PHP_VERSION}-json \
+    php${PHP_VERSION}-mbstring \
+    php${PHP_VERSION}-mysqli \
+    php${PHP_VERSION}-pdo \
+    php${PHP_VERSION}-phar \
+    php${PHP_VERSION}-posix \
+    #php${PHP_VERSION}-readline \
+    php${PHP_VERSION}-shmop \
+    php${PHP_VERSION}-sockets \
+    php${PHP_VERSION}-sysvmsg \
+    php${PHP_VERSION}-tokenizer \
+    php${PHP_VERSION}-session \
+    php${PHP_VERSION}-openssl \
+    php${PHP_VERSION}-xml \
+    php${PHP_VERSION}-zip \
+    php${PHP_VERSION}-xsl \
+    php${PHP_VERSION}-bcmath \
+    php${PHP_VERSION}-imap \
+    php${PHP_VERSION}-pgsql \
+    php${PHP_VERSION}-pdo_pgsql \
+    php${PHP_VERSION}-pdo_mysql \
+    php${PHP_VERSION}-pdo_dblib \
+    php${PHP_VERSION}-pcntl \
+    php${PHP_VERSION}-tidy && \
+    #pecl install pdo_dblib && \
+    pecl install imagick redis && \
+    pecl install swoole && \
+    docker-php-ext-enable swoole && \
+    docker-php-ext-enable \
+    imagick \
+    redis && \
+    apk del build-dependencies && \
+    rm -rf /var/cache/apk/*
+
+#COPY resources/php /etc/php${PHP_VERSION}/conf.d/
+
+SHELL ["/bin/bash", "-c"]
+
+# Add and setup entrypoint
+COPY resources/bin/entrypoint.sh /usr/local/bin/entrypoint.sh
+ENTRYPOINT ["/bin/bash", "entrypoint.sh"]
+
+#USER ${SINDRIA_USER}
\ No newline at end of file
diff --git a/src/resources/.bashrc b/src/php8/resources/.bashrc
similarity index 100%
rename from src/resources/.bashrc
rename to src/php8/resources/.bashrc
diff --git a/src/resources/bin/entrypoint.sh b/src/php8/resources/bin/entrypoint.sh
similarity index 100%
rename from src/resources/bin/entrypoint.sh
rename to src/php8/resources/bin/entrypoint.sh
diff --git a/src/resources/php/00_openssl.ini b/src/php8/resources/php/00_openssl.ini
similarity index 100%
rename from src/resources/php/00_openssl.ini
rename to src/php8/resources/php/00_openssl.ini
diff --git a/src/resources/php/00_session.ini b/src/php8/resources/php/00_session.ini
similarity index 100%
rename from src/resources/php/00_session.ini
rename to src/php8/resources/php/00_session.ini
diff --git a/src/resources/php/00_tokenizer.ini b/src/php8/resources/php/00_tokenizer.ini
similarity index 100%
rename from src/resources/php/00_tokenizer.ini
rename to src/php8/resources/php/00_tokenizer.ini

commit ab4fc0768be34812a1951eef9fd05fd84faac966
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Fri Sep 10 01:19:10 2021 +0200

    Fix

diff --git a/src/Dockerfile b/src/Dockerfile
index b8eef39..a45192e 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -30,7 +30,10 @@ RUN apk update && \
     openssl \
     ca-certificates \
     tzdata && \
-    apk add --no-cache --virtual build-dependencies \
+    rm -rf /var/cache/apk/*
+
+# Install dependencies
+RUN apk add --no-cache --virtual build-dependencies \
     gcc \
     g++ \
     make \
@@ -82,9 +85,9 @@ WORKDIR /var/www/app
 RUN docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/include/ || docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ && \
     #docker-php-ext-configure pdo_dblib --with-libdir=/lib/x86_64-linux-gnu && \
     docker-php-ext-configure imap --with-kerberos --with-imap-ssl && \
-    docker-php-ext-configure tokenizer && \
-    docker-php-ext-configure session && \
-    docker-php-ext-configure openssl && \
+    #docker-php-ext-configure tokenizer && \
+    #docker-php-ext-configure session && \
+    #docker-php-ext-configure openssl && \
     pecl install imagick redis && \
     docker-php-ext-install \
         calendar \
@@ -129,17 +132,23 @@ RUN docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/i
         #memcached \
         opcache \
         imap \
-        tokenizer \
-        session \
-        openssl \
+        #tokenizer \
+        #session \
+        #openssl \
         zip && \
         pecl install pdo_dblib || echo "Unsupported php version for pdo_dblib" && \
         pecl install swoole || echo "Swoole not supported" && \
         docker-php-ext-enable swoole || echo "Swoole missing" && \
-        #apk del build-dependencies && \
+        apk del build-dependencies && \
         rm -rf /var/cache/apk/*
 
-COPY resources/php /etc/php${PHP_VERSION}/conf.d/
+RUN apk add \
+    php${PHP_VERSION}-session \
+    php${PHP_VERSION}-openssl \
+    php${PHP_VERSION}-tokenizer && \
+    rm -rf /var/cache/apk/*
+
+#COPY resources/php /etc/php${PHP_VERSION}/conf.d/
 
 SHELL ["/bin/bash", "-c"]
 

commit c37552de47c96a61ac2ae5d43465e1e7ee49bed2
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Fri Sep 10 00:55:47 2021 +0200

    Fix

diff --git a/src/Dockerfile b/src/Dockerfile
index 16c9fa4..b8eef39 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -1,6 +1,7 @@
 ARG TAG_SUFFIX
 FROM php:${TAG_SUFFIX}-alpine
 
+ARG TAG_SUFFIX
 ARG TAG_VERSION
 ARG HOST_USER_UID
 ARG TIMEZONE

commit e42c27f67871bd1e3146304988ad2ee049f5790a
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Fri Sep 10 00:52:47 2021 +0200

    Fix

diff --git a/src/resources/php/ 00_tokenizer.ini b/src/resources/php/00_tokenizer.ini
similarity index 100%
rename from src/resources/php/ 00_tokenizer.ini
rename to src/resources/php/00_tokenizer.ini

commit 1dac44080379c0ffe0d2e625e5399d5b5a24daea
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Fri Sep 10 00:52:00 2021 +0200

    Fix

diff --git a/src/Dockerfile b/src/Dockerfile
index 3354bc0..16c9fa4 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -138,6 +138,8 @@ RUN docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/i
         #apk del build-dependencies && \
         rm -rf /var/cache/apk/*
 
+COPY resources/php /etc/php${PHP_VERSION}/conf.d/
+
 SHELL ["/bin/bash", "-c"]
 
 # Add and setup entrypoint
diff --git a/src/resources/php/ 00_tokenizer.ini b/src/resources/php/ 00_tokenizer.ini
new file mode 100644
index 0000000..877127e
--- /dev/null
+++ b/src/resources/php/ 00_tokenizer.ini	
@@ -0,0 +1 @@
+extension=tokenizer.so
\ No newline at end of file
diff --git a/src/resources/php/00_openssl.ini b/src/resources/php/00_openssl.ini
new file mode 100644
index 0000000..cb58b9c
--- /dev/null
+++ b/src/resources/php/00_openssl.ini
@@ -0,0 +1 @@
+extension=openssl.so
\ No newline at end of file
diff --git a/src/resources/php/00_session.ini b/src/resources/php/00_session.ini
new file mode 100644
index 0000000..4627f6a
--- /dev/null
+++ b/src/resources/php/00_session.ini
@@ -0,0 +1 @@
+extension=session.so
\ No newline at end of file

commit 6703dc3216237efd1d5745e9a9a6183871f94ef7
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Fri Sep 10 00:30:31 2021 +0200

    Fix

diff --git a/src/Dockerfile b/src/Dockerfile
index e18ce04..3354bc0 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -81,6 +81,9 @@ WORKDIR /var/www/app
 RUN docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/include/ || docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ && \
     #docker-php-ext-configure pdo_dblib --with-libdir=/lib/x86_64-linux-gnu && \
     docker-php-ext-configure imap --with-kerberos --with-imap-ssl && \
+    docker-php-ext-configure tokenizer && \
+    docker-php-ext-configure session && \
+    docker-php-ext-configure openssl && \
     pecl install imagick redis && \
     docker-php-ext-install \
         calendar \
@@ -125,6 +128,9 @@ RUN docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/i
         #memcached \
         opcache \
         imap \
+        tokenizer \
+        session \
+        openssl \
         zip && \
         pecl install pdo_dblib || echo "Unsupported php version for pdo_dblib" && \
         pecl install swoole || echo "Swoole not supported" && \

commit 65ef9057f7603a16ad92ceaa43dc64cda6da4eb3
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Thu Sep 9 22:44:16 2021 +0200

    Added missing extensions

diff --git a/src/Dockerfile b/src/Dockerfile
index 7f93d98..e18ce04 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -26,6 +26,7 @@ RUN apk update && \
     wget \
     git \
     rsync \
+    openssl \
     ca-certificates \
     tzdata && \
     apk add --no-cache --virtual build-dependencies \
@@ -104,6 +105,8 @@ RUN docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/i
         sysvmsg \
         sysvshm \
         tokenizer \
+        session \
+        openssl \
         xml \
         zip \
         xsl \

commit a9148a8ae684ff0a79357dea78788e64026f5d0a
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Sun Jun 27 03:55:50 2021 +0200

    Init

diff --git a/bitbucket-pipelines.yml b/bitbucket-pipelines.yml
index 8bcc00e..8c69ccb 100644
--- a/bitbucket-pipelines.yml
+++ b/bitbucket-pipelines.yml
@@ -2,7 +2,7 @@ image: sindriainc/pipeline:latest
 
 pipelines:
   branches:
-    local-zts:
+    local-parallel:
       - step:
           name: Build and Publish Image
           script:
diff --git a/src/Dockerfile b/src/Dockerfile
index 8969c11..980e807 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -1,5 +1,5 @@
 ARG TAG_SUFFIX
-FROM sindriainc/php:zts-${TAG_SUFFIX}
+FROM sindriainc/php:parallel-${TAG_SUFFIX}
 
 ARG TAG_VERSION
 ARG HOST_USER_UID

commit 679e8381ea02f0952ee34ff6a4b377595fbd271a
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Sun Jun 27 03:40:24 2021 +0200

    Init

diff --git a/bitbucket-pipelines.yml b/bitbucket-pipelines.yml
index 8aaef26..a0839d4 100644
--- a/bitbucket-pipelines.yml
+++ b/bitbucket-pipelines.yml
@@ -2,7 +2,7 @@ image: sindriainc/pipeline:latest
 
 pipelines:
   branches:
-    pthreads:
+    parallel:
       - step:
           name: Build and Publish Image
           script:
diff --git a/src/Dockerfile b/src/Dockerfile
index 95e6952..88c3cbc 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -19,14 +19,8 @@ ENV PHP_VERSION=${TAG_SUFFIX}
 
 #USER root
 
-# Install pthreads
-RUN cd /tmp && \
-    git clone https://github.com/krakjoe/pthreads.git && \
-    cd pthreads && \
-    phpize && \
-    ./configure --with-php-config=/usr/local/bin/php-config && \
-    make && \
-    cp modules/pthreads.so /usr/lib64/php-zts/modules/ && \
-    echo "extension=pthreads.so" >> /etc/php-zts.d/pthreads.ini
+# Install parallel
+RUN pecl install parallel && \
+    echo "extension=parallel.so" > /usr/local/etc/php/conf.d/parallel.ini
 
 #USER ${SINDRIA_USER}

commit ce07091df3bf9c140efddc52ab9bb171a547dc2e
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Sun Jun 27 03:35:58 2021 +0200

    Fix

diff --git a/bitbucket-pipelines.yml b/bitbucket-pipelines.yml
index 8bcc00e..8aaef26 100644
--- a/bitbucket-pipelines.yml
+++ b/bitbucket-pipelines.yml
@@ -2,7 +2,7 @@ image: sindriainc/pipeline:latest
 
 pipelines:
   branches:
-    local-zts:
+    pthreads:
       - step:
           name: Build and Publish Image
           script:

commit e2ef3a44c3d6eaa087d8149a6d4db622dcd8c901
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Sun Jun 27 03:35:14 2021 +0200

    Init

diff --git a/src/Dockerfile b/src/Dockerfile
index 8969c11..95e6952 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -1,6 +1,7 @@
 ARG TAG_SUFFIX
 FROM sindriainc/php:zts-${TAG_SUFFIX}
 
+ARG TAG_SUFFIX
 ARG TAG_VERSION
 ARG HOST_USER_UID
 ARG TIMEZONE
@@ -15,43 +16,17 @@ ENV TZ=${TIMEZONE}
 ENV SINDRIA_USER="sindria"
 ENV SINDRIA_USER_HOME="/home/sindria"
 ENV PHP_VERSION=${TAG_SUFFIX}
-ENV PHP_XDEBUG_MODE debug
-ENV PHP_XDEBUG_START_WITH_REQUEST yes
-ENV PHP_XDEBUG_HOST docker.host.internal
-ENV PHP_XDEBUG_PORT 9000
-ENV PHP_XDEBUG_IDE_KEY PHPSTORM
 
 #USER root
 
-# Update and install packages
-RUN apk update && \
-    apk add \
-    wget \
-    vim \
-    unzip \
-    git \
-    rsync && \
-    rm -rf /var/cache/apk/*
-
-# Install dev tools
-RUN curl -sS https://getcomposer.org/installer -o /tmp/composer-setup.php && \
-    php /tmp/composer-setup.php --install-dir=/usr/local/bin --filename=composer && \
-    apk add --no-cache --virtual .build-deps $PHPIZE_DEPS && \
-    pecl install xdebug-3.0.0 || pecl install xdebug-2.6.0 && \
-    docker-php-ext-enable xdebug && \
-    apk del -f .build-deps && \
-    echo "xdebug.mode=${PHP_XDEBUG_MODE}" >> /usr/local/etc/php/conf.d/xdebug.ini && \
-    echo "xdebug.start_with_request=${PHP_XDEBUG_START_WITH_REQUEST}" >> /usr/local/etc/php/conf.d/xdebug.ini && \
-    echo "xdebug.client_host=${PHP_XDEBUG_HOST}" >> /usr/local/etc/php/conf.d/xdebug.ini && \
-    echo "xdebug.client_port=${PHP_XDEBUG_PORT}" >> /usr/local/etc/php/conf.d/xdebug.ini && \
-    echo "xdebug.idekey=${PHP_XDEBUG_IDE_KEY}" >> /usr/local/etc/php/conf.d/xdebug.ini && \
-    echo "xdebug.log=/var/log/xdebug.log" >> /usr/local/etc/php/conf.d/xdebug.ini && \
-    touch /var/log/xdebug.log && \
-    curl -L https://cs.symfony.com/download/php-cs-fixer-v2.phar -o /usr/local/bin/php-cs-fixer && \
-    chmod +x /usr/local/bin/php-cs-fixer && \
-    curl -L https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar -o /usr/local/bin/phpcs && \
-    curl -L https://squizlabs.github.io/PHP_CodeSniffer/phpcbf.phar -o /usr/local/bin/phpcbf && \
-    chmod +x /usr/local/bin/phpcs && \
-    chmod +x /usr/local/bin/phpcbf
+# Install pthreads
+RUN cd /tmp && \
+    git clone https://github.com/krakjoe/pthreads.git && \
+    cd pthreads && \
+    phpize && \
+    ./configure --with-php-config=/usr/local/bin/php-config && \
+    make && \
+    cp modules/pthreads.so /usr/lib64/php-zts/modules/ && \
+    echo "extension=pthreads.so" >> /etc/php-zts.d/pthreads.ini
 
 #USER ${SINDRIA_USER}

commit 446a28bd8d503cdb1bad2b8480c4ab7779b34eed
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Fri Jun 25 21:28:20 2021 +0200

    Added new local-zts tag

diff --git a/bitbucket-pipelines.yml b/bitbucket-pipelines.yml
index eb5ff36..8bcc00e 100644
--- a/bitbucket-pipelines.yml
+++ b/bitbucket-pipelines.yml
@@ -2,7 +2,7 @@ image: sindriainc/pipeline:latest
 
 pipelines:
   branches:
-    local:
+    local-zts:
       - step:
           name: Build and Publish Image
           script:
diff --git a/build_all.sh b/build_all.sh
index ef0df7b..059edea 100644
--- a/build_all.sh
+++ b/build_all.sh
@@ -13,7 +13,7 @@ fi
 IMAGE_NAME=$1
 TAG_VERSION=$2
 
-for PHP_VERSION in 7.0 7.1 7.2 7.4 8
+for PHP_VERSION in 7.3 7.4
 do
 	bash build.sh ${IMAGE_NAME} ${TAG_VERSION} ${PHP_VERSION}
   docker push ${IMAGE_NAME}:${TAG_VERSION}-${PHP_VERSION}
diff --git a/src/Dockerfile b/src/Dockerfile
index 5b82266..8969c11 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -1,5 +1,5 @@
 ARG TAG_SUFFIX
-FROM sindriainc/php:1.0.0-${TAG_SUFFIX}
+FROM sindriainc/php:zts-${TAG_SUFFIX}
 
 ARG TAG_VERSION
 ARG HOST_USER_UID

commit c1a31c76272e0f461957a771260c1f51c024aed7
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Fri Jun 25 21:22:14 2021 +0200

    Fix

diff --git a/build_all.sh b/build_all.sh
index ef0df7b..b47acab 100644
--- a/build_all.sh
+++ b/build_all.sh
@@ -13,7 +13,7 @@ fi
 IMAGE_NAME=$1
 TAG_VERSION=$2
 
-for PHP_VERSION in 7.0 7.1 7.2 7.4 8
+for PHP_VERSION in 7.0 7.1 7.2 7.3 7.4 8
 do
 	bash build.sh ${IMAGE_NAME} ${TAG_VERSION} ${PHP_VERSION}
   docker push ${IMAGE_NAME}:${TAG_VERSION}-${PHP_VERSION}

commit 744a17b7fc529eefa0241326fb21e80dd80db6c8
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Fri Jun 25 21:21:21 2021 +0200

    Fix

diff --git a/build_all.sh b/build_all.sh
index b5f4d36..059edea 100644
--- a/build_all.sh
+++ b/build_all.sh
@@ -13,7 +13,7 @@ fi
 IMAGE_NAME=$1
 TAG_VERSION=$2
 
-for PHP_VERSION in 7.4 8
+for PHP_VERSION in 7.3 7.4
 do
 	bash build.sh ${IMAGE_NAME} ${TAG_VERSION} ${PHP_VERSION}
   docker push ${IMAGE_NAME}:${TAG_VERSION}-${PHP_VERSION}

commit b2f2554ab65a132ee863ebcecb6375b7fedf474a
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Fri Jun 25 21:08:18 2021 +0200

    Added zts base

diff --git a/bitbucket-pipelines.yml b/bitbucket-pipelines.yml
index 921887b..9616591 100644
--- a/bitbucket-pipelines.yml
+++ b/bitbucket-pipelines.yml
@@ -9,7 +9,7 @@ pipelines:
             - echo -e "${BLUE}Login into registry...${NC}"
             - echo ${DOCKERHUB_PASSWORD} | docker login --username "${DOCKERHUB_USERNAME}" --password-stdin
             - echo -e "${BLUE}Building and publishing image...${NC}"
-            - bash build_all.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_TAG}
+            - bash build_all.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_BRANCH}
             - cowsay -f tux "Build and Publish Image"
           services:
             - docker

commit faf9ee7aacb6fa89be4e77f30928aca69db0f9d3
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Fri Jun 25 21:07:07 2021 +0200

    Added zts base

diff --git a/bitbucket-pipelines.yml b/bitbucket-pipelines.yml
index 2e818dd..921887b 100644
--- a/bitbucket-pipelines.yml
+++ b/bitbucket-pipelines.yml
@@ -1,8 +1,8 @@
 image: sindriainc/pipeline:latest
 
 pipelines:
-  tags:
-    '*':
+  branches:
+    zts:
       - step:
           name: Build and Publish Image
           script:
diff --git a/build_all.sh b/build_all.sh
index ef0df7b..b5f4d36 100644
--- a/build_all.sh
+++ b/build_all.sh
@@ -13,7 +13,7 @@ fi
 IMAGE_NAME=$1
 TAG_VERSION=$2
 
-for PHP_VERSION in 7.0 7.1 7.2 7.4 8
+for PHP_VERSION in 7.4 8
 do
 	bash build.sh ${IMAGE_NAME} ${TAG_VERSION} ${PHP_VERSION}
   docker push ${IMAGE_NAME}:${TAG_VERSION}-${PHP_VERSION}
diff --git a/src/Dockerfile b/src/Dockerfile
index 7f93d98..05f5081 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -1,5 +1,5 @@
 ARG TAG_SUFFIX
-FROM php:${TAG_SUFFIX}-alpine
+FROM php:${TAG_SUFFIX}-zts-alpine
 
 ARG TAG_VERSION
 ARG HOST_USER_UID

commit d799aea63a32cefd2b05f2097146f4209a28897a
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Sun Jun 6 18:43:22 2021 +0200

    Fix pipeline

diff --git a/bitbucket-pipelines.yml b/bitbucket-pipelines.yml
index fc55345..eb5ff36 100644
--- a/bitbucket-pipelines.yml
+++ b/bitbucket-pipelines.yml
@@ -6,6 +6,8 @@ pipelines:
       - step:
           name: Build and Publish Image
           script:
+            - echo -e "${BLUE}Login into registry...${NC}"
+            - echo ${DOCKERHUB_PASSWORD} | docker login --username "${DOCKERHUB_USERNAME}" --password-stdin
             - echo -e "${BLUE}Building and publishing image...${NC}"
             - bash build_all.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_BRANCH}
             - cowsay -f tux "Build and Publish Success"
diff --git a/readme.md b/readme.md
index da6f3b7..811700d 100644
--- a/readme.md
+++ b/readme.md
@@ -1,4 +1,4 @@
 # PHP
 
-A custom php base image with uid 1000
+A custom php base image with uid 1000.
 

commit 16dc3e72f83289c01f58b0b9d395c0fae811ecf5
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Sun Jun 6 18:40:39 2021 +0200

    Re-build

diff --git a/readme.md b/readme.md
index 811700d..da6f3b7 100644
--- a/readme.md
+++ b/readme.md
@@ -1,4 +1,4 @@
 # PHP
 
-A custom php base image with uid 1000.
+A custom php base image with uid 1000
 

commit 359a6e231a081203b66dac1aa913ced74db8c20f
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Sun Jun 6 17:03:22 2021 +0200

    Fix pipeline

diff --git a/bitbucket-pipelines.yml b/bitbucket-pipelines.yml
index 8e2a311..2e818dd 100644
--- a/bitbucket-pipelines.yml
+++ b/bitbucket-pipelines.yml
@@ -6,6 +6,8 @@ pipelines:
       - step:
           name: Build and Publish Image
           script:
+            - echo -e "${BLUE}Login into registry...${NC}"
+            - echo ${DOCKERHUB_PASSWORD} | docker login --username "${DOCKERHUB_USERNAME}" --password-stdin
             - echo -e "${BLUE}Building and publishing image...${NC}"
             - bash build_all.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_TAG}
             - cowsay -f tux "Build and Publish Image"

commit d6ff6bd74ba5c3d54c9751ba35de6144482fa792
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Sun Jun 6 16:41:37 2021 +0200

    Fix Ci

diff --git a/bitbucket-pipelines.yml b/bitbucket-pipelines.yml
index c43712c..8e2a311 100644
--- a/bitbucket-pipelines.yml
+++ b/bitbucket-pipelines.yml
@@ -1,78 +1,15 @@
-image: sindriainc/image-builder:latest
+image: sindriainc/pipeline:latest
 
 pipelines:
   tags:
     '*':
       - step:
-          name: Build Image
+          name: Build and Publish Image
           script:
-            - echo -e "${BLUE}Building image...${NC}"
-            #- bash build.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_TAG} 5.6
-            - bash build.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_TAG} 7.0
-            - bash build.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_TAG} 7.1
-            - bash build.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_TAG} 7.2
-            - bash build.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_TAG} 7.3
-            - bash build.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_TAG} 7.4
-            - bash build.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_TAG} 8
-            #- docker save ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-5.6 --output "${BITBUCKET_REPO_SLUG}-5.6.tar"
-            - docker save ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.0 --output "${BITBUCKET_REPO_SLUG}-7.0.tar"
-            - docker save ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.1 --output "${BITBUCKET_REPO_SLUG}-7.1.tar"
-            - docker save ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.2 --output "${BITBUCKET_REPO_SLUG}-7.2.tar"
-            - docker save ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.3 --output "${BITBUCKET_REPO_SLUG}-7.3.tar"
-            - docker save ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.4 --output "${BITBUCKET_REPO_SLUG}-7.4.tar"
-            - docker save ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-8 --output "${BITBUCKET_REPO_SLUG}-8.tar"
-            - cowsay -f tux "Build Success"
+            - echo -e "${BLUE}Building and publishing image...${NC}"
+            - bash build_all.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_TAG}
+            - cowsay -f tux "Build and Publish Image"
           services:
             - docker
           caches:
-            - docker
-          artifacts:
-            - "*.tar"
-            - "*.tar"
-            - "*.tar"
-            - "*.tar"
-            - "*.tar"
-            - "*.tar"
-      - step:
-          name: Push Image
-          script:
-            - echo -e "${BLUE}Loading cached image...${NC}"
-            #- docker load --input "${BITBUCKET_REPO_SLUG}-5.6.tar"
-            - docker load --input "${BITBUCKET_REPO_SLUG}-7.0.tar"
-            - docker load --input "${BITBUCKET_REPO_SLUG}-7.1.tar"
-            - docker load --input "${BITBUCKET_REPO_SLUG}-7.2.tar"
-            - docker load --input "${BITBUCKET_REPO_SLUG}-7.3.tar"
-            - docker load --input "${BITBUCKET_REPO_SLUG}-7.4.tar"
-            - docker load --input "${BITBUCKET_REPO_SLUG}-8.tar"
-            - echo -e "${BLUE}Tagging cached image...${NC}"
-            #- docker tag "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-5.6" "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-5.6"
-            - docker tag "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.0" "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.0"
-            - docker tag "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.1" "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.1"
-            - docker tag "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.2" "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.2"
-            - docker tag "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.3" "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.3"
-            - docker tag "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.4" "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.4"
-            - docker tag "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-8" "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-8"
-            - docker tag "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-8" "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:latest"
-            - echo -e "${BLUE}Login into registry...${NC}"
-            - echo ${DOCKERHUB_PASSWORD} | docker login --username "${DOCKERHUB_USERNAME}" --password-stdin
-            - echo -e "${BLUE}Pushing image into registry...${NC}"
-            #- docker push ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-5.6
-            - docker push ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.0
-            - docker push ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.1
-            - docker push ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.2
-            - docker push ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.3
-            - docker push ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.4
-            - docker push ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-8
-            - docker push ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:latest
-            - echo -e "${BLUE}Cleaning local registry...${NC}"
-            #- docker image rm ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-5.6
-            - docker image rm ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.0
-            - docker image rm ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.1
-            - docker image rm ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.2
-            - docker image rm ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.3
-            - docker image rm ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.4
-            - docker image rm ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-8
-            - docker image rm ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:latest
-            - cowsay -f dragon "Well Done! New docker image is now on your registry."
-          services:
             - docker
\ No newline at end of file

commit 78d5d713adeff105d339df5ede9ab385cd434c44
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Sun Jun 6 16:35:30 2021 +0200

    Added build_all.sh

diff --git a/build_all.sh b/build_all.sh
new file mode 100644
index 0000000..ef0df7b
--- /dev/null
+++ b/build_all.sh
@@ -0,0 +1,20 @@
+#!/usr/bin/env bash
+
+if [[ -z "$1" ]]; then
+    echo "Provide image name as first argument (eg. sindriainc/<repo-slug>)"
+    exit 1
+fi
+
+if [[ -z "$2" ]]; then
+    echo "Provide a tag version as second argument (eg. 1.0.0, local)"
+    exit 1
+fi
+
+IMAGE_NAME=$1
+TAG_VERSION=$2
+
+for PHP_VERSION in 7.0 7.1 7.2 7.4 8
+do
+	bash build.sh ${IMAGE_NAME} ${TAG_VERSION} ${PHP_VERSION}
+  docker push ${IMAGE_NAME}:${TAG_VERSION}-${PHP_VERSION}
+done
\ No newline at end of file

commit f952a185d2652017f255b964b2ed8a827e2f2bb4
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Sun Jun 6 16:33:18 2021 +0200

    Fix CI

diff --git a/bitbucket-pipelines.yml b/bitbucket-pipelines.yml
index e66d77c..fc55345 100644
--- a/bitbucket-pipelines.yml
+++ b/bitbucket-pipelines.yml
@@ -1,78 +1,15 @@
-image: sindriainc/image-builder:latest
+image: sindriainc/pipeline:latest
 
 pipelines:
   branches:
     local:
       - step:
-          name: Build Image
+          name: Build and Publish Image
           script:
-            - echo -e "${BLUE}Building image...${NC}"
-            #- bash build.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_BRANCH} 5.6
-            - bash build.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_BRANCH} 7.0
-            - bash build.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_BRANCH} 7.1
-            - bash build.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_BRANCH} 7.2
-            - bash build.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_BRANCH} 7.3
-            - bash build.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_BRANCH} 7.4
-            - bash build.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_BRANCH} 8
-            #- docker save ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-5.6 --output "${BITBUCKET_REPO_SLUG}-5.6.tar"
-            - docker save ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.0 --output "${BITBUCKET_REPO_SLUG}-7.0.tar"
-            - docker save ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.1 --output "${BITBUCKET_REPO_SLUG}-7.1.tar"
-            - docker save ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.2 --output "${BITBUCKET_REPO_SLUG}-7.2.tar"
-            - docker save ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.3 --output "${BITBUCKET_REPO_SLUG}-7.3.tar"
-            - docker save ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.4 --output "${BITBUCKET_REPO_SLUG}-7.4.tar"
-            - docker save ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-8 --output "${BITBUCKET_REPO_SLUG}-8.tar"
-            - cowsay -f tux "Build Success"
+            - echo -e "${BLUE}Building and publishing image...${NC}"
+            - bash build_all.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_BRANCH}
+            - cowsay -f tux "Build and Publish Success"
           services:
             - docker
           caches:
-            - docker
-          artifacts:
-            - "*.tar"
-            - "*.tar"
-            - "*.tar"
-            - "*.tar"
-            - "*.tar"
-            - "*.tar"
-      - step:
-          name: Push Image
-          script:
-            - echo -e "${BLUE}Loading cached image...${NC}"
-            #- docker load --input "${BITBUCKET_REPO_SLUG}-5.6.tar"
-            - docker load --input "${BITBUCKET_REPO_SLUG}-7.0.tar"
-            - docker load --input "${BITBUCKET_REPO_SLUG}-7.1.tar"
-            - docker load --input "${BITBUCKET_REPO_SLUG}-7.2.tar"
-            - docker load --input "${BITBUCKET_REPO_SLUG}-7.3.tar"
-            - docker load --input "${BITBUCKET_REPO_SLUG}-7.4.tar"
-            - docker load --input "${BITBUCKET_REPO_SLUG}-8.tar"
-            - echo -e "${BLUE}Tagging cached image...${NC}"
-            #- docker tag "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-5.6" "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-5.6"
-            - docker tag "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.0" "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.0"
-            - docker tag "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.1" "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.1"
-            - docker tag "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.2" "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.2"
-            - docker tag "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.3" "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.3"
-            - docker tag "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.4" "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.4"
-            - docker tag "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-8" "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-8"
-            - docker tag "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-8" "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:latest"
-            - echo -e "${BLUE}Login into registry...${NC}"
-            - echo ${DOCKERHUB_PASSWORD} | docker login --username "${DOCKERHUB_USERNAME}" --password-stdin
-            - echo -e "${BLUE}Pushing image into registry...${NC}"
-            #- docker push ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-5.6
-            - docker push ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.0
-            - docker push ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.1
-            - docker push ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.2
-            - docker push ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.3
-            - docker push ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.4
-            - docker push ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-8
-            - docker push ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:latest
-            - echo -e "${BLUE}Cleaning local registry...${NC}"
-            #- docker image rm ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-5.6
-            - docker image rm ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.0
-            - docker image rm ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.1
-            - docker image rm ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.2
-            - docker image rm ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.3
-            - docker image rm ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.4
-            - docker image rm ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-8
-            - docker image rm ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:latest
-            - cowsay -f dragon "Well Done! New docker image is now on your registry."
-          services:
             - docker
\ No newline at end of file

commit ed9bc9be2cac762f640bbc66e8ea6b77305f78a0
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Sun Jun 6 16:28:47 2021 +0200

    Added build_all.sh

diff --git a/build_all.sh b/build_all.sh
new file mode 100644
index 0000000..ef0df7b
--- /dev/null
+++ b/build_all.sh
@@ -0,0 +1,20 @@
+#!/usr/bin/env bash
+
+if [[ -z "$1" ]]; then
+    echo "Provide image name as first argument (eg. sindriainc/<repo-slug>)"
+    exit 1
+fi
+
+if [[ -z "$2" ]]; then
+    echo "Provide a tag version as second argument (eg. 1.0.0, local)"
+    exit 1
+fi
+
+IMAGE_NAME=$1
+TAG_VERSION=$2
+
+for PHP_VERSION in 7.0 7.1 7.2 7.4 8
+do
+	bash build.sh ${IMAGE_NAME} ${TAG_VERSION} ${PHP_VERSION}
+  docker push ${IMAGE_NAME}:${TAG_VERSION}-${PHP_VERSION}
+done
\ No newline at end of file

commit e163e2853425b44015c0a291a572bb5fb9af355a
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Sun Jun 6 16:10:56 2021 +0200

    cleanup

diff --git a/src/Dockerfile b/src/Dockerfile
index 27651bc..5b82266 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -8,7 +8,7 @@ ARG TIMEZONE
 LABEL \
 	name="php" \
 	image="sindriainc/php" \
-	tag="${TAG_VERSION}-${TAG_SUFFIX}-${TAG_ENV}" \
+	tag="${TAG_VERSION}-${TAG_SUFFIX}" \
 	vendor="sindria"
 
 ENV TZ=${TIMEZONE}

commit f10e1d4423999ba14fbed1493e3ae6c245dfbaab
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Sun Jun 6 16:09:42 2021 +0200

    Fix libs

diff --git a/src/Dockerfile b/src/Dockerfile
index 73eec65..7f93d98 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -126,7 +126,7 @@ RUN docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/i
         pecl install pdo_dblib || echo "Unsupported php version for pdo_dblib" && \
         pecl install swoole || echo "Swoole not supported" && \
         docker-php-ext-enable swoole || echo "Swoole missing" && \
-        apk del build-dependencies && \
+        #apk del build-dependencies && \
         rm -rf /var/cache/apk/*
 
 SHELL ["/bin/bash", "-c"]

commit 6f153c3e7cfc4d5fa78f9df7038c90e48744a775
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Sun Jun 6 02:30:06 2021 +0200

    Fix

diff --git a/src/Dockerfile b/src/Dockerfile
index 1e15ec7..73eec65 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -11,6 +11,7 @@ LABEL \
 	tag="${TAG_VERSION}-${TAG_SUFFIX}" \
 	vendor="sindria"
 
+ENV PATH "/root/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/home/sindria/.local/bin"
 ENV TZ=${TIMEZONE}
 ENV SINDRIA_USER="sindria"
 ENV SINDRIA_USER_HOME="/home/sindria"
@@ -71,6 +72,7 @@ RUN addgroup -S ${SINDRIA_USER} -g ${HOST_USER_UID} && adduser -s /bin/bash -S $
     ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone && \
     chmod -R 770 /var/www/app && \
     chown -R ${SINDRIA_USER}:${SINDRIA_USER} /var/www/app
+COPY resources/.bashrc ${SINDRIA_USER_HOME}
 
 WORKDIR /var/www/app
 
@@ -133,4 +135,4 @@ SHELL ["/bin/bash", "-c"]
 COPY resources/bin/entrypoint.sh /usr/local/bin/entrypoint.sh
 ENTRYPOINT ["/bin/bash", "entrypoint.sh"]
 
-#USER ${SINDRIA_USER}
+#USER ${SINDRIA_USER}
\ No newline at end of file
diff --git a/src/resources/.bashrc b/src/resources/.bashrc
new file mode 100644
index 0000000..25c901f
--- /dev/null
+++ b/src/resources/.bashrc
@@ -0,0 +1,2 @@
+
+export PATH=/root/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/home/sindria/.local/bin
\ No newline at end of file

commit 2f6b3b83fe0799d36fa357282dc046ca82cc0706
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Sat Jun 5 16:58:21 2021 +0200

    Fix

diff --git a/src/Dockerfile b/src/Dockerfile
index f3ad25f..27651bc 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -21,7 +21,7 @@ ENV PHP_XDEBUG_HOST docker.host.internal
 ENV PHP_XDEBUG_PORT 9000
 ENV PHP_XDEBUG_IDE_KEY PHPSTORM
 
-USER root
+#USER root
 
 # Update and install packages
 RUN apk update && \
@@ -54,4 +54,4 @@ RUN curl -sS https://getcomposer.org/installer -o /tmp/composer-setup.php && \
     chmod +x /usr/local/bin/phpcs && \
     chmod +x /usr/local/bin/phpcbf
 
-USER ${SINDRIA_USER}
+#USER ${SINDRIA_USER}

commit e1ffe57dce9aa40cf2044910595edb18d5b3843e
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Sat Jun 5 16:54:04 2021 +0200

    Fix

diff --git a/src/Dockerfile b/src/Dockerfile
index 27651bc..f3ad25f 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -21,7 +21,7 @@ ENV PHP_XDEBUG_HOST docker.host.internal
 ENV PHP_XDEBUG_PORT 9000
 ENV PHP_XDEBUG_IDE_KEY PHPSTORM
 
-#USER root
+USER root
 
 # Update and install packages
 RUN apk update && \
@@ -54,4 +54,4 @@ RUN curl -sS https://getcomposer.org/installer -o /tmp/composer-setup.php && \
     chmod +x /usr/local/bin/phpcs && \
     chmod +x /usr/local/bin/phpcbf
 
-#USER ${SINDRIA_USER}
+USER ${SINDRIA_USER}

commit 951e9ada95a3bd98040f49afbe41320ef1c3dc28
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Sat Jun 5 16:44:15 2021 +0200

    Fix user

diff --git a/src/Dockerfile b/src/Dockerfile
index 30c9adb..1e15ec7 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -133,4 +133,4 @@ SHELL ["/bin/bash", "-c"]
 COPY resources/bin/entrypoint.sh /usr/local/bin/entrypoint.sh
 ENTRYPOINT ["/bin/bash", "entrypoint.sh"]
 
-USER ${SINDRIA_USER}
+#USER ${SINDRIA_USER}

commit 2be9181cb63ccd0ed6c2f131002959f9c386aeaa
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Sat Jun 5 16:30:10 2021 +0200

    Fix

diff --git a/src/Dockerfile b/src/Dockerfile
index f3ad25f..27651bc 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -21,7 +21,7 @@ ENV PHP_XDEBUG_HOST docker.host.internal
 ENV PHP_XDEBUG_PORT 9000
 ENV PHP_XDEBUG_IDE_KEY PHPSTORM
 
-USER root
+#USER root
 
 # Update and install packages
 RUN apk update && \
@@ -54,4 +54,4 @@ RUN curl -sS https://getcomposer.org/installer -o /tmp/composer-setup.php && \
     chmod +x /usr/local/bin/phpcs && \
     chmod +x /usr/local/bin/phpcbf
 
-USER ${SINDRIA_USER}
+#USER ${SINDRIA_USER}

commit a2dc6bd3cc614bb2a46801c28b13df217d262026
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Sat Jun 5 16:25:00 2021 +0200

    Fix permissions

diff --git a/src/Dockerfile b/src/Dockerfile
index 7157af2..f3ad25f 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -21,6 +21,8 @@ ENV PHP_XDEBUG_HOST docker.host.internal
 ENV PHP_XDEBUG_PORT 9000
 ENV PHP_XDEBUG_IDE_KEY PHPSTORM
 
+USER root
+
 # Update and install packages
 RUN apk update && \
     apk add \
@@ -50,4 +52,6 @@ RUN curl -sS https://getcomposer.org/installer -o /tmp/composer-setup.php && \
     curl -L https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar -o /usr/local/bin/phpcs && \
     curl -L https://squizlabs.github.io/PHP_CodeSniffer/phpcbf.phar -o /usr/local/bin/phpcbf && \
     chmod +x /usr/local/bin/phpcs && \
-    chmod +x /usr/local/bin/phpcbf
\ No newline at end of file
+    chmod +x /usr/local/bin/phpcbf
+
+USER ${SINDRIA_USER}

commit 1a75b5ccc043dbea2893eee3d9833d0f807f5b45
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Sat Jun 5 16:20:07 2021 +0200

    set user sindria as default

diff --git a/src/Dockerfile b/src/Dockerfile
index 35f98b1..30c9adb 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -132,3 +132,5 @@ SHELL ["/bin/bash", "-c"]
 # Add and setup entrypoint
 COPY resources/bin/entrypoint.sh /usr/local/bin/entrypoint.sh
 ENTRYPOINT ["/bin/bash", "entrypoint.sh"]
+
+USER ${SINDRIA_USER}

commit bb5659c7a69978b23f229c9e9bb8c860c1939e51
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Sat Jun 5 15:56:28 2021 +0200

    Fix usermod

diff --git a/src/Dockerfile b/src/Dockerfile
index 4f5dca2..35f98b1 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -19,6 +19,7 @@ ENV PHP_VERSION=${TAG_SUFFIX}
 # Update and install packages
 RUN apk update && \
     apk add \
+    shadow \
     bash \
     curl \
     wget \
@@ -130,4 +131,4 @@ SHELL ["/bin/bash", "-c"]
 
 # Add and setup entrypoint
 COPY resources/bin/entrypoint.sh /usr/local/bin/entrypoint.sh
-ENTRYPOINT ["/bin/bash", "entrypoint.sh"]
\ No newline at end of file
+ENTRYPOINT ["/bin/bash", "entrypoint.sh"]

commit 6196bbec1fa479be88e3f86c654ae9e6b18e7828
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Fri Jun 4 18:47:01 2021 +0200

    Fix xdebug

diff --git a/src/Dockerfile b/src/Dockerfile
index cb1791f..7157af2 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -35,7 +35,7 @@ RUN apk update && \
 RUN curl -sS https://getcomposer.org/installer -o /tmp/composer-setup.php && \
     php /tmp/composer-setup.php --install-dir=/usr/local/bin --filename=composer && \
     apk add --no-cache --virtual .build-deps $PHPIZE_DEPS && \
-    pecl install xdebug-3.0.0 && \
+    pecl install xdebug-3.0.0 || pecl install xdebug-2.6.0 && \
     docker-php-ext-enable xdebug && \
     apk del -f .build-deps && \
     echo "xdebug.mode=${PHP_XDEBUG_MODE}" >> /usr/local/etc/php/conf.d/xdebug.ini && \

commit 777d52af47c27712959659f41fe6a71ac08960ce
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Fri Jun 4 17:11:44 2021 +0200

    Cleanup

diff --git a/src/resources/bin/entrypoint.sh b/src/resources/bin/entrypoint.sh
deleted file mode 100644
index 1f3a648..0000000
--- a/src/resources/bin/entrypoint.sh
+++ /dev/null
@@ -1,22 +0,0 @@
-#!/usr/bin/env bash
-
-CONTAINER_GATEWAY=`/sbin/ip route|awk '/default/ { print $3 }'`
-
-# Adding host machine hostname
-echo -e "\n# Hostname for gateway" >> /etc/hosts
-echo -e "${CONTAINER_GATEWAY}\tdocker.host.internal\n" >> /etc/hosts
-
-# Override xdebug ide key
-if [ "${PHP_XDEBUG_IDE_KEY}" != "PHPSTORM" ]; then
-    sed -i -E "s|PHPSTORM|${PHP_XDEBUG_IDE_KEY}|g" /etc/php/${PHP_VERSION}/cli/conf.d/20-xdebug.ini
-fi
-
-# Override timezone by env
-if [ "$TZ" != "" ] || [ "$TZ" != "Europe/Rome" ]; then
-    ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
-fi
-
-# Override host user uid by env
-if [ "$HOST_USER_UID" != "1000" ]; then
-    usermod -u $HOST_USER_UID sindria && groupmod sindria -g $HOST_USER_UID
-fi
\ No newline at end of file

commit 3f9c4264e718c7b6963122913e47f4945ca4bda7
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Fri Jun 4 17:10:17 2021 +0200

    Fix

diff --git a/src/Dockerfile b/src/Dockerfile
index 2cd49dc..4f5dca2 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -15,11 +15,6 @@ ENV TZ=${TIMEZONE}
 ENV SINDRIA_USER="sindria"
 ENV SINDRIA_USER_HOME="/home/sindria"
 ENV PHP_VERSION=${TAG_SUFFIX}
-ENV PHP_XDEBUG_MODE debug
-ENV PHP_XDEBUG_START_WITH_REQUEST yes
-ENV PHP_XDEBUG_HOST docker.host.internal
-ENV PHP_XDEBUG_PORT 9000
-ENV PHP_XDEBUG_IDE_KEY PHPSTORM
 
 # Update and install packages
 RUN apk update && \
diff --git a/src/resources/bin/entrypoint.sh b/src/resources/bin/entrypoint.sh
index 1f3a648..7cadc1b 100644
--- a/src/resources/bin/entrypoint.sh
+++ b/src/resources/bin/entrypoint.sh
@@ -8,7 +8,7 @@ echo -e "${CONTAINER_GATEWAY}\tdocker.host.internal\n" >> /etc/hosts
 
 # Override xdebug ide key
 if [ "${PHP_XDEBUG_IDE_KEY}" != "PHPSTORM" ]; then
-    sed -i -E "s|PHPSTORM|${PHP_XDEBUG_IDE_KEY}|g" /etc/php/${PHP_VERSION}/cli/conf.d/20-xdebug.ini
+    sed -i -E "s|PHPSTORM|${PHP_XDEBUG_IDE_KEY}|g" /usr/local/etc/php/conf.d/xdebug.ini
 fi
 
 # Override timezone by env

commit 8af6b34780d63c8d98b11ff98045876755e59f11
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Fri Jun 4 17:02:46 2021 +0200

    Added dev tools

diff --git a/bitbucket-pipelines.yml b/bitbucket-pipelines.yml
index c43712c..e66d77c 100644
--- a/bitbucket-pipelines.yml
+++ b/bitbucket-pipelines.yml
@@ -1,26 +1,26 @@
 image: sindriainc/image-builder:latest
 
 pipelines:
-  tags:
-    '*':
+  branches:
+    local:
       - step:
           name: Build Image
           script:
             - echo -e "${BLUE}Building image...${NC}"
-            #- bash build.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_TAG} 5.6
-            - bash build.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_TAG} 7.0
-            - bash build.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_TAG} 7.1
-            - bash build.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_TAG} 7.2
-            - bash build.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_TAG} 7.3
-            - bash build.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_TAG} 7.4
-            - bash build.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_TAG} 8
-            #- docker save ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-5.6 --output "${BITBUCKET_REPO_SLUG}-5.6.tar"
-            - docker save ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.0 --output "${BITBUCKET_REPO_SLUG}-7.0.tar"
-            - docker save ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.1 --output "${BITBUCKET_REPO_SLUG}-7.1.tar"
-            - docker save ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.2 --output "${BITBUCKET_REPO_SLUG}-7.2.tar"
-            - docker save ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.3 --output "${BITBUCKET_REPO_SLUG}-7.3.tar"
-            - docker save ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.4 --output "${BITBUCKET_REPO_SLUG}-7.4.tar"
-            - docker save ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-8 --output "${BITBUCKET_REPO_SLUG}-8.tar"
+            #- bash build.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_BRANCH} 5.6
+            - bash build.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_BRANCH} 7.0
+            - bash build.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_BRANCH} 7.1
+            - bash build.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_BRANCH} 7.2
+            - bash build.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_BRANCH} 7.3
+            - bash build.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_BRANCH} 7.4
+            - bash build.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_BRANCH} 8
+            #- docker save ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-5.6 --output "${BITBUCKET_REPO_SLUG}-5.6.tar"
+            - docker save ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.0 --output "${BITBUCKET_REPO_SLUG}-7.0.tar"
+            - docker save ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.1 --output "${BITBUCKET_REPO_SLUG}-7.1.tar"
+            - docker save ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.2 --output "${BITBUCKET_REPO_SLUG}-7.2.tar"
+            - docker save ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.3 --output "${BITBUCKET_REPO_SLUG}-7.3.tar"
+            - docker save ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.4 --output "${BITBUCKET_REPO_SLUG}-7.4.tar"
+            - docker save ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-8 --output "${BITBUCKET_REPO_SLUG}-8.tar"
             - cowsay -f tux "Build Success"
           services:
             - docker
@@ -45,33 +45,33 @@ pipelines:
             - docker load --input "${BITBUCKET_REPO_SLUG}-7.4.tar"
             - docker load --input "${BITBUCKET_REPO_SLUG}-8.tar"
             - echo -e "${BLUE}Tagging cached image...${NC}"
-            #- docker tag "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-5.6" "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-5.6"
-            - docker tag "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.0" "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.0"
-            - docker tag "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.1" "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.1"
-            - docker tag "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.2" "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.2"
-            - docker tag "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.3" "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.3"
-            - docker tag "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.4" "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.4"
-            - docker tag "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-8" "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-8"
-            - docker tag "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-8" "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:latest"
+            #- docker tag "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-5.6" "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-5.6"
+            - docker tag "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.0" "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.0"
+            - docker tag "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.1" "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.1"
+            - docker tag "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.2" "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.2"
+            - docker tag "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.3" "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.3"
+            - docker tag "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.4" "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.4"
+            - docker tag "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-8" "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-8"
+            - docker tag "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-8" "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:latest"
             - echo -e "${BLUE}Login into registry...${NC}"
             - echo ${DOCKERHUB_PASSWORD} | docker login --username "${DOCKERHUB_USERNAME}" --password-stdin
             - echo -e "${BLUE}Pushing image into registry...${NC}"
-            #- docker push ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-5.6
-            - docker push ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.0
-            - docker push ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.1
-            - docker push ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.2
-            - docker push ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.3
-            - docker push ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.4
-            - docker push ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-8
+            #- docker push ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-5.6
+            - docker push ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.0
+            - docker push ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.1
+            - docker push ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.2
+            - docker push ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.3
+            - docker push ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.4
+            - docker push ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-8
             - docker push ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:latest
             - echo -e "${BLUE}Cleaning local registry...${NC}"
-            #- docker image rm ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-5.6
-            - docker image rm ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.0
-            - docker image rm ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.1
-            - docker image rm ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.2
-            - docker image rm ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.3
-            - docker image rm ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.4
-            - docker image rm ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-8
+            #- docker image rm ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-5.6
+            - docker image rm ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.0
+            - docker image rm ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.1
+            - docker image rm ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.2
+            - docker image rm ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.3
+            - docker image rm ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-7.4
+            - docker image rm ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BRANCH}-8
             - docker image rm ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:latest
             - cowsay -f dragon "Well Done! New docker image is now on your registry."
           services:
diff --git a/src/Dockerfile b/src/Dockerfile
index 2cd49dc..cb1791f 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -1,5 +1,5 @@
 ARG TAG_SUFFIX
-FROM php:${TAG_SUFFIX}-alpine
+FROM sindriainc/php:1.0.0-${TAG_SUFFIX}
 
 ARG TAG_VERSION
 ARG HOST_USER_UID
@@ -8,7 +8,7 @@ ARG TIMEZONE
 LABEL \
 	name="php" \
 	image="sindriainc/php" \
-	tag="${TAG_VERSION}-${TAG_SUFFIX}" \
+	tag="${TAG_VERSION}-${TAG_SUFFIX}-${TAG_ENV}" \
 	vendor="sindria"
 
 ENV TZ=${TIMEZONE}
@@ -24,115 +24,30 @@ ENV PHP_XDEBUG_IDE_KEY PHPSTORM
 # Update and install packages
 RUN apk update && \
     apk add \
-    bash \
-    curl \
     wget \
+    vim \
+    unzip \
     git \
-    rsync \
-    ca-certificates \
-    tzdata && \
-    apk add --no-cache --virtual build-dependencies \
-    gcc \
-    g++ \
-    make \
-    autoconf \
-    libffi-dev \
-    libc-dev \
-    libressl-dev \
-    curl-dev \
-    bzip2-dev \
-    libzip-dev \
-    libsodium \
-    libsodium-dev \
-    postgresql-dev \
-    libjpeg-turbo \
-    freetype \
-    freetype-dev \
-    libpng \
-    libpng-dev \
-    icu \
-    icu-dev \
-    oniguruma-dev \
-    gettext-dev \
-    libxml2-dev \
-    libedit-dev \
-    libxslt-dev \
-    imap-dev \
-    krb5-dev \
-    tidyhtml-dev \
-    libmemcached-libs \
-    imagemagick \
-    imagemagick-libs \
-    imagemagick-dev \
-    libjpeg-turbo-dev && \
-    rm -rf /var/cache/apk/* && \
-    ln -s /usr/include/tidybuffio.h /usr/include/buffio.h
-
-# Setting app user, timezone and permissions
-RUN addgroup -S ${SINDRIA_USER} -g ${HOST_USER_UID} && adduser -s /bin/bash -S ${SINDRIA_USER} -u ${HOST_USER_UID} -G ${SINDRIA_USER} -h ${SINDRIA_USER_HOME} && \
-    mkdir -p /var/www && \
-    mkdir -p /var/www/app && \
-    ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone && \
-    chmod -R 770 /var/www/app && \
-    chown -R ${SINDRIA_USER}:${SINDRIA_USER} /var/www/app
-
-WORKDIR /var/www/app
-
-# Install php extensions
-RUN docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/include/ || docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ && \
-    #docker-php-ext-configure pdo_dblib --with-libdir=/lib/x86_64-linux-gnu && \
-    docker-php-ext-configure imap --with-kerberos --with-imap-ssl && \
-    pecl install imagick redis && \
-    docker-php-ext-install \
-        calendar \
-        ctype \
-        curl \
-        exif \
-        fileinfo \
-        ftp \
-        gd \
-        gettext \
-        iconv \
-        intl \
-        json \
-        mbstring \
-        mysqli \
-        pdo \
-        phar \
-        posix \
-        readline \
-        shmop \
-        sockets \
-        sysvmsg \
-        sysvshm \
-        tokenizer \
-        xml \
-        zip \
-        xsl \
-        bcmath \
-        imap \
-        soap \
-        pgsql \
-        pdo_pgsql \
-        pdo_mysql \
-        #pdo_dblib \
-        pcntl \
-        tidy && \
-        docker-php-ext-enable \
-        imagick \
-        redis \
-        #memcached \
-        opcache \
-        imap \
-        zip && \
-        pecl install pdo_dblib || echo "Unsupported php version for pdo_dblib" && \
-        pecl install swoole || echo "Swoole not supported" && \
-        docker-php-ext-enable swoole || echo "Swoole missing" && \
-        apk del build-dependencies && \
-        rm -rf /var/cache/apk/*
-
-SHELL ["/bin/bash", "-c"]
-
-# Add and setup entrypoint
-COPY resources/bin/entrypoint.sh /usr/local/bin/entrypoint.sh
-ENTRYPOINT ["/bin/bash", "entrypoint.sh"]
\ No newline at end of file
+    rsync && \
+    rm -rf /var/cache/apk/*
+
+# Install dev tools
+RUN curl -sS https://getcomposer.org/installer -o /tmp/composer-setup.php && \
+    php /tmp/composer-setup.php --install-dir=/usr/local/bin --filename=composer && \
+    apk add --no-cache --virtual .build-deps $PHPIZE_DEPS && \
+    pecl install xdebug-3.0.0 && \
+    docker-php-ext-enable xdebug && \
+    apk del -f .build-deps && \
+    echo "xdebug.mode=${PHP_XDEBUG_MODE}" >> /usr/local/etc/php/conf.d/xdebug.ini && \
+    echo "xdebug.start_with_request=${PHP_XDEBUG_START_WITH_REQUEST}" >> /usr/local/etc/php/conf.d/xdebug.ini && \
+    echo "xdebug.client_host=${PHP_XDEBUG_HOST}" >> /usr/local/etc/php/conf.d/xdebug.ini && \
+    echo "xdebug.client_port=${PHP_XDEBUG_PORT}" >> /usr/local/etc/php/conf.d/xdebug.ini && \
+    echo "xdebug.idekey=${PHP_XDEBUG_IDE_KEY}" >> /usr/local/etc/php/conf.d/xdebug.ini && \
+    echo "xdebug.log=/var/log/xdebug.log" >> /usr/local/etc/php/conf.d/xdebug.ini && \
+    touch /var/log/xdebug.log && \
+    curl -L https://cs.symfony.com/download/php-cs-fixer-v2.phar -o /usr/local/bin/php-cs-fixer && \
+    chmod +x /usr/local/bin/php-cs-fixer && \
+    curl -L https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar -o /usr/local/bin/phpcs && \
+    curl -L https://squizlabs.github.io/PHP_CodeSniffer/phpcbf.phar -o /usr/local/bin/phpcbf && \
+    chmod +x /usr/local/bin/phpcs && \
+    chmod +x /usr/local/bin/phpcbf
\ No newline at end of file

commit 4f3099758781cd5b8c43120d26a6561c5a83421d
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Fri Jun 4 16:24:00 2021 +0200

    Optimize image size

diff --git a/src/Dockerfile b/src/Dockerfile
index 60c5d9c..2cd49dc 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -24,13 +24,6 @@ ENV PHP_XDEBUG_IDE_KEY PHPSTORM
 # Update and install packages
 RUN apk update && \
     apk add \
-    gcc \
-    g++ \
-    make \
-    autoconf \
-    libffi-dev \
-    libc-dev \
-    libressl-dev \
     bash \
     curl \
     wget \
@@ -38,10 +31,14 @@ RUN apk update && \
     rsync \
     ca-certificates \
     tzdata && \
-    rm -rf /var/cache/apk/*
-
-# Install dependecies
-RUN apk add \
+    apk add --no-cache --virtual build-dependencies \
+    gcc \
+    g++ \
+    make \
+    autoconf \
+    libffi-dev \
+    libc-dev \
+    libressl-dev \
     curl-dev \
     bzip2-dev \
     libzip-dev \
@@ -120,19 +117,19 @@ RUN docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/i
         pdo_mysql \
         #pdo_dblib \
         pcntl \
-        tidy
-
-RUN docker-php-ext-enable \
+        tidy && \
+        docker-php-ext-enable \
         imagick \
         redis \
         #memcached \
         opcache \
         imap \
-        zip
-
-RUN pecl install pdo_dblib || echo "Unsupported php version for pdo_dblib" && \
-    pecl install swoole || echo "Swoole not supported" && \
-    docker-php-ext-enable swoole || echo "Swoole missing"
+        zip && \
+        pecl install pdo_dblib || echo "Unsupported php version for pdo_dblib" && \
+        pecl install swoole || echo "Swoole not supported" && \
+        docker-php-ext-enable swoole || echo "Swoole missing" && \
+        apk del build-dependencies && \
+        rm -rf /var/cache/apk/*
 
 SHELL ["/bin/bash", "-c"]
 

commit 386a537047af66af81bc4a028301e0defaa231f8
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Fri Jun 4 16:08:10 2021 +0200

    Fix

diff --git a/src/Dockerfile b/src/Dockerfile
index 82ce96f..60c5d9c 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -55,6 +55,7 @@ RUN apk add \
     libpng-dev \
     icu \
     icu-dev \
+    oniguruma-dev \
     gettext-dev \
     libxml2-dev \
     libedit-dev \
@@ -81,7 +82,7 @@ RUN addgroup -S ${SINDRIA_USER} -g ${HOST_USER_UID} && adduser -s /bin/bash -S $
 WORKDIR /var/www/app
 
 # Install php extensions
-RUN docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/include/ && \
+RUN docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/include/ || docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ && \
     #docker-php-ext-configure pdo_dblib --with-libdir=/lib/x86_64-linux-gnu && \
     docker-php-ext-configure imap --with-kerberos --with-imap-ssl && \
     pecl install imagick redis && \

commit 8de8aaae0bf7af563e0249d3867b387ca58a3850
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Fri Jun 4 15:39:31 2021 +0200

    Test

diff --git a/src/Dockerfile b/src/Dockerfile
index fb90a07..82ce96f 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -15,6 +15,11 @@ ENV TZ=${TIMEZONE}
 ENV SINDRIA_USER="sindria"
 ENV SINDRIA_USER_HOME="/home/sindria"
 ENV PHP_VERSION=${TAG_SUFFIX}
+ENV PHP_XDEBUG_MODE debug
+ENV PHP_XDEBUG_START_WITH_REQUEST yes
+ENV PHP_XDEBUG_HOST docker.host.internal
+ENV PHP_XDEBUG_PORT 9000
+ENV PHP_XDEBUG_IDE_KEY PHPSTORM
 
 # Update and install packages
 RUN apk update && \
@@ -76,7 +81,7 @@ RUN addgroup -S ${SINDRIA_USER} -g ${HOST_USER_UID} && adduser -s /bin/bash -S $
 WORKDIR /var/www/app
 
 # Install php extensions
-RUN docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ && \
+RUN docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/include/ && \
     #docker-php-ext-configure pdo_dblib --with-libdir=/lib/x86_64-linux-gnu && \
     docker-php-ext-configure imap --with-kerberos --with-imap-ssl && \
     pecl install imagick redis && \
@@ -128,4 +133,8 @@ RUN pecl install pdo_dblib || echo "Unsupported php version for pdo_dblib" && \
     pecl install swoole || echo "Swoole not supported" && \
     docker-php-ext-enable swoole || echo "Swoole missing"
 
-SHELL ["/bin/bash", "-c"]
\ No newline at end of file
+SHELL ["/bin/bash", "-c"]
+
+# Add and setup entrypoint
+COPY resources/bin/entrypoint.sh /usr/local/bin/entrypoint.sh
+ENTRYPOINT ["/bin/bash", "entrypoint.sh"]
\ No newline at end of file
diff --git a/src/resources/bin/entrypoint.sh b/src/resources/bin/entrypoint.sh
new file mode 100644
index 0000000..1f3a648
--- /dev/null
+++ b/src/resources/bin/entrypoint.sh
@@ -0,0 +1,22 @@
+#!/usr/bin/env bash
+
+CONTAINER_GATEWAY=`/sbin/ip route|awk '/default/ { print $3 }'`
+
+# Adding host machine hostname
+echo -e "\n# Hostname for gateway" >> /etc/hosts
+echo -e "${CONTAINER_GATEWAY}\tdocker.host.internal\n" >> /etc/hosts
+
+# Override xdebug ide key
+if [ "${PHP_XDEBUG_IDE_KEY}" != "PHPSTORM" ]; then
+    sed -i -E "s|PHPSTORM|${PHP_XDEBUG_IDE_KEY}|g" /etc/php/${PHP_VERSION}/cli/conf.d/20-xdebug.ini
+fi
+
+# Override timezone by env
+if [ "$TZ" != "" ] || [ "$TZ" != "Europe/Rome" ]; then
+    ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
+fi
+
+# Override host user uid by env
+if [ "$HOST_USER_UID" != "1000" ]; then
+    usermod -u $HOST_USER_UID sindria && groupmod sindria -g $HOST_USER_UID
+fi
\ No newline at end of file

commit bd9e64650d4b01235c12ba6ce47fa57fe2679313
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Fri Jun 4 14:57:07 2021 +0200

    Fix base php

diff --git a/src/Dockerfile b/src/Dockerfile
index 7dcea6a..fb90a07 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -37,6 +37,7 @@ RUN apk update && \
 
 # Install dependecies
 RUN apk add \
+    curl-dev \
     bzip2-dev \
     libzip-dev \
     libsodium \
@@ -56,6 +57,10 @@ RUN apk add \
     imap-dev \
     krb5-dev \
     tidyhtml-dev \
+    libmemcached-libs \
+    imagemagick \
+    imagemagick-libs \
+    imagemagick-dev \
     libjpeg-turbo-dev && \
     rm -rf /var/cache/apk/* && \
     ln -s /usr/include/tidybuffio.h /usr/include/buffio.h
@@ -74,10 +79,11 @@ WORKDIR /var/www/app
 RUN docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ && \
     #docker-php-ext-configure pdo_dblib --with-libdir=/lib/x86_64-linux-gnu && \
     docker-php-ext-configure imap --with-kerberos --with-imap-ssl && \
-    #pecl install imagick memcached redis swoole && \
+    pecl install imagick redis && \
     docker-php-ext-install \
         calendar \
         ctype \
+        curl \
         exif \
         fileinfo \
         ftp \
@@ -108,14 +114,18 @@ RUN docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-di
         pdo_mysql \
         #pdo_dblib \
         pcntl \
-        tidy && \
-        docker-php-ext-enable \
-        #imagick \
-        #redis \
+        tidy
+
+RUN docker-php-ext-enable \
+        imagick \
+        redis \
         #memcached \
         opcache \
-        #swoole \
         imap \
         zip
 
+RUN pecl install pdo_dblib || echo "Unsupported php version for pdo_dblib" && \
+    pecl install swoole || echo "Swoole not supported" && \
+    docker-php-ext-enable swoole || echo "Swoole missing"
+
 SHELL ["/bin/bash", "-c"]
\ No newline at end of file

commit 2b98755a8d49494e9c020f39d355f2bcea93ef91
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Thu Jun 3 16:30:13 2021 +0200

    Fix

diff --git a/src/Dockerfile b/src/Dockerfile
index e5a7bb6..7dcea6a 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -51,8 +51,14 @@ RUN apk add \
     icu-dev \
     gettext-dev \
     libxml2-dev \
+    libedit-dev \
+    libxslt-dev \
+    imap-dev \
+    krb5-dev \
+    tidyhtml-dev \
     libjpeg-turbo-dev && \
-    rm -rf /var/cache/apk/*
+    rm -rf /var/cache/apk/* && \
+    ln -s /usr/include/tidybuffio.h /usr/include/buffio.h
 
 # Setting app user, timezone and permissions
 RUN addgroup -S ${SINDRIA_USER} -g ${HOST_USER_UID} && adduser -s /bin/bash -S ${SINDRIA_USER} -u ${HOST_USER_UID} -G ${SINDRIA_USER} -h ${SINDRIA_USER_HOME} && \
@@ -65,11 +71,13 @@ RUN addgroup -S ${SINDRIA_USER} -g ${HOST_USER_UID} && adduser -s /bin/bash -S $
 WORKDIR /var/www/app
 
 # Install php extensions
-RUN docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \
-    && docker-php-ext-install \
+RUN docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ && \
+    #docker-php-ext-configure pdo_dblib --with-libdir=/lib/x86_64-linux-gnu && \
+    docker-php-ext-configure imap --with-kerberos --with-imap-ssl && \
+    #pecl install imagick memcached redis swoole && \
+    docker-php-ext-install \
         calendar \
         ctype \
-        dom \
         exif \
         fileinfo \
         ftp \
@@ -80,7 +88,6 @@ RUN docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-di
         json \
         mbstring \
         mysqli \
-        mysqlnd \
         pdo \
         phar \
         posix \
@@ -91,8 +98,6 @@ RUN docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-di
         sysvshm \
         tokenizer \
         xml \
-        xmlreader \
-        xmlwriter \
         zip \
         xsl \
         bcmath \
@@ -101,8 +106,16 @@ RUN docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-di
         pgsql \
         pdo_pgsql \
         pdo_mysql \
-        pdo_dblib \
+        #pdo_dblib \
         pcntl \
-        tidy
+        tidy && \
+        docker-php-ext-enable \
+        #imagick \
+        #redis \
+        #memcached \
+        opcache \
+        #swoole \
+        imap \
+        zip
 
 SHELL ["/bin/bash", "-c"]
\ No newline at end of file

commit f649d82a306f504acf9d8b38ef9113dc16ddb484
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Thu Jun 3 11:48:09 2021 +0200

    Fix

diff --git a/src/Dockerfile b/src/Dockerfile
index 2ed9f69..e5a7bb6 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -26,7 +26,6 @@ RUN apk update && \
     libffi-dev \
     libc-dev \
     libressl-dev \
-    libbz2-dev \
     bash \
     curl \
     wget \

commit 82aca0fc3104cb98936e5ef7baea7bbf1f3ddb07
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Thu Jun 3 11:45:53 2021 +0200

    Fix

diff --git a/src/Dockerfile b/src/Dockerfile
index a80dcad..2ed9f69 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -26,6 +26,7 @@ RUN apk update && \
     libffi-dev \
     libc-dev \
     libressl-dev \
+    libbz2-dev \
     bash \
     curl \
     wget \
@@ -50,7 +51,6 @@ RUN apk add \
     icu \
     icu-dev \
     gettext-dev \
-    libbz2-dev \
     libxml2-dev \
     libjpeg-turbo-dev && \
     rm -rf /var/cache/apk/*

commit 3a6fb48f59a81e37195bf6b88ad6c60b9da70e2b
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Thu Jun 3 11:42:58 2021 +0200

    Fix

diff --git a/src/Dockerfile b/src/Dockerfile
index 63be4b1..a80dcad 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -18,7 +18,7 @@ ENV PHP_VERSION=${TAG_SUFFIX}
 
 # Update and install packages
 RUN apk update && \
-    apk add --no-cache \
+    apk add \
     gcc \
     g++ \
     make \
@@ -32,6 +32,11 @@ RUN apk update && \
     git \
     rsync \
     ca-certificates \
+    tzdata && \
+    rm -rf /var/cache/apk/*
+
+# Install dependecies
+RUN apk add \
     bzip2-dev \
     libzip-dev \
     libsodium \
@@ -47,8 +52,7 @@ RUN apk update && \
     gettext-dev \
     libbz2-dev \
     libxml2-dev \
-    libjpeg-turbo-dev \
-    tzdata && \
+    libjpeg-turbo-dev && \
     rm -rf /var/cache/apk/*
 
 # Setting app user, timezone and permissions

commit 783259967ddf6482613fdecbdf835d0d15c41a25
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Thu Jun 3 11:35:55 2021 +0200

    Fix

diff --git a/src/Dockerfile b/src/Dockerfile
index ecbbd5b..63be4b1 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -32,6 +32,7 @@ RUN apk update && \
     git \
     rsync \
     ca-certificates \
+    bzip2-dev \
     libzip-dev \
     libsodium \
     libsodium-dev \

commit 6a708c6aa0be5b0c37fb58e16533cc33ac7c9ab2
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Thu Jun 3 11:31:56 2021 +0200

    Fix

diff --git a/src/Dockerfile b/src/Dockerfile
index 42ed385..ecbbd5b 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -18,7 +18,7 @@ ENV PHP_VERSION=${TAG_SUFFIX}
 
 # Update and install packages
 RUN apk update && \
-    apk add --no-cache --virtual build-dependencies \
+    apk add --no-cache \
     gcc \
     g++ \
     make \

commit 0f1e4fc4848a2f6ff9115e75118028f8a79ec82b
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Thu Jun 3 11:29:21 2021 +0200

    Fix

diff --git a/src/Dockerfile b/src/Dockerfile
index e6bb1f6..42ed385 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -18,9 +18,11 @@ ENV PHP_VERSION=${TAG_SUFFIX}
 
 # Update and install packages
 RUN apk update && \
-    apk add \
+    apk add --no-cache --virtual build-dependencies \
     gcc \
     g++ \
+    make \
+    autoconf \
     libffi-dev \
     libc-dev \
     libressl-dev \
@@ -32,16 +34,20 @@ RUN apk update && \
     ca-certificates \
     libzip-dev \
     libsodium \
-    libffi-dev \
+    libsodium-dev \
     postgresql-dev \
     libjpeg-turbo \
     freetype \
+    freetype-dev \
     libpng \
+    libpng-dev \
     icu \
     icu-dev \
     gettext-dev \
+    libbz2-dev \
+    libxml2-dev \
+    libjpeg-turbo-dev \
     tzdata && \
-    apk add --no-cache --virtual build-dependencies icu-dev libxml2-dev freetype-dev libpng-dev libjpeg-turbo-dev g++ make autoconf libsodium-dev && \
     rm -rf /var/cache/apk/*
 
 # Setting app user, timezone and permissions

commit 7536ff8a57d089b61b31adcbd1748a766490bb83
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Thu Jun 3 11:09:35 2021 +0200

    Fix

diff --git a/src/Dockerfile b/src/Dockerfile
index 0e14f4a..e6bb1f6 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -38,6 +38,8 @@ RUN apk update && \
     freetype \
     libpng \
     icu \
+    icu-dev \
+    gettext-dev \
     tzdata && \
     apk add --no-cache --virtual build-dependencies icu-dev libxml2-dev freetype-dev libpng-dev libjpeg-turbo-dev g++ make autoconf libsodium-dev && \
     rm -rf /var/cache/apk/*

commit 01e2936c8560d3419048f95508a893a7698116f4
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Thu Jun 3 11:02:40 2021 +0200

    Fix

diff --git a/src/Dockerfile b/src/Dockerfile
index ea3ff91..0e14f4a 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -57,7 +57,6 @@ RUN docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-di
     && docker-php-ext-install \
         calendar \
         ctype \
-        curl \
         dom \
         exif \
         fileinfo \

commit 63b9a8f2dc22d9f1cb5869bad5196af7754098cb
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Tue Jun 1 21:11:23 2021 +0200

    Fix

diff --git a/src/Dockerfile b/src/Dockerfile
index 77f87ed..ea3ff91 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -75,7 +75,6 @@ RUN docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-di
         posix \
         readline \
         shmop \
-        SimpleXML \
         sockets \
         sysvmsg \
         sysvshm \

commit 8b1c5b1f46c6255655c8c1ee5bd3998f471abfd4
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Tue Jun 1 21:09:27 2021 +0200

    Fix

diff --git a/src/Dockerfile b/src/Dockerfile
index 85f6ded..77f87ed 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -68,7 +68,6 @@ RUN docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-di
         intl \
         json \
         mbstring \
-        mysql \
         mysqli \
         mysqlnd \
         pdo \

commit 5dc55580829e46a69411337c27dd549ce6f1077f
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Tue Jun 1 21:06:15 2021 +0200

    Fix

diff --git a/src/Dockerfile b/src/Dockerfile
index 9da3434..85f6ded 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -54,7 +54,6 @@ WORKDIR /var/www/app
 
 # Install php extensions
 RUN docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \
-    && pecl install imagick memcached redis swoole \
     && docker-php-ext-install \
         calendar \
         ctype \

commit e3b3fa47a69003453776cb4bbf4a39f53890ca46
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Tue Jun 1 21:01:58 2021 +0200

    Fix

diff --git a/src/Dockerfile b/src/Dockerfile
index a1267f6..9da3434 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -95,13 +95,6 @@ RUN docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-di
         pdo_mysql \
         pdo_dblib \
         pcntl \
-        tidy \
-    && docker-php-ext-enable \
-        imagick \
-        redis \
-        memcached \
-        opcache \
-        swoole \
-        zip
+        tidy
 
 SHELL ["/bin/bash", "-c"]
\ No newline at end of file

commit 48188c510371b9f9362e02f4b5d60d0180e4a585
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Tue Jun 1 20:57:27 2021 +0200

    Fix

diff --git a/src/Dockerfile b/src/Dockerfile
index 11583ec..a1267f6 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -54,7 +54,6 @@ WORKDIR /var/www/app
 
 # Install php extensions
 RUN docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \
-    && docker-php-ext-configure pdo_dblib --with-libdir=/lib/x86_64-linux-gnu \
     && pecl install imagick memcached redis swoole \
     && docker-php-ext-install \
         calendar \

commit b70a4e3091b7075fca92338f5077ce1a2ed21f64
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Tue Jun 1 20:51:33 2021 +0200

    Fix

diff --git a/src/Dockerfile b/src/Dockerfile
index 217f58b..11583ec 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -53,8 +53,10 @@ RUN addgroup -S ${SINDRIA_USER} -g ${HOST_USER_UID} && adduser -s /bin/bash -S $
 WORKDIR /var/www/app
 
 # Install php extensions
-RUN pecl install imagick memcached redis swoole && \
-    docker-php-ext-install \
+RUN docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \
+    && docker-php-ext-configure pdo_dblib --with-libdir=/lib/x86_64-linux-gnu \
+    && pecl install imagick memcached redis swoole \
+    && docker-php-ext-install \
         calendar \
         ctype \
         curl \
@@ -101,8 +103,6 @@ RUN pecl install imagick memcached redis swoole && \
         memcached \
         opcache \
         swoole \
-        zip && \
-    docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ && \
-    docker-php-ext-configure pdo_dblib --with-libdir=/lib/x86_64-linux-gnu && \
+        zip
 
 SHELL ["/bin/bash", "-c"]
\ No newline at end of file

commit 3fab52d34342a305547be2c2c0c8ed964c6cc04b
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Tue Jun 1 19:54:09 2021 +0200

    Fix

diff --git a/src/Dockerfile b/src/Dockerfile
index ac960dc..217f58b 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -101,8 +101,8 @@ RUN pecl install imagick memcached redis swoole && \
         memcached \
         opcache \
         swoole \
-        zip
-    && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ && \
+        zip && \
+    docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ && \
     docker-php-ext-configure pdo_dblib --with-libdir=/lib/x86_64-linux-gnu && \
 
 SHELL ["/bin/bash", "-c"]
\ No newline at end of file

commit a6b751f689873c26714d60deb2e6f00fb382dcdd
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Tue Jun 1 19:52:03 2021 +0200

    Fix

diff --git a/src/Dockerfile b/src/Dockerfile
index 023c9d1..ac960dc 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -53,9 +53,7 @@ RUN addgroup -S ${SINDRIA_USER} -g ${HOST_USER_UID} && adduser -s /bin/bash -S $
 WORKDIR /var/www/app
 
 # Install php extensions
-RUN docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ && \
-    docker-php-ext-configure pdo_dblib --with-libdir=/lib/x86_64-linux-gnu && \
-    pecl install imagick memcached redis swoole && \
+RUN pecl install imagick memcached redis swoole && \
     docker-php-ext-install \
         calendar \
         ctype \
@@ -104,5 +102,7 @@ RUN docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-di
         opcache \
         swoole \
         zip
+    && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ && \
+    docker-php-ext-configure pdo_dblib --with-libdir=/lib/x86_64-linux-gnu && \
 
 SHELL ["/bin/bash", "-c"]
\ No newline at end of file

commit 6c0bf625446408b6cc28166a2545ff0a58d3b64c
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Tue Jun 1 19:47:33 2021 +0200

    Fix

diff --git a/src/Dockerfile b/src/Dockerfile
index 75f9441..023c9d1 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -38,7 +38,6 @@ RUN apk update && \
     freetype \
     libpng \
     icu \
-    ssmpt \
     tzdata && \
     apk add --no-cache --virtual build-dependencies icu-dev libxml2-dev freetype-dev libpng-dev libjpeg-turbo-dev g++ make autoconf libsodium-dev && \
     rm -rf /var/cache/apk/*

commit 8c7d36f12a4f815fb94b84147cc7b9af9791045f
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Tue Jun 1 19:45:46 2021 +0200

    FIx cagata

diff --git a/src/Dockerfile b/src/Dockerfile
index cee308b..75f9441 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -16,11 +16,6 @@ ENV SINDRIA_USER="sindria"
 ENV SINDRIA_USER_HOME="/home/sindria"
 ENV PHP_VERSION=${TAG_SUFFIX}
 
-
-RUN apk update \
-    &&
-    &&
-
 # Update and install packages
 RUN apk update && \
     apk add \

commit d6ddb48b2f8cc0e5f5cd20995e4233663f7ce857
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Tue Jun 1 19:43:18 2021 +0200

    Fix

diff --git a/src/Dockerfile b/src/Dockerfile
index 3c0ba80..cee308b 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -16,6 +16,11 @@ ENV SINDRIA_USER="sindria"
 ENV SINDRIA_USER_HOME="/home/sindria"
 ENV PHP_VERSION=${TAG_SUFFIX}
 
+
+RUN apk update \
+    &&
+    &&
+
 # Update and install packages
 RUN apk update && \
     apk add \
@@ -30,7 +35,17 @@ RUN apk update && \
     git \
     rsync \
     ca-certificates \
+    libzip-dev \
+    libsodium \
+    libffi-dev \
+    postgresql-dev \
+    libjpeg-turbo \
+    freetype \
+    libpng \
+    icu \
+    ssmpt \
     tzdata && \
+    apk add --no-cache --virtual build-dependencies icu-dev libxml2-dev freetype-dev libpng-dev libjpeg-turbo-dev g++ make autoconf libsodium-dev && \
     rm -rf /var/cache/apk/*
 
 # Setting app user, timezone and permissions
@@ -44,10 +59,10 @@ RUN addgroup -S ${SINDRIA_USER} -g ${HOST_USER_UID} && adduser -s /bin/bash -S $
 WORKDIR /var/www/app
 
 # Install php extensions
-RUN docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \
-    && docker-php-ext-configure pdo_dblib --with-libdir=/lib/x86_64-linux-gnu \
-    && pecl install imagick memcached redis swoole \
-    && docker-php-ext-install \
+RUN docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ && \
+    docker-php-ext-configure pdo_dblib --with-libdir=/lib/x86_64-linux-gnu && \
+    pecl install imagick memcached redis swoole && \
+    docker-php-ext-install \
         calendar \
         ctype \
         curl \

commit 2cfa2360c773885f274a72b46bc4c9fe986ba5d9
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Tue Jun 1 19:34:05 2021 +0200

    Fix

diff --git a/src/Dockerfile b/src/Dockerfile
index 864cec1..3c0ba80 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -44,10 +44,10 @@ RUN addgroup -S ${SINDRIA_USER} -g ${HOST_USER_UID} && adduser -s /bin/bash -S $
 WORKDIR /var/www/app
 
 # Install php extensions
-RUN docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ && \
-    docker-php-ext-configure pdo_dblib --with-libdir=/lib/x86_64-linux-gnu && \
-    pecl install imagick memcached redis swoole && \
-    docker-php-ext-install \
+RUN docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \
+    && docker-php-ext-configure pdo_dblib --with-libdir=/lib/x86_64-linux-gnu \
+    && pecl install imagick memcached redis swoole \
+    && docker-php-ext-install \
         calendar \
         ctype \
         curl \

commit 1fac366e3e52acbfa5a3c3cdca2c510ebfe3fd78
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Tue Jun 1 19:24:06 2021 +0200

    FIx

diff --git a/build.sh b/build.sh
index 1c9fda0..1a35463 100644
--- a/build.sh
+++ b/build.sh
@@ -15,6 +15,7 @@ if [[ -z "$3" ]]; then
     exit 1
 fi
 
+
 IMAGE_NAME=$1
 TAG_VERSION=$2
 TAG_SUFFIX=$3
diff --git a/src/Dockerfile b/src/Dockerfile
index 23a060f..864cec1 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -44,47 +44,56 @@ RUN addgroup -S ${SINDRIA_USER} -g ${HOST_USER_UID} && adduser -s /bin/bash -S $
 WORKDIR /var/www/app
 
 # Install php extensions
-RUN apk add \
-    php${PHP_VERSION} \
-    php${PHP_VERSION}-calendar \ 
-    php${PHP_VERSION}-ctype \
-    php${PHP_VERSION}-curl \
-    php${PHP_VERSION}-dom \
-    php${PHP_VERSION}-exif \
-    php${PHP_VERSION}-fileinfo \
-    php${PHP_VERSION}-ftp \
-    php${PHP_VERSION}-gd \
-    php${PHP_VERSION}-gettext \ 
-    php${PHP_VERSION}-iconv \
-    php${PHP_VERSION}-intl \
-    php${PHP_VERSION}-json \
-    php${PHP_VERSION}-mbstring \ 
-    php${PHP_VERSION}-mcrypt \
-    php${PHP_VERSION}-mysql \
-    php${PHP_VERSION}-mysqli \
-    php${PHP_VERSION}-mysqlnd \
-    php${PHP_VERSION}-PDO \
-    php${PHP_VERSION}-Phar \
-    php${PHP_VERSION}-posix \
-    php${PHP_VERSION}-readline \ 
-    php${PHP_VERSION}-shmop \
-    php${PHP_VERSION}-SimpleXML \ 
-    php${PHP_VERSION}-sockets \ 
-    php${PHP_VERSION}-sysvmsg \ 
-    php${PHP_VERSION}-sysvsem \ 
-    php${PHP_VERSION}-sysvshm \
-    php${PHP_VERSION}-tokenizer \ 
-    php${PHP_VERSION}-wddx \
-    php${PHP_VERSION}-xml \
-    php${PHP_VERSION}-xmlreader \
-    php${PHP_VERSION}-xmlwriter \
-    php${PHP_VERSION}-xsl \
-    php${PHP_VERSION}-opcache \ 
-    php${PHP_VERSION}-zip \
-    php${PHP_VERSION}-fpm \
-    php${PHP_VERSION}-bcmath \
-    php${PHP_VERSION}-imap \
-    php${PHP_VERSION}-soap && \
-    rm -rf /var/cache/apk/*
+RUN docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ && \
+    docker-php-ext-configure pdo_dblib --with-libdir=/lib/x86_64-linux-gnu && \
+    pecl install imagick memcached redis swoole && \
+    docker-php-ext-install \
+        calendar \
+        ctype \
+        curl \
+        dom \
+        exif \
+        fileinfo \
+        ftp \
+        gd \
+        gettext \
+        iconv \
+        intl \
+        json \
+        mbstring \
+        mysql \
+        mysqli \
+        mysqlnd \
+        pdo \
+        phar \
+        posix \
+        readline \
+        shmop \
+        SimpleXML \
+        sockets \
+        sysvmsg \
+        sysvshm \
+        tokenizer \
+        xml \
+        xmlreader \
+        xmlwriter \
+        zip \
+        xsl \
+        bcmath \
+        imap \
+        soap \
+        pgsql \
+        pdo_pgsql \
+        pdo_mysql \
+        pdo_dblib \
+        pcntl \
+        tidy \
+    && docker-php-ext-enable \
+        imagick \
+        redis \
+        memcached \
+        opcache \
+        swoole \
+        zip
 
 SHELL ["/bin/bash", "-c"]
\ No newline at end of file

commit ce4588506a9a306249068a10a7ad3398d82b0b24
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Tue Jun 1 18:46:55 2021 +0200

    Fix

diff --git a/bitbucket-pipelines.yml b/bitbucket-pipelines.yml
index dd5dd40..c43712c 100644
--- a/bitbucket-pipelines.yml
+++ b/bitbucket-pipelines.yml
@@ -7,14 +7,14 @@ pipelines:
           name: Build Image
           script:
             - echo -e "${BLUE}Building image...${NC}"
-            - bash build.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_TAG} 5.6
+            #- bash build.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_TAG} 5.6
             - bash build.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_TAG} 7.0
             - bash build.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_TAG} 7.1
             - bash build.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_TAG} 7.2
             - bash build.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_TAG} 7.3
             - bash build.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_TAG} 7.4
             - bash build.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_TAG} 8
-            - docker save ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-5.6 --output "${BITBUCKET_REPO_SLUG}-5.6.tar"
+            #- docker save ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-5.6 --output "${BITBUCKET_REPO_SLUG}-5.6.tar"
             - docker save ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.0 --output "${BITBUCKET_REPO_SLUG}-7.0.tar"
             - docker save ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.1 --output "${BITBUCKET_REPO_SLUG}-7.1.tar"
             - docker save ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.2 --output "${BITBUCKET_REPO_SLUG}-7.2.tar"
@@ -33,12 +33,11 @@ pipelines:
             - "*.tar"
             - "*.tar"
             - "*.tar"
-            - "*.tar"
       - step:
           name: Push Image
           script:
             - echo -e "${BLUE}Loading cached image...${NC}"
-            - docker load --input "${BITBUCKET_REPO_SLUG}-5.6.tar"
+            #- docker load --input "${BITBUCKET_REPO_SLUG}-5.6.tar"
             - docker load --input "${BITBUCKET_REPO_SLUG}-7.0.tar"
             - docker load --input "${BITBUCKET_REPO_SLUG}-7.1.tar"
             - docker load --input "${BITBUCKET_REPO_SLUG}-7.2.tar"
@@ -46,7 +45,7 @@ pipelines:
             - docker load --input "${BITBUCKET_REPO_SLUG}-7.4.tar"
             - docker load --input "${BITBUCKET_REPO_SLUG}-8.tar"
             - echo -e "${BLUE}Tagging cached image...${NC}"
-            - docker tag "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-5.6" "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-5.6"
+            #- docker tag "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-5.6" "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-5.6"
             - docker tag "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.0" "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.0"
             - docker tag "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.1" "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.1"
             - docker tag "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.2" "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.2"
@@ -57,7 +56,7 @@ pipelines:
             - echo -e "${BLUE}Login into registry...${NC}"
             - echo ${DOCKERHUB_PASSWORD} | docker login --username "${DOCKERHUB_USERNAME}" --password-stdin
             - echo -e "${BLUE}Pushing image into registry...${NC}"
-            - docker push ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-5.6
+            #- docker push ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-5.6
             - docker push ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.0
             - docker push ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.1
             - docker push ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.2
@@ -66,7 +65,7 @@ pipelines:
             - docker push ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-8
             - docker push ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:latest
             - echo -e "${BLUE}Cleaning local registry...${NC}"
-            - docker image rm ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-5.6
+            #- docker image rm ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-5.6
             - docker image rm ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.0
             - docker image rm ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.1
             - docker image rm ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.2
diff --git a/src/Dockerfile b/src/Dockerfile
index 70d9c28..23a060f 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -1,5 +1,5 @@
 ARG TAG_SUFFIX
-FROM php:${TAG_SUFFIX}
+FROM php:${TAG_SUFFIX}-alpine
 
 ARG TAG_VERSION
 ARG HOST_USER_UID

commit 7ad29253936d0b53fe739f05666422ff0d41eb02
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Tue Jun 1 18:40:53 2021 +0200

    Try without -alpine on FROM

diff --git a/src/Dockerfile b/src/Dockerfile
index 23a060f..70d9c28 100644
--- a/src/Dockerfile
+++ b/src/Dockerfile
@@ -1,5 +1,5 @@
 ARG TAG_SUFFIX
-FROM php:${TAG_SUFFIX}-alpine
+FROM php:${TAG_SUFFIX}
 
 ARG TAG_VERSION
 ARG HOST_USER_UID

commit 30e93e3dad2454710bc489b9c6789db6a7b22574
Author: lucapitzoi <luca.pitzoi@sindria.org>
Date:   Tue Jun 1 18:36:11 2021 +0200

    Init

diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..d45931c
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,8 @@
+.env
+docker-compose.yml
+storage/*
+
+!storage/data/.gitkeep
+!storage/logs/.gitkeep
+
+/.idea
diff --git a/LICENSE b/LICENSE
new file mode 100644
index 0000000..0f2f359
--- /dev/null
+++ b/LICENSE
@@ -0,0 +1,674 @@
+                    GNU GENERAL PUBLIC LICENSE
+                       Version 3, 29 June 2007
+
+ Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>
+ Everyone is permitted to copy and distribute verbatim copies
+ of this license document, but changing it is not allowed.
+
+                            Preamble
+
+  The GNU General Public License is a free, copyleft license for
+software and other kinds of works.
+
+  The licenses for most software and other practical works are designed
+to take away your freedom to share and change the works.  By contrast,
+the GNU General Public License is intended to guarantee your freedom to
+share and change all versions of a program--to make sure it remains free
+software for all its users.  We, the Free Software Foundation, use the
+GNU General Public License for most of our software; it applies also to
+any other work released this way by its authors.  You can apply it to
+your programs, too.
+
+  When we speak of free software, we are referring to freedom, not
+price.  Our General Public Licenses are designed to make sure that you
+have the freedom to distribute copies of free software (and charge for
+them if you wish), that you receive source code or can get it if you
+want it, that you can change the software or use pieces of it in new
+free programs, and that you know you can do these things.
+
+  To protect your rights, we need to prevent others from denying you
+these rights or asking you to surrender the rights.  Therefore, you have
+certain responsibilities if you distribute copies of the software, or if
+you modify it: responsibilities to respect the freedom of others.
+
+  For example, if you distribute copies of such a program, whether
+gratis or for a fee, you must pass on to the recipients the same
+freedoms that you received.  You must make sure that they, too, receive
+or can get the source code.  And you must show them these terms so they
+know their rights.
+
+  Developers that use the GNU GPL protect your rights with two steps:
+(1) assert copyright on the software, and (2) offer you this License
+giving you legal permission to copy, distribute and/or modify it.
+
+  For the developers' and authors' protection, the GPL clearly explains
+that there is no warranty for this free software.  For both users' and
+authors' sake, the GPL requires that modified versions be marked as
+changed, so that their problems will not be attributed erroneously to
+authors of previous versions.
+
+  Some devices are designed to deny users access to install or run
+modified versions of the software inside them, although the manufacturer
+can do so.  This is fundamentally incompatible with the aim of
+protecting users' freedom to change the software.  The systematic
+pattern of such abuse occurs in the area of products for individuals to
+use, which is precisely where it is most unacceptable.  Therefore, we
+have designed this version of the GPL to prohibit the practice for those
+products.  If such problems arise substantially in other domains, we
+stand ready to extend this provision to those domains in future versions
+of the GPL, as needed to protect the freedom of users.
+
+  Finally, every program is threatened constantly by software patents.
+States should not allow patents to restrict development and use of
+software on general-purpose computers, but in those that do, we wish to
+avoid the special danger that patents applied to a free program could
+make it effectively proprietary.  To prevent this, the GPL assures that
+patents cannot be used to render the program non-free.
+
+  The precise terms and conditions for copying, distribution and
+modification follow.
+
+                       TERMS AND CONDITIONS
+
+  0. Definitions.
+
+  "This License" refers to version 3 of the GNU General Public License.
+
+  "Copyright" also means copyright-like laws that apply to other kinds of
+works, such as semiconductor masks.
+
+  "The Program" refers to any copyrightable work licensed under this
+License.  Each licensee is addressed as "you".  "Licensees" and
+"recipients" may be individuals or organizations.
+
+  To "modify" a work means to copy from or adapt all or part of the work
+in a fashion requiring copyright permission, other than the making of an
+exact copy.  The resulting work is called a "modified version" of the
+earlier work or a work "based on" the earlier work.
+
+  A "covered work" means either the unmodified Program or a work based
+on the Program.
+
+  To "propagate" a work means to do anything with it that, without
+permission, would make you directly or secondarily liable for
+infringement under applicable copyright law, except executing it on a
+computer or modifying a private copy.  Propagation includes copying,
+distribution (with or without modification), making available to the
+public, and in some countries other activities as well.
+
+  To "convey" a work means any kind of propagation that enables other
+parties to make or receive copies.  Mere interaction with a user through
+a computer network, with no transfer of a copy, is not conveying.
+
+  An interactive user interface displays "Appropriate Legal Notices"
+to the extent that it includes a convenient and prominently visible
+feature that (1) displays an appropriate copyright notice, and (2)
+tells the user that there is no warranty for the work (except to the
+extent that warranties are provided), that licensees may convey the
+work under this License, and how to view a copy of this License.  If
+the interface presents a list of user commands or options, such as a
+menu, a prominent item in the list meets this criterion.
+
+  1. Source Code.
+
+  The "source code" for a work means the preferred form of the work
+for making modifications to it.  "Object code" means any non-source
+form of a work.
+
+  A "Standard Interface" means an interface that either is an official
+standard defined by a recognized standards body, or, in the case of
+interfaces specified for a particular programming language, one that
+is widely used among developers working in that language.
+
+  The "System Libraries" of an executable work include anything, other
+than the work as a whole, that (a) is included in the normal form of
+packaging a Major Component, but which is not part of that Major
+Component, and (b) serves only to enable use of the work with that
+Major Component, or to implement a Standard Interface for which an
+implementation is available to the public in source code form.  A
+"Major Component", in this context, means a major essential component
+(kernel, window system, and so on) of the specific operating system
+(if any) on which the executable work runs, or a compiler used to
+produce the work, or an object code interpreter used to run it.
+
+  The "Corresponding Source" for a work in object code form means all
+the source code needed to generate, install, and (for an executable
+work) run the object code and to modify the work, including scripts to
+control those activities.  However, it does not include the work's
+System Libraries, or general-purpose tools or generally available free
+programs which are used unmodified in performing those activities but
+which are not part of the work.  For example, Corresponding Source
+includes interface definition files associated with source files for
+the work, and the source code for shared libraries and dynamically
+linked subprograms that the work is specifically designed to require,
+such as by intimate data communication or control flow between those
+subprograms and other parts of the work.
+
+  The Corresponding Source need not include anything that users
+can regenerate automatically from other parts of the Corresponding
+Source.
+
+  The Corresponding Source for a work in source code form is that
+same work.
+
+  2. Basic Permissions.
+
+  All rights granted under this License are granted for the term of
+copyright on the Program, and are irrevocable provided the stated
+conditions are met.  This License explicitly affirms your unlimited
+permission to run the unmodified Program.  The output from running a
+covered work is covered by this License only if the output, given its
+content, constitutes a covered work.  This License acknowledges your
+rights of fair use or other equivalent, as provided by copyright law.
+
+  You may make, run and propagate covered works that you do not
+convey, without conditions so long as your license otherwise remains
+in force.  You may convey covered works to others for the sole purpose
+of having them make modifications exclusively for you, or provide you
+with facilities for running those works, provided that you comply with
+the terms of this License in conveying all material for which you do
+not control copyright.  Those thus making or running the covered works
+for you must do so exclusively on your behalf, under your direction
+and control, on terms that prohibit them from making any copies of
+your copyrighted material outside their relationship with you.
+
+  Conveying under any other circumstances is permitted solely under
+the conditions stated below.  Sublicensing is not allowed; section 10
+makes it unnecessary.
+
+  3. Protecting Users' Legal Rights From Anti-Circumvention Law.
+
+  No covered work shall be deemed part of an effective technological
+measure under any applicable law fulfilling obligations under article
+11 of the WIPO copyright treaty adopted on 20 December 1996, or
+similar laws prohibiting or restricting circumvention of such
+measures.
+
+  When you convey a covered work, you waive any legal power to forbid
+circumvention of technological measures to the extent such circumvention
+is effected by exercising rights under this License with respect to
+the covered work, and you disclaim any intention to limit operation or
+modification of the work as a means of enforcing, against the work's
+users, your or third parties' legal rights to forbid circumvention of
+technological measures.
+
+  4. Conveying Verbatim Copies.
+
+  You may convey verbatim copies of the Program's source code as you
+receive it, in any medium, provided that you conspicuously and
+appropriately publish on each copy an appropriate copyright notice;
+keep intact all notices stating that this License and any
+non-permissive terms added in accord with section 7 apply to the code;
+keep intact all notices of the absence of any warranty; and give all
+recipients a copy of this License along with the Program.
+
+  You may charge any price or no price for each copy that you convey,
+and you may offer support or warranty protection for a fee.
+
+  5. Conveying Modified Source Versions.
+
+  You may convey a work based on the Program, or the modifications to
+produce it from the Program, in the form of source code under the
+terms of section 4, provided that you also meet all of these conditions:
+
+    a) The work must carry prominent notices stating that you modified
+    it, and giving a relevant date.
+
+    b) The work must carry prominent notices stating that it is
+    released under this License and any conditions added under section
+    7.  This requirement modifies the requirement in section 4 to
+    "keep intact all notices".
+
+    c) You must license the entire work, as a whole, under this
+    License to anyone who comes into possession of a copy.  This
+    License will therefore apply, along with any applicable section 7
+    additional terms, to the whole of the work, and all its parts,
+    regardless of how they are packaged.  This License gives no
+    permission to license the work in any other way, but it does not
+    invalidate such permission if you have separately received it.
+
+    d) If the work has interactive user interfaces, each must display
+    Appropriate Legal Notices; however, if the Program has interactive
+    interfaces that do not display Appropriate Legal Notices, your
+    work need not make them do so.
+
+  A compilation of a covered work with other separate and independent
+works, which are not by their nature extensions of the covered work,
+and which are not combined with it such as to form a larger program,
+in or on a volume of a storage or distribution medium, is called an
+"aggregate" if the compilation and its resulting copyright are not
+used to limit the access or legal rights of the compilation's users
+beyond what the individual works permit.  Inclusion of a covered work
+in an aggregate does not cause this License to apply to the other
+parts of the aggregate.
+
+  6. Conveying Non-Source Forms.
+
+  You may convey a covered work in object code form under the terms
+of sections 4 and 5, provided that you also convey the
+machine-readable Corresponding Source under the terms of this License,
+in one of these ways:
+
+    a) Convey the object code in, or embodied in, a physical product
+    (including a physical distribution medium), accompanied by the
+    Corresponding Source fixed on a durable physical medium
+    customarily used for software interchange.
+
+    b) Convey the object code in, or embodied in, a physical product
+    (including a physical distribution medium), accompanied by a
+    written offer, valid for at least three years and valid for as
+    long as you offer spare parts or customer support for that product
+    model, to give anyone who possesses the object code either (1) a
+    copy of the Corresponding Source for all the software in the
+    product that is covered by this License, on a durable physical
+    medium customarily used for software interchange, for a price no
+    more than your reasonable cost of physically performing this
+    conveying of source, or (2) access to copy the
+    Corresponding Source from a network server at no charge.
+
+    c) Convey individual copies of the object code with a copy of the
+    written offer to provide the Corresponding Source.  This
+    alternative is allowed only occasionally and noncommercially, and
+    only if you received the object code with such an offer, in accord
+    with subsection 6b.
+
+    d) Convey the object code by offering access from a designated
+    place (gratis or for a charge), and offer equivalent access to the
+    Corresponding Source in the same way through the same place at no
+    further charge.  You need not require recipients to copy the
+    Corresponding Source along with the object code.  If the place to
+    copy the object code is a network server, the Corresponding Source
+    may be on a different server (operated by you or a third party)
+    that supports equivalent copying facilities, provided you maintain
+    clear directions next to the object code saying where to find the
+    Corresponding Source.  Regardless of what server hosts the
+    Corresponding Source, you remain obligated to ensure that it is
+    available for as long as needed to satisfy these requirements.
+
+    e) Convey the object code using peer-to-peer transmission, provided
+    you inform other peers where the object code and Corresponding
+    Source of the work are being offered to the general public at no
+    charge under subsection 6d.
+
+  A separable portion of the object code, whose source code is excluded
+from the Corresponding Source as a System Library, need not be
+included in conveying the object code work.
+
+  A "User Product" is either (1) a "consumer product", which means any
+tangible personal property which is normally used for personal, family,
+or household purposes, or (2) anything designed or sold for incorporation
+into a dwelling.  In determining whether a product is a consumer product,
+doubtful cases shall be resolved in favor of coverage.  For a particular
+product received by a particular user, "normally used" refers to a
+typical or common use of that class of product, regardless of the status
+of the particular user or of the way in which the particular user
+actually uses, or expects or is expected to use, the product.  A product
+is a consumer product regardless of whether the product has substantial
+commercial, industrial or non-consumer uses, unless such uses represent
+the only significant mode of use of the product.
+
+  "Installation Information" for a User Product means any methods,
+procedures, authorization keys, or other information required to install
+and execute modified versions of a covered work in that User Product from
+a modified version of its Corresponding Source.  The information must
+suffice to ensure that the continued functioning of the modified object
+code is in no case prevented or interfered with solely because
+modification has been made.
+
+  If you convey an object code work under this section in, or with, or
+specifically for use in, a User Product, and the conveying occurs as
+part of a transaction in which the right of possession and use of the
+User Product is transferred to the recipient in perpetuity or for a
+fixed term (regardless of how the transaction is characterized), the
+Corresponding Source conveyed under this section must be accompanied
+by the Installation Information.  But this requirement does not apply
+if neither you nor any third party retains the ability to install
+modified object code on the User Product (for example, the work has
+been installed in ROM).
+
+  The requirement to provide Installation Information does not include a
+requirement to continue to provide support service, warranty, or updates
+for a work that has been modified or installed by the recipient, or for
+the User Product in which it has been modified or installed.  Access to a
+network may be denied when the modification itself materially and
+adversely affects the operation of the network or violates the rules and
+protocols for communication across the network.
+
+  Corresponding Source conveyed, and Installation Information provided,
+in accord with this section must be in a format that is publicly
+documented (and with an implementation available to the public in
+source code form), and must require no special password or key for
+unpacking, reading or copying.
+
+  7. Additional Terms.
+
+  "Additional permissions" are terms that supplement the terms of this
+License by making exceptions from one or more of its conditions.
+Additional permissions that are applicable to the entire Program shall
+be treated as though they were included in this License, to the extent
+that they are valid under applicable law.  If additional permissions
+apply only to part of the Program, that part may be used separately
+under those permissions, but the entire Program remains governed by
+this License without regard to the additional permissions.
+
+  When you convey a copy of a covered work, you may at your option
+remove any additional permissions from that copy, or from any part of
+it.  (Additional permissions may be written to require their own
+removal in certain cases when you modify the work.)  You may place
+additional permissions on material, added by you to a covered work,
+for which you have or can give appropriate copyright permission.
+
+  Notwithstanding any other provision of this License, for material you
+add to a covered work, you may (if authorized by the copyright holders of
+that material) supplement the terms of this License with terms:
+
+    a) Disclaiming warranty or limiting liability differently from the
+    terms of sections 15 and 16 of this License; or
+
+    b) Requiring preservation of specified reasonable legal notices or
+    author attributions in that material or in the Appropriate Legal
+    Notices displayed by works containing it; or
+
+    c) Prohibiting misrepresentation of the origin of that material, or
+    requiring that modified versions of such material be marked in
+    reasonable ways as different from the original version; or
+
+    d) Limiting the use for publicity purposes of names of licensors or
+    authors of the material; or
+
+    e) Declining to grant rights under trademark law for use of some
+    trade names, trademarks, or service marks; or
+
+    f) Requiring indemnification of licensors and authors of that
+    material by anyone who conveys the material (or modified versions of
+    it) with contractual assumptions of liability to the recipient, for
+    any liability that these contractual assumptions directly impose on
+    those licensors and authors.
+
+  All other non-permissive additional terms are considered "further
+restrictions" within the meaning of section 10.  If the Program as you
+received it, or any part of it, contains a notice stating that it is
+governed by this License along with a term that is a further
+restriction, you may remove that term.  If a license document contains
+a further restriction but permits relicensing or conveying under this
+License, you may add to a covered work material governed by the terms
+of that license document, provided that the further restriction does
+not survive such relicensing or conveying.
+
+  If you add terms to a covered work in accord with this section, you
+must place, in the relevant source files, a statement of the
+additional terms that apply to those files, or a notice indicating
+where to find the applicable terms.
+
+  Additional terms, permissive or non-permissive, may be stated in the
+form of a separately written license, or stated as exceptions;
+the above requirements apply either way.
+
+  8. Termination.
+
+  You may not propagate or modify a covered work except as expressly
+provided under this License.  Any attempt otherwise to propagate or
+modify it is void, and will automatically terminate your rights under
+this License (including any patent licenses granted under the third
+paragraph of section 11).
+
+  However, if you cease all violation of this License, then your
+license from a particular copyright holder is reinstated (a)
+provisionally, unless and until the copyright holder explicitly and
+finally terminates your license, and (b) permanently, if the copyright
+holder fails to notify you of the violation by some reasonable means
+prior to 60 days after the cessation.
+
+  Moreover, your license from a particular copyright holder is
+reinstated permanently if the copyright holder notifies you of the
+violation by some reasonable means, this is the first time you have
+received notice of violation of this License (for any work) from that
+copyright holder, and you cure the violation prior to 30 days after
+your receipt of the notice.
+
+  Termination of your rights under this section does not terminate the
+licenses of parties who have received copies or rights from you under
+this License.  If your rights have been terminated and not permanently
+reinstated, you do not qualify to receive new licenses for the same
+material under section 10.
+
+  9. Acceptance Not Required for Having Copies.
+
+  You are not required to accept this License in order to receive or
+run a copy of the Program.  Ancillary propagation of a covered work
+occurring solely as a consequence of using peer-to-peer transmission
+to receive a copy likewise does not require acceptance.  However,
+nothing other than this License grants you permission to propagate or
+modify any covered work.  These actions infringe copyright if you do
+not accept this License.  Therefore, by modifying or propagating a
+covered work, you indicate your acceptance of this License to do so.
+
+  10. Automatic Licensing of Downstream Recipients.
+
+  Each time you convey a covered work, the recipient automatically
+receives a license from the original licensors, to run, modify and
+propagate that work, subject to this License.  You are not responsible
+for enforcing compliance by third parties with this License.
+
+  An "entity transaction" is a transaction transferring control of an
+organization, or substantially all assets of one, or subdividing an
+organization, or merging organizations.  If propagation of a covered
+work results from an entity transaction, each party to that
+transaction who receives a copy of the work also receives whatever
+licenses to the work the party's predecessor in interest had or could
+give under the previous paragraph, plus a right to possession of the
+Corresponding Source of the work from the predecessor in interest, if
+the predecessor has it or can get it with reasonable efforts.
+
+  You may not impose any further restrictions on the exercise of the
+rights granted or affirmed under this License.  For example, you may
+not impose a license fee, royalty, or other charge for exercise of
+rights granted under this License, and you may not initiate litigation
+(including a cross-claim or counterclaim in a lawsuit) alleging that
+any patent claim is infringed by making, using, selling, offering for
+sale, or importing the Program or any portion of it.
+
+  11. Patents.
+
+  A "contributor" is a copyright holder who authorizes use under this
+License of the Program or a work on which the Program is based.  The
+work thus licensed is called the contributor's "contributor version".
+
+  A contributor's "essential patent claims" are all patent claims
+owned or controlled by the contributor, whether already acquired or
+hereafter acquired, that would be infringed by some manner, permitted
+by this License, of making, using, or selling its contributor version,
+but do not include claims that would be infringed only as a
+consequence of further modification of the contributor version.  For
+purposes of this definition, "control" includes the right to grant
+patent sublicenses in a manner consistent with the requirements of
+this License.
+
+  Each contributor grants you a non-exclusive, worldwide, royalty-free
+patent license under the contributor's essential patent claims, to
+make, use, sell, offer for sale, import and otherwise run, modify and
+propagate the contents of its contributor version.
+
+  In the following three paragraphs, a "patent license" is any express
+agreement or commitment, however denominated, not to enforce a patent
+(such as an express permission to practice a patent or covenant not to
+sue for patent infringement).  To "grant" such a patent license to a
+party means to make such an agreement or commitment not to enforce a
+patent against the party.
+
+  If you convey a covered work, knowingly relying on a patent license,
+and the Corresponding Source of the work is not available for anyone
+to copy, free of charge and under the terms of this License, through a
+publicly available network server or other readily accessible means,
+then you must either (1) cause the Corresponding Source to be so
+available, or (2) arrange to deprive yourself of the benefit of the
+patent license for this particular work, or (3) arrange, in a manner
+consistent with the requirements of this License, to extend the patent
+license to downstream recipients.  "Knowingly relying" means you have
+actual knowledge that, but for the patent license, your conveying the
+covered work in a country, or your recipient's use of the covered work
+in a country, would infringe one or more identifiable patents in that
+country that you have reason to believe are valid.
+
+  If, pursuant to or in connection with a single transaction or
+arrangement, you convey, or propagate by procuring conveyance of, a
+covered work, and grant a patent license to some of the parties
+receiving the covered work authorizing them to use, propagate, modify
+or convey a specific copy of the covered work, then the patent license
+you grant is automatically extended to all recipients of the covered
+work and works based on it.
+
+  A patent license is "discriminatory" if it does not include within
+the scope of its coverage, prohibits the exercise of, or is
+conditioned on the non-exercise of one or more of the rights that are
+specifically granted under this License.  You may not convey a covered
+work if you are a party to an arrangement with a third party that is
+in the business of distributing software, under which you make payment
+to the third party based on the extent of your activity of conveying
+the work, and under which the third party grants, to any of the
+parties who would receive the covered work from you, a discriminatory
+patent license (a) in connection with copies of the covered work
+conveyed by you (or copies made from those copies), or (b) primarily
+for and in connection with specific products or compilations that
+contain the covered work, unless you entered into that arrangement,
+or that patent license was granted, prior to 28 March 2007.
+
+  Nothing in this License shall be construed as excluding or limiting
+any implied license or other defenses to infringement that may
+otherwise be available to you under applicable patent law.
+
+  12. No Surrender of Others' Freedom.
+
+  If conditions are imposed on you (whether by court order, agreement or
+otherwise) that contradict the conditions of this License, they do not
+excuse you from the conditions of this License.  If you cannot convey a
+covered work so as to satisfy simultaneously your obligations under this
+License and any other pertinent obligations, then as a consequence you may
+not convey it at all.  For example, if you agree to terms that obligate you
+to collect a royalty for further conveying from those to whom you convey
+the Program, the only way you could satisfy both those terms and this
+License would be to refrain entirely from conveying the Program.
+
+  13. Use with the GNU Affero General Public License.
+
+  Notwithstanding any other provision of this License, you have
+permission to link or combine any covered work with a work licensed
+under version 3 of the GNU Affero General Public License into a single
+combined work, and to convey the resulting work.  The terms of this
+License will continue to apply to the part which is the covered work,
+but the special requirements of the GNU Affero General Public License,
+section 13, concerning interaction through a network will apply to the
+combination as such.
+
+  14. Revised Versions of this License.
+
+  The Free Software Foundation may publish revised and/or new versions of
+the GNU General Public License from time to time.  Such new versions will
+be similar in spirit to the present version, but may differ in detail to
+address new problems or concerns.
+
+  Each version is given a distinguishing version number.  If the
+Program specifies that a certain numbered version of the GNU General
+Public License "or any later version" applies to it, you have the
+option of following the terms and conditions either of that numbered
+version or of any later version published by the Free Software
+Foundation.  If the Program does not specify a version number of the
+GNU General Public License, you may choose any version ever published
+by the Free Software Foundation.
+
+  If the Program specifies that a proxy can decide which future
+versions of the GNU General Public License can be used, that proxy's
+public statement of acceptance of a version permanently authorizes you
+to choose that version for the Program.
+
+  Later license versions may give you additional or different
+permissions.  However, no additional obligations are imposed on any
+author or copyright holder as a result of your choosing to follow a
+later version.
+
+  15. Disclaimer of Warranty.
+
+  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY
+APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT
+HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY
+OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,
+THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM
+IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF
+ALL NECESSARY SERVICING, REPAIR OR CORRECTION.
+
+  16. Limitation of Liability.
+
+  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
+WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS
+THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY
+GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE
+USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF
+DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD
+PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),
+EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF
+SUCH DAMAGES.
+
+  17. Interpretation of Sections 15 and 16.
+
+  If the disclaimer of warranty and limitation of liability provided
+above cannot be given local legal effect according to their terms,
+reviewing courts shall apply local law that most closely approximates
+an absolute waiver of all civil liability in connection with the
+Program, unless a warranty or assumption of liability accompanies a
+copy of the Program in return for a fee.
+
+                     END OF TERMS AND CONDITIONS
+
+            How to Apply These Terms to Your New Programs
+
+  If you develop a new program, and you want it to be of the greatest
+possible use to the public, the best way to achieve this is to make it
+free software which everyone can redistribute and change under these terms.
+
+  To do so, attach the following notices to the program.  It is safest
+to attach them to the start of each source file to most effectively
+state the exclusion of warranty; and each file should have at least
+the "copyright" line and a pointer to where the full notice is found.
+
+    python
+    Copyright (C) 2020  docker-images
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+
+Also add information on how to contact you by electronic and paper mail.
+
+  If the program does terminal interaction, make it output a short
+notice like this when it starts in an interactive mode:
+
+    python  Copyright (C) 2020  docker-images
+    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
+    This is free software, and you are welcome to redistribute it
+    under certain conditions; type `show c' for details.
+
+The hypothetical commands `show w' and `show c' should show the appropriate
+parts of the General Public License.  Of course, your program's commands
+might be different; for a GUI interface, you would use an "about box".
+
+  You should also get your employer (if you work as a programmer) or school,
+if any, to sign a "copyright disclaimer" for the program, if necessary.
+For more information on this, and how to apply and follow the GNU GPL, see
+<http://www.gnu.org/licenses/>.
+
+  The GNU General Public License does not permit incorporating your program
+into proprietary programs.  If your program is a subroutine library, you
+may consider it more useful to permit linking proprietary applications with
+the library.  If this is what you want to do, use the GNU Lesser General
+Public License instead of this License.  But first, please read
+<http://www.gnu.org/philosophy/why-not-lgpl.html>.
diff --git a/bitbucket-pipelines.yml b/bitbucket-pipelines.yml
new file mode 100644
index 0000000..dd5dd40
--- /dev/null
+++ b/bitbucket-pipelines.yml
@@ -0,0 +1,79 @@
+image: sindriainc/image-builder:latest
+
+pipelines:
+  tags:
+    '*':
+      - step:
+          name: Build Image
+          script:
+            - echo -e "${BLUE}Building image...${NC}"
+            - bash build.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_TAG} 5.6
+            - bash build.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_TAG} 7.0
+            - bash build.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_TAG} 7.1
+            - bash build.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_TAG} 7.2
+            - bash build.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_TAG} 7.3
+            - bash build.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_TAG} 7.4
+            - bash build.sh ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG} ${BITBUCKET_TAG} 8
+            - docker save ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-5.6 --output "${BITBUCKET_REPO_SLUG}-5.6.tar"
+            - docker save ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.0 --output "${BITBUCKET_REPO_SLUG}-7.0.tar"
+            - docker save ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.1 --output "${BITBUCKET_REPO_SLUG}-7.1.tar"
+            - docker save ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.2 --output "${BITBUCKET_REPO_SLUG}-7.2.tar"
+            - docker save ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.3 --output "${BITBUCKET_REPO_SLUG}-7.3.tar"
+            - docker save ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.4 --output "${BITBUCKET_REPO_SLUG}-7.4.tar"
+            - docker save ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-8 --output "${BITBUCKET_REPO_SLUG}-8.tar"
+            - cowsay -f tux "Build Success"
+          services:
+            - docker
+          caches:
+            - docker
+          artifacts:
+            - "*.tar"
+            - "*.tar"
+            - "*.tar"
+            - "*.tar"
+            - "*.tar"
+            - "*.tar"
+            - "*.tar"
+      - step:
+          name: Push Image
+          script:
+            - echo -e "${BLUE}Loading cached image...${NC}"
+            - docker load --input "${BITBUCKET_REPO_SLUG}-5.6.tar"
+            - docker load --input "${BITBUCKET_REPO_SLUG}-7.0.tar"
+            - docker load --input "${BITBUCKET_REPO_SLUG}-7.1.tar"
+            - docker load --input "${BITBUCKET_REPO_SLUG}-7.2.tar"
+            - docker load --input "${BITBUCKET_REPO_SLUG}-7.3.tar"
+            - docker load --input "${BITBUCKET_REPO_SLUG}-7.4.tar"
+            - docker load --input "${BITBUCKET_REPO_SLUG}-8.tar"
+            - echo -e "${BLUE}Tagging cached image...${NC}"
+            - docker tag "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-5.6" "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-5.6"
+            - docker tag "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.0" "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.0"
+            - docker tag "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.1" "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.1"
+            - docker tag "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.2" "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.2"
+            - docker tag "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.3" "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.3"
+            - docker tag "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.4" "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.4"
+            - docker tag "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-8" "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-8"
+            - docker tag "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-8" "${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:latest"
+            - echo -e "${BLUE}Login into registry...${NC}"
+            - echo ${DOCKERHUB_PASSWORD} | docker login --username "${DOCKERHUB_USERNAME}" --password-stdin
+            - echo -e "${BLUE}Pushing image into registry...${NC}"
+            - docker push ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-5.6
+            - docker push ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.0
+            - docker push ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.1
+            - docker push ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.2
+            - docker push ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.3
+            - docker push ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.4
+            - docker push ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-8
+            - docker push ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:latest
+            - echo -e "${BLUE}Cleaning local registry...${NC}"
+            - docker image rm ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-5.6
+            - docker image rm ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.0
+            - docker image rm ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.1
+            - docker image rm ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.2
+            - docker image rm ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.3
+            - docker image rm ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-7.4
+            - docker image rm ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_TAG}-8
+            - docker image rm ${DOCKERHUB_NAMESPACE}/${BITBUCKET_REPO_SLUG}:latest
+            - cowsay -f dragon "Well Done! New docker image is now on your registry."
+          services:
+            - docker
\ No newline at end of file
diff --git a/build.sh b/build.sh
new file mode 100644
index 0000000..1c9fda0
--- /dev/null
+++ b/build.sh
@@ -0,0 +1,32 @@
+#!/usr/bin/env bash
+
+if [[ -z "$1" ]]; then
+    echo "Provide image name as first argument (eg. sindriainc/<repo-slug>)"
+    exit 1
+fi
+
+if [[ -z "$2" ]]; then
+    echo "Provide a tag version as second argument (eg. 1.0.0)"
+    exit 1
+fi
+
+if [[ -z "$3" ]]; then
+    echo "Provide a tag suffix as third argument (eg. 3.7)"
+    exit 1
+fi
+
+IMAGE_NAME=$1
+TAG_VERSION=$2
+TAG_SUFFIX=$3
+
+HOST_USER_UID=1000
+TIMEZONE=Europe/Rome
+
+docker build ./src \
+    --tag ${IMAGE_NAME}:${TAG_VERSION}-${TAG_SUFFIX} \
+    --tag ${IMAGE_NAME}:latest \
+    --build-arg TAG_VERSION=${TAG_VERSION} \
+    --build-arg TAG_SUFFIX=${TAG_SUFFIX} \
+    --build-arg HOST_USER_UID=${HOST_USER_UID} \
+    --build-arg TIMEZONE=${TIMEZONE}
+
diff --git a/readme.md b/readme.md
new file mode 100644
index 0000000..811700d
--- /dev/null
+++ b/readme.md
@@ -0,0 +1,4 @@
+# PHP
+
+A custom php base image with uid 1000.
+
diff --git a/src/Dockerfile b/src/Dockerfile
new file mode 100644
index 0000000..23a060f
--- /dev/null
+++ b/src/Dockerfile
@@ -0,0 +1,90 @@
+ARG TAG_SUFFIX
+FROM php:${TAG_SUFFIX}-alpine
+
+ARG TAG_VERSION
+ARG HOST_USER_UID
+ARG TIMEZONE
+
+LABEL \
+	name="php" \
+	image="sindriainc/php" \
+	tag="${TAG_VERSION}-${TAG_SUFFIX}" \
+	vendor="sindria"
+
+ENV TZ=${TIMEZONE}
+ENV SINDRIA_USER="sindria"
+ENV SINDRIA_USER_HOME="/home/sindria"
+ENV PHP_VERSION=${TAG_SUFFIX}
+
+# Update and install packages
+RUN apk update && \
+    apk add \
+    gcc \
+    g++ \
+    libffi-dev \
+    libc-dev \
+    libressl-dev \
+    bash \
+    curl \
+    wget \
+    git \
+    rsync \
+    ca-certificates \
+    tzdata && \
+    rm -rf /var/cache/apk/*
+
+# Setting app user, timezone and permissions
+RUN addgroup -S ${SINDRIA_USER} -g ${HOST_USER_UID} && adduser -s /bin/bash -S ${SINDRIA_USER} -u ${HOST_USER_UID} -G ${SINDRIA_USER} -h ${SINDRIA_USER_HOME} && \
+    mkdir -p /var/www && \
+    mkdir -p /var/www/app && \
+    ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone && \
+    chmod -R 770 /var/www/app && \
+    chown -R ${SINDRIA_USER}:${SINDRIA_USER} /var/www/app
+
+WORKDIR /var/www/app
+
+# Install php extensions
+RUN apk add \
+    php${PHP_VERSION} \
+    php${PHP_VERSION}-calendar \ 
+    php${PHP_VERSION}-ctype \
+    php${PHP_VERSION}-curl \
+    php${PHP_VERSION}-dom \
+    php${PHP_VERSION}-exif \
+    php${PHP_VERSION}-fileinfo \
+    php${PHP_VERSION}-ftp \
+    php${PHP_VERSION}-gd \
+    php${PHP_VERSION}-gettext \ 
+    php${PHP_VERSION}-iconv \
+    php${PHP_VERSION}-intl \
+    php${PHP_VERSION}-json \
+    php${PHP_VERSION}-mbstring \ 
+    php${PHP_VERSION}-mcrypt \
+    php${PHP_VERSION}-mysql \
+    php${PHP_VERSION}-mysqli \
+    php${PHP_VERSION}-mysqlnd \
+    php${PHP_VERSION}-PDO \
+    php${PHP_VERSION}-Phar \
+    php${PHP_VERSION}-posix \
+    php${PHP_VERSION}-readline \ 
+    php${PHP_VERSION}-shmop \
+    php${PHP_VERSION}-SimpleXML \ 
+    php${PHP_VERSION}-sockets \ 
+    php${PHP_VERSION}-sysvmsg \ 
+    php${PHP_VERSION}-sysvsem \ 
+    php${PHP_VERSION}-sysvshm \
+    php${PHP_VERSION}-tokenizer \ 
+    php${PHP_VERSION}-wddx \
+    php${PHP_VERSION}-xml \
+    php${PHP_VERSION}-xmlreader \
+    php${PHP_VERSION}-xmlwriter \
+    php${PHP_VERSION}-xsl \
+    php${PHP_VERSION}-opcache \ 
+    php${PHP_VERSION}-zip \
+    php${PHP_VERSION}-fpm \
+    php${PHP_VERSION}-bcmath \
+    php${PHP_VERSION}-imap \
+    php${PHP_VERSION}-soap && \
+    rm -rf /var/cache/apk/*
+
+SHELL ["/bin/bash", "-c"]
\ No newline at end of file

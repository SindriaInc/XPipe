name: Core CI Ecommerce

on:
  push:
    branches:
      - 'master'
    paths:
      - Core/xpipe-ecommerce/**/*.*
      - .github/workflows/core-ci-ecommerce-void.yml

defaults:
  run:
    working-directory: Core/xpipe-ecommerce

jobs:
  validate:
    uses: SindriaInc/XPipe/.github/workflows/job-no-validate-global.yml@master
    with:
      COMMON_CONTAINER_STAGING_PATH: ${{ vars.COMMON_CONTAINER_STAGING_PATH }}
      #REPO_SLUG: ${{ vars.REPO_SLUG }}
      REPO_SLUG: "xpipe-ecommerce"
      #RELEASE_VERSION: ${{ vars.RELEASE_VERSION }}
      RELEASE_VERSION: "1.0.2"
  build_amd64:
    uses: SindriaInc/XPipe/.github/workflows/job-ci-buildamd64-global.yml@master
    needs: validate
    secrets:
      _DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      _DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
    with:
      COMMON_CONTAINER_STAGING_PATH: ${{ vars.COMMON_CONTAINER_STAGING_PATH }}
      #REPO_SLUG: ${{ vars.REPO_SLUG }}
      REPO_SLUG: "xpipe-ecommerce"
      #RELEASE_VERSION: ${{ vars.RELEASE_VERSION }}
      RELEASE_VERSION: "1.0.2"
      DOCKERHUB_PRIVATE_NAMESPACE: ${{ vars.DOCKERHUB_PRIVATE_NAMESPACE }}
      DOCKERHUB_NAMESPACE: ${{ vars.DOCKERHUB_NAMESPACE }}
  build_arm64:
    uses: SindriaInc/XPipe/.github/workflows/job-ci-buildarm64-global.yml@master
    needs: validate
    secrets:
      _DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      _DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
    with:
      COMMON_CONTAINER_STAGING_PATH: ${{ vars.COMMON_CONTAINER_STAGING_PATH }}
      #REPO_SLUG: ${{ vars.REPO_SLUG }}
      REPO_SLUG: "xpipe-ecommerce"
      #RELEASE_VERSION: ${{ vars.RELEASE_VERSION }}
      RELEASE_VERSION: "1.0.2"
      DOCKERHUB_PRIVATE_NAMESPACE: ${{ vars.DOCKERHUB_PRIVATE_NAMESPACE }}
      DOCKERHUB_NAMESPACE: ${{ vars.DOCKERHUB_NAMESPACE }}


###

#  build:
#    name: Build
#    needs: validate
#    runs-on: ubuntu-latest
#    steps:
#    - uses: actions/checkout@v2
#    - name: Set env release
#      run: cat VERSION.env >> $GITHUB_ENV
#    - name: Set env slug
#      run: cat REPO.env >> $GITHUB_ENV
#    - uses: docker/setup-qemu-action@v2
#    - name: Login into registry
#      env:
#        DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
#        DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
#      run: echo ${DOCKERHUB_PASSWORD} | docker login --username "${DOCKERHUB_USERNAME}" --password-stdin
#    - name: Build and Publish Image
#      env:
#        DOCKERHUB_PRIVATE_NAMESPACE: ${{ vars.DOCKERHUB_PRIVATE_NAMESPACE }}
#      run: bash build_all.sh ${DOCKERHUB_PRIVATE_NAMESPACE}/${REPO_SLUG} ${RELEASE_VERSION}


  deploy:
    name: Deploy
    needs:
      - build_amd64
      - build_arm64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set env release
        run: cat VERSION.env >> $GITHUB_ENV
      - name: Set env slug
        run: cat REPO.env >> $GITHUB_ENV
      - uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.WOPR_KUBECONFIG }}
        with:
          args: get pods -n xpipe-cloud -o wide
      - uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.WOPR_KUBECONFIG }}
        with:
          args: apply -f IaC/xpipe-cloud/xpipe-ecommerce/namespace.yaml
      - uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.WOPR_KUBECONFIG }}
        with:
          args: apply -f IaC/xpipe-cloud/xpipe-ecommerce/db.yaml
      - uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.WOPR_KUBECONFIG }}
        with:
          args: apply -f IaC/xpipe-cloud/xpipe-ecommerce/idx.yaml
      - uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.WOPR_KUBECONFIG }}
        with:
          args: apply -f IaC/xpipe-cloud/xpipe-ecommerce/configmap.yaml
      - uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.WOPR_KUBECONFIG }}
        with:
          args: apply -f IaC/xpipe-cloud/xpipe-ecommerce/service.yaml
      - uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.WOPR_KUBECONFIG }}
        with:
          args: apply -f IaC/xpipe-cloud/xpipe-ecommerce/ingress.yaml
      - name: SemVer
        run: sed -i -E "s|@@RELEASE_VERSION@@|${RELEASE_VERSION}|g" ../../IaC/xpipe-cloud/xpipe-ecommerce/deployment.yaml
      - uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.WOPR_KUBECONFIG }}
        with:
          args: apply -f IaC/xpipe-cloud/xpipe-ecommerce/deployment.yaml
      - name: Wait
        run: sleep 45
      - uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.WOPR_KUBECONFIG }}
        with:
          args: get pods -n xpipe-cloud -o wide
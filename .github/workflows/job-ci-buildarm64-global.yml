name: Job CI BuildArm64 Global

on:
  workflow_call:
    secrets:
      _DOCKERHUB_USERNAME:
        description: dockerhub
        required: true
      _DOCKERHUB_PASSWORD:
        description: dockerhub
        required: true
    inputs:
      COMMON_CONTAINER_STAGING_PATH:
        description: common
        required: true
        type: string
      REPO_SLUG:
        description: common
        required: true
        type: string
      RELEASE_VERSION:
        description: common
        required: true
        type: string
      DOCKERHUB_PRIVATE_NAMESPACE:
        description: dockerhub
        required: true
        type: string
      DOCKERHUB_NAMESPACE:
        description: dockerhub
        required: true
        type: string

jobs:
  build_amd64:
    name: Build Arm64
    runs-on: ubuntu-latest
    container:
      image: sindriainc/pipeline-az-devops:latest
      env:
        COMMON_CONTAINER_STAGING_PATH: ${{ inputs.COMMON_CONTAINER_STAGING_PATH }}
        REPO_SLUG: ${{ inputs.REPO_SLUG }}
        RELEASE_VERSION: ${{ inputs.RELEASE_VERSION }}
        DOCKERHUB_PRIVATE_NAMESPACE: ${{ inputs.DOCKERHUB_PRIVATE_NAMESPACE }}
        DOCKERHUB_NAMESPACE: ${{ inputs.DOCKERHUB_NAMESPACE }}
        DOCKERHUB_USERNAME: ${{ secrets._DOCKERHUB_USERNAME }}
        DOCKERHUB_PASSWORD: ${{ secrets._DOCKERHUB_PASSWORD }}
      volumes:
        - /staging:/staging
    steps:
      - uses: actions/checkout@v3
      - name: Make Job Cache
        run: |
          ls -la ${COMMON_CONTAINER_STAGING_PATH}
          if [ -d ${COMMON_CONTAINER_STAGING_PATH}/${REPO_SLUG}-${RELEASE_VERSION} ]; then sudo rm -Rf ${COMMON_CONTAINER_STAGING_PATH}/${REPO_SLUG}-${RELEASE_VERSION}; fi
          sudo mkdir -p ${COMMON_CONTAINER_STAGING_PATH}/${REPO_SLUG}-${RELEASE_VERSION}
          sudo chmod 777 ${COMMON_CONTAINER_STAGING_PATH}/${REPO_SLUG}-${RELEASE_VERSION}
          ls -la ${COMMON_CONTAINER_STAGING_PATH}
      - uses: docker/setup-qemu-action@v2
      - name: Login into registry
        run: echo ${DOCKERHUB_PASSWORD} | docker login --username "${DOCKERHUB_USERNAME}" --password-stdin
      - name: Build
        run: |
          bash build_arm64.sh ${DOCKERHUB_PRIVATE_NAMESPACE}/${REPO_SLUG} ${RELEASE_VERSION}
          docker save ${DOCKERHUB_PRIVATE_NAMESPACE}/${REPO_SLUG}:${RELEASE_VERSION}-arm64v8 --output "${REPO_SLUG}-${RELEASE_VERSION}-arm64v8.tar"
          mkdir -p dist
          cp ${REPO_SLUG}-${RELEASE_VERSION}-arm64v8.tar dist
          cowsay -f tux "Build Success"
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist
      - name: Purge Job Cache
        run: |
          ls -la ${COMMON_CONTAINER_STAGING_PATH}
          sudo rm -Rf ${COMMON_CONTAINER_STAGING_PATH}/${REPO_SLUG}-${RELEASE_VERSION}
          ls -la ${COMMON_CONTAINER_STAGING_PATH}
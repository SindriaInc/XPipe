name: Job noOps Publish Global

on:
  workflow_call:
    secrets:
      _AWS_ACCESS_KEY_ID:
        description: aws
        required: true
      _AWS_SECRET_ACCESS_KEY:
        description: aws
        required: true
    inputs:
      COMMON_CONTAINER_STAGING_PATH:
        description: common
        required: true
        type: string
      REPO_SLUG:
        description: common
        required: true
        type: string
      RELEASE_VERSION:
        description: common
        required: true
        type: string
      AWS_DEFAULT_REGION:
        description: aws
        required: true
        type: string
      MONOREPO_BUSINESS_DOMAIN:
        description: monorepo
        required: false
        type: string
      MONOREPO_CORE_MAJOR_VERSION:
        description: monorepo
        required: true
        type: string
      MONOREPO_BUSINESS_ROLE:
        description: monorepo
        required: true
        type: string

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest
    container:
      image: sindriainc/pipeline-az-devops:2.0.0
      env:
        COMMON_CONTAINER_STAGING_PATH: ${{ inputs.COMMON_CONTAINER_STAGING_PATH }}
        REPO_SLUG: ${{ inputs.REPO_SLUG }}
        RELEASE_VERSION: ${{ inputs.RELEASE_VERSION }}
        AWS_ACCESS_KEY_ID: ${{ secrets._AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets._AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ inputs.AWS_DEFAULT_REGION }}
        MONOREPO_BUSINESS_DOMAIN: ${{ inputs.MONOREPO_BUSINESS_DOMAIN }}
        MONOREPO_CORE_MAJOR_VERSION: ${{ inputs.MONOREPO_CORE_MAJOR_VERSION }}
        MONOREPO_BUSINESS_ROLE: ${{ inputs.MONOREPO_BUSINESS_ROLE }}
      volumes:
        - /staging:/staging
    steps:
      - uses: actions/checkout@v3
      - name: Make Job Cache
        run: |
          ls -la ${COMMON_CONTAINER_STAGING_PATH}
          if [ -d ${COMMON_CONTAINER_STAGING_PATH}/${REPO_SLUG}-${RELEASE_VERSION} ]; then sudo rm -Rf ${COMMON_CONTAINER_STAGING_PATH}/${REPO_SLUG}-${RELEASE_VERSION}; fi
          sudo mkdir -p ${COMMON_CONTAINER_STAGING_PATH}/${REPO_SLUG}-${RELEASE_VERSION}
          sudo chmod 777 ${COMMON_CONTAINER_STAGING_PATH}/${REPO_SLUG}-${RELEASE_VERSION}
          ls -la ${COMMON_CONTAINER_STAGING_PATH}

      - name: Publish S3
        run: |
          echo ${COMMON_CONTAINER_STAGING_PATH}
          echo ${REPO_SLUG}
          echo ${RELEASE_VERSION}
          sudo docker run --rm -t --env REPO_SLUG=${REPO_SLUG} --env RELEASE_VERSION=${RELEASE_VERSION} -v ${COMMON_CONTAINER_STAGING_PATH}/${REPO_SLUG}-${RELEASE_VERSION}:${COMMON_CONTAINER_STAGING_PATH} sindriainc/xpipe-no-validate-release:1.0.0
          ls -la ${COMMON_CONTAINER_STAGING_PATH}/${REPO_SLUG}-${RELEASE_VERSION}
          if [ -e ${COMMON_CONTAINER_STAGING_PATH}/${REPO_SLUG}-${RELEASE_VERSION}/pipeline.lock ]; then exit 1; fi

#      - uses: actions/upload-artifact@v4
#        with:
#          name: dist_validated
#          path: dist_validated

      - name: Purge Job Cache
        run: |
          ls -la ${COMMON_CONTAINER_STAGING_PATH}
          sudo rm -Rf ${COMMON_CONTAINER_STAGING_PATH}/${REPO_SLUG}-${RELEASE_VERSION}
          ls -la ${COMMON_CONTAINER_STAGING_PATH}
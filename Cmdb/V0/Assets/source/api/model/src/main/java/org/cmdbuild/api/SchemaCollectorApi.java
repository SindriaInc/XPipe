/*
 * CMDBuild has been developed and is managed by Tecnoteca srl
 You can use, distribute, edit CMDBuild according to the license
 */
package org.cmdbuild.api;

/**
 *
 * @author afelice
 */
public interface SchemaCollectorApi {

    /**
     * Collect <i>schema</i> serialization for current system.
     *
     * @param curSystemId
     * @param curSystemMnemonicName
     * @return name of <b>temporary</B> file containing generated serialization.
     */
    String collectSchema(String curSystemMnemonicName, String curSystemId);

    /**
     *
     * @param otherSchemaSerialization name of <b>temporary</B> file containing
     * already generated <i>schema</i> serialization.
     * @param curSystemMnemonicName current system mnemonic name.
     * @return
     */
    String compareSchema(String otherSchemaSerialization, String curSystemMnemonicName);

    /**
     * 
     * @param newSchemaSerialization name of <b>temporary</B> file containing a
     * already generated <i>schema</i> serialization that wants to be replicated.
     * @param aSchemaSerialization name of <b>temporary</B> file containing
     * another already generated <i>schema</i> serialization current state.
     * @return 
     */
    String compareSchemaBetween(String newSchemaSerialization, String aSchemaSerialization);

    /**
     * 
     * @param diffSchemaSerialization name of <b>temporary</B> file containing a 
     * comparison of two <i>schemas</i>, generated by:
     * <ul>
     * <li>{@link #compareSchema(java.lang.String) };
     * <li>{@link #compareSchema(java.lang.String, java.lang.String) };
     * <li>{@link #compareSchemaBetween(java.lang.String, java.lang.String) }.
     * </ul>
     * @return 
     */
    String applySchemaDiff(String diffSchemaSerialization);
    
    /**
     * Used to test connection from CMDBuild CLI.
     * 
     * @param any
     * @return 
     */
    default String test(String any) {
        return any;
    }
}

# yaml-language-server: $schema=http://team.cmdbuild.org/resources/cmdbuild/etl/waterway/config/v1/schema.json

# TODO system tag ??
tag: system 

items:
    - gate: SystemReportBatchService
      processing: batch
      handlers:
        - type: script
          script: |

            import static org.cmdbuild.utils.lang.CmConvertUtils.parseEnum;
            import static org.cmdbuild.utils.json.CmJsonUtils.fromJson;
            import static org.cmdbuild.utils.json.CmJsonUtils.MAP_OF_OBJECTS;

            def report = cmdb.system().getService(org.cmdbuild.report.ReportService.class).getById(reportId as long);
            
            logger.debug("execute batch report =< {} >", report);
            
            def reportBegin = cmdb.utils().getTemplateOrNull("SystemReportBatchServiceBeginNotification") != null ? "SystemReportBatchServiceBeginNotification" : "SystemReportBatchServiceBeginNotificationDefault";
            cmdb.newMail().fromTemplate(reportBegin, "batchId", batchId, 'reportDescr', report.description).withTo(username).send();

            def reportData = cmdb.impersonate().username(username).group(group).then()
                .system().getService(org.cmdbuild.report.ReportService.class)
                .executeReportAndDownload(reportId as Long, parseEnum(extension, org.cmdbuild.report.ReportFormat.class), fromJson(parameters, MAP_OF_OBJECTS));

            logger.debug("executed batch report, got report data =< {} >", reportData);
            
            def tempId = cmdb.system().getService(org.cmdbuild.temp.TempService.class).putTempData(reportData);

            logger.debug("stored report with tempId =< {} >, send notification", tempId);
            
            def reportComplete = cmdb.utils().getTemplateOrNull("SystemReportBatchServiceCompleteNotification") != null ? "SystemReportBatchServiceCompleteNotification" : "SystemReportBatchServiceCompleteNotificationDefault";
            cmdb.newMail().fromTemplate(reportComplete, "batchId", batchId, 'reportDescr', report.description, "tempId", tempId, "fileName", reportData.name).withTo(username).send();
            
            return reportData;

name: Pipeline CI Ingress

on:
  push:
    branches:
      - 'master'

env:
  BLUE: '\033[0;34m'
  YELLOW: '\033[0;33m'
  RED: '\033[0;31m'
  NC: '\033[0m' #No Color
  CONTAINER_APP_CODE_CONTEXT: ${{ secrets.CONTAINER_APP_CODE_CONTEXT }}
  CONTAINER_APP_CODE_PATH: ${{ secrets.CONTAINER_APP_CODE_PATH }}
  CONTAINER_STAGING_CODE_PATH: ${{ secrets.CONTAINER_STAGING_CODE_PATH }}
  REPO_SLUG: ${{ github.event.repository.name }}
  RELEASE_VERSION: ${GITHUB_REF_NAME}
  DOCKERHUB_NAMESPACE: ${{ secrets.DOCKERHUB_NAMESPACE }}
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
  IAC_GIT_USERNAME: ${{ secrets.IAC_GIT_USERNAME }}
  IAC_GIT_PASSWORD: ${{ secrets.IAC_GIT_PASSWORD }}
  IAC_GIT_ACCESS_TOKEN: ${{ secrets.IAC_GIT_ACCESS_TOKEN }}
  IAC_GIT_PROTOCOL: ${{ secrets.IAC_GIT_PROTOCOL }}
  IAC_GIT_PROVIDER: ${{ secrets.IAC_GIT_PROVIDER }}
  IAC_GIT_NAMESPACE: ${{ secrets.IAC_GIT_NAMESPACE }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  BASE_PATH: ${{ secrets.BASE_PATH }}
  IAC_CERTBOT_CACHE: ${{ secrets.IAC_CERTBOT_CACHE }}
  IAC_CERTBOT_DOMAIN: ${{ secrets.IAC_CERTBOT_DOMAIN }}
  IAC_CERTBOT_EMAIL: ${{ secrets.IAC_CERTBOT_EMAIL }}
  IAC_INVENTORY_CACHE: ${{ secrets.IAC_INVENTORY_CACHE }}
  IAC_INVENTORY_NAME: ${{ secrets.IAC_INVENTORY_NAME }}
  IAC_INVENTORY_REMOTE: ${{ secrets.IAC_INVENTORY_REMOTE }}
  IAC_PRIVATE_KEY: ${{ secrets.IAC_PRIVATE_KEY }}
  IAC_REMOTE_USER: ${{ secrets.IAC_REMOTE_USER }}

jobs:
  build_certs:
    name: Build Certs job
    runs-on: ubuntu-latest
    container:
      image: sindriainc/build-certs-route53:1.0.0
      volumes:
        - /staging:/staging
    steps:
    - uses: actions/checkout@v2
    - name: Build Certs
      run: |
        echo -e "${BLUE}Init certbot cache...${NC}"
        mkdir -p /etc/letsencrypt
        aws s3 sync s3://${IAC_CERTBOT_CACHE} /etc/letsencrypt
        echo -e "${BLUE}Cleanup symblinks...${NC}"
        rm -f /etc/letsencrypt/live/${IAC_CERTBOT_DOMAIN}/*.pem || true
        ln -s /etc/letsencrypt/archive/${IAC_CERTBOT_DOMAIN}/cert*.pem /etc/letsencrypt/live/${IAC_CERTBOT_DOMAIN}/cert.pem || true
        ln -s /etc/letsencrypt/archive/${IAC_CERTBOT_DOMAIN}/chain*.pem /etc/letsencrypt/live/${IAC_CERTBOT_DOMAIN}/chain.pem || true
        ln -s /etc/letsencrypt/archive/${IAC_CERTBOT_DOMAIN}/fullchain*.pem /etc/letsencrypt/live/${IAC_CERTBOT_DOMAIN}/fullchain.pem || true
        ln -s /etc/letsencrypt/archive/${IAC_CERTBOT_DOMAIN}/privkey*.pem /etc/letsencrypt/live/${IAC_CERTBOT_DOMAIN}/privkey.pem || true
        echo -e "${BLUE}Building certs...${NC}"
        certbot renew -n --agree-tos --dns-route53 --dns-route53-propagation-seconds 60 --cert-name ${IAC_CERTBOT_DOMAIN} -m ${IAC_CERTBOT_EMAIL} || certbot certonly -n --agree-tos --dns-route53 --dns-route53-propagation-seconds 60 -d ${IAC_CERTBOT_DOMAIN} -d *.${IAC_CERTBOT_DOMAIN} -m ${IAC_CERTBOT_EMAIL}
        echo -e "${BLUE}Updating certbot cache...${NC}"
        aws s3 sync /etc/letsencrypt s3://${IAC_CERTBOT_CACHE}

  build_publish:
    name: Build Ingress Job
    runs-on: ubuntu-latest
    container:
      image: sindriainc/pipeline:latest
      volumes:
        - /staging:/staging
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v2
      - name: Login into registry
        run: echo ${DOCKERHUB_PASSWORD} | docker login --username "${DOCKERHUB_USERNAME}" --password-stdin
      - name: Build Certs
        #uses: docker://sindriainc/pipeline:latest
        ##with:
        ##  entrypoint: docker run --rm -t --env IAC_MODE=${IAC_MODE} --env AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} --env AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} --env AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION} --env IAC_CERTBOT_CACHE=${IAC_CERTBOT_CACHE} --env IAC_CERTBOT_EMAIL=${IAC_CERTBOT_EMAIL} --env IAC_CERTBOT_DOMAIN=${IAC_CERTBOT_DOMAIN} sindriainc/build-certs-route53:1.0.0
        run: |
          docker run --rm -t --env IAC_MODE=${IAC_MODE} --env AWS_ACCESS_KEY_ID=${INPUT_AWS_ACCESS_KEY_ID} --env AWS_SECRET_ACCESS_KEY=${INPUT_AWS_SECRET_ACCESS_KEY} --env AWS_DEFAULT_REGION=${INPUT_AWS_DEFAULT_REGION} --env IAC_CERTBOT_CACHE=${INPUT_IAC_CERTBOT_CACHE} --env IAC_CERTBOT_EMAIL=${INPUT_IAC_CERTBOT_EMAIL} --env IAC_CERTBOT_DOMAIN=${INPUT_IAC_CERTBOT_DOMAIN} sindriainc/build-certs-route53:1.0.0
          cowsay -f pikachu "Build Success"
      - name: Build
        run: bash build.sh ${DOCKERHUB_NAMESPACE}/${REPO_SLUG} ${RELEASE_VERSION}
-- legacy function cleanup


 
DO $$ DECLARE
	_domain regclass;
BEGIN
	ALTER TABLE "Map" ALTER COLUMN "Id" SET DEFAULT _cm3_utils_new_card_id();
	FOR _domain IN SELECT _cm3_domain_list() LOOP		
		EXECUTE format('ALTER TABLE %s ALTER COLUMN "Id" SET DEFAULT _cm3_utils_new_card_id()', _domain);
	END LOOP;
END $$ LANGUAGE PLPGSQL; 

-- enable this once all legacy function references have been cleared up

-- DO $$ DECLARE
-- 	_record record;
-- BEGIN
-- 	FOR _record IN SELECT * FROM pg_proc WHERE proname IN ('_cm_split_cmname','_cm_cmschema','_cm_cmtable','_cm_cmschema','_cm_cmtable','_cm_domain_cmname','_cm_history_cmname','_cm_table_dbname_unsafe','_cm_table_dbname','_cm_table_id','_cm_domain_dbname_unsafe','_cm_domain_dbname','_cm_domain_id','_cm_history_dbname_unsafe','_cm_history_dbname','_cm_history_id','_cm_cmtable_lc','_cm_cmtable_lc','_cm_classpk_name','_cm_classidx_name','_cm_domainidx_name','_cm_classfk_name','_cm_classfk_name','_cm_domain_cmname_lc','_cm_domainpk_name','_cm_historypk_name','_cm_historyfk_name','_cm_unique_index_name','_cm_unique_index_id','_cm_update_reference_trigger_name','_cm_update_relation_trigger_name','_cm_notnull_constraint_name','_cm_comment_set_parts','_cm_concat','_cm_comment_add_parts','_cm_comment_for_table_id','_cm_read_comment','_cm_comment_for_cmobject','_cm_is_cmobject','_cm_comment_for_attribute','_cm_comment_for_class','_cm_comment_for_domain','_cm_check_comment','_cm_read_domain_cardinality','_cm_domain_cardinality','_cm_domain_direction','_cm_get_attribute_default','_cm_get_sqltype_string','_cm_get_attribute_sqltype','_cm_attribute_is_notnull','_cm_attribute_is_inherited','_cm_subclassid','_cm_dest_classid_for_domain_attribute','_cm_dest_reference_classid','_cm_get_domain_reference_target_comment','_cm_read_reference_domain_comment','_cm_read_reference_domain_id_comment','_cm_get_reference_domain_id','_cm_is_reference_comment','_cm_read_reference_target_comment','_cm_read_reference_target_id_comment','_cm_read_reference_type_comment','_cm_get_fk_target_comment','_cm_get_fk_target','_cm_get_fk_target_table_id','_cm_get_ref_source_id_domain_attribute','_cm_get_ref_source_class_domain_attribute','_cm_get_ref_target_id_domain_attribute','_cm_get_lookup_type_comment','_cm_get_type_comment','_cm_is_any_class_comment','_cm_is_simpleclass_comment','_cm_is_domain_comment','_cm_is_active_comment','_cm_is_superclass_comment','_cm_is_simpleclass','_cm_is_simpleclass','_cm_is_superclass','_cm_is_superclass','_cm_is_any_class','_cm_is_system','_cm_get_geometry_type','_cm_is_geometry_type','_cm_class_list','_cm_subtables_and_itself','_cm_parent_id','_cm_is_process','_cm_is_process','_cm_domain_list','_cm_attribute_list','_cm_attribute_list_cs','_cm_join_cmname','_cm_new_card_id','_cm_create_index','_cm_string_agg','_cm_string_agg','_cm_get_safe_classorder','_cm_create_class_default_order_indexes','_cm_trigger_when','_cm_trigger_row_or_statement','_cm_copy_trigger','_cm_remove_constraint_trigger','_cm_trigger_create_card_history_row','_cm_add_class_history_trigger','_cm_trigger_create_relation_history_row','_cm_add_domain_history_trigger','_cm_trigger_sanity_check','_cm_add_class_sanity_check_trigger','_cm_add_domain_sanity_check_trigger','_cm_trigger_sanity_check_simple','_cm_add_simpleclass_sanity_check_trigger','_cm_trigger_cascade_delete_on_relations','_cm_add_class_cascade_delete_on_relations_trigger','_cm_trigger_restrict','_cm_add_restrict_trigger','_cm_copy_restrict_trigger','_cm_zero_rownum_sequence','_cm_trigger_update_relation','_cm_add_update_relation_trigger','_cm_copy_update_relation_trigger','_cm_trigger_fk','_cm_add_fk_trigger','_cm_copy_fk_trigger','_cm_trigger_update_reference','_cm_add_update_reference_trigger','_cm_disable_triggers_recursively','_cm_enable_triggers_recursively','_cm_copy_superclass_attribute_comments','_cm_create_class_indexes','_cm_create_class_history','_cm_create_class_triggers','_cm_table_is_empty','_cm_class_has_children','_cm_class_has_domains','_cm_create_schema_if_needed','_cm_attribute_root_table_id','_cm_propagate_superclass_triggers','_cm_delete_local_attributes','cm_create_class','cm_modify_class','cm_delete_class','cm_delete_card','cm_create_class','cm_modify_class','cm_delete_class','system_class_create','system_class_modify','system_class_delete','_cm_restrict','_cm_setnull','_cm_cascade','_cm_check_value_exists','_cm_check_id_exists','_cm_attribute_is_unique','_cm_attribute_set_uniqueness_unsafe','_cm_attribute_set_uniqueness','_cm_set_attribute_comment','_cm_add_fk_constraints','_cm_remove_fk_constraints','_cm_attribute_is_local','_cm_remove_attribute_triggers','_cm_remove_reference_handling','_cm_attribute_is_empty','_cm_add_reference_handling','_cm_drop_triggers_recursively','_cm_update_relation','_cm_check_attribute_comment_and_type','_cm_insert_relation','_cm_delete_relation','_cm_update_reference','_cm_attribute_default_to_src','_cm_set_attribute_default','_cm_attribute_notnull_is_check','_cm_attribute_set_notnull_unsafe','_cm_attribute_set_notnull','_cm_add_spherical_mercator','cm_create_attribute','cm_modify_attribute','cm_modify_attribute','cm_delete_attribute','cm_create_class_attribute','cm_modify_class_attribute','cm_delete_class_attribute','cm_create_domain_attribute','cm_modify_domain_attribute','cm_delete_domain_attribute','system_domain_create','system_attribute_create','system_attribute_modify','system_attribute_delete','_cm_create_domain_indexes','_cm_create_domain_triggers','cm_create_domain','cm_modify_domain','cm_delete_domain','cm_modify_domain','cm_delete_domain','_cm_legacy_read_comment','system_domain_modify','system_domain_delete','cm_set_translationuuid','_cm_legacy_get_menu_type','_cm_legacy_get_menu_code','_cm_function_list','_cmf_class_description','_cmf_is_displayable','cmf_active_cards_for_class','cmf_count_active_cards','_cm_create_class_default_order_indexes','_bim_carddata_from_globalid','cm_attribute_exists','_bim_set_coordinates','_bim_set_room_geometry','_bim_store_data','_bim_create_function_for_export','_bim_update_coordinates','_graph_get_related_classes') LOOP
-- 		IF EXISTS (SELECT * FROM pg_proc WHERE oid = _record.oid) THEN
-- 			RAISE NOTICE 'drop function %', _record.oid::regprocedure;		
-- 			EXECUTE format('DROP FUNCTION %s CASCADE', _record.oid::regprocedure);
-- 		END IF;
-- 	END LOOP;
-- END $$ LANGUAGE PLPGSQL;

